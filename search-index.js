var searchIndex = JSON.parse('{\
"anstream":{"doc":"<strong>Auto-adapting <code>stdout</code> / <code>stderr</code> streams</strong>","t":"NNNDDEIQNIDALLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLOOOFFLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Always","AlwaysAnsi","Auto","AutoStream","Buffer","ColorChoice","Lockable","Locked","Never","RawStream","StripStream","adapter","always","always_ansi","as_bytes","as_ref","auto","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","choice","clone","clone","clone_into","clone_into","default","default","eprint","eprintln","eq","eq","equivalent","equivalent","flush","flush","flush","fmt","fmt","fmt","fmt","from","from","from","from","global","into","into","into","into","into_inner","into_inner","is_terminal","is_terminal","is_terminal","is_terminal","is_terminal","lock","lock","lock","lock","never","new","new","new","panic","print","println","stderr","stdout","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_capacity","write","write","write","write_all","write_all","write_global","StripBytes","StripBytesIter","StripStr","StripStrIter","StrippedBytes","StrippedStr","WinconBytes","WinconBytesIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extract_next","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","new","new","new","new","next","next","next","next","next","strip_bytes","strip_next","strip_next","strip_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"anstream"],[95,"anstream::adapter"]],"d":["","","","<code>std::io::Write</code> that adapts ANSI escape codes to the …","In-memory <code>RawStream</code>","Selection for overriding color output Selection for …","Explicitly lock a <code>std::io::Write</code>able","","","Required functionality for underlying <code>std::io::Write</code> for …","Only pass printable data to the inner <code>Write</code>","Gracefully degrade styled output","Force color, no matter what the inner <code>Write</code> supports.","Force ANSI escape codes to be passed through as-is, no …","","","Auto-adapt for the stream’s capabilities","","","","","","","","","Report the desired choice for the given stream","","","","","","","Prints to <code>stderr</code>.","Prints to <code>stderr</code>, with a newline.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the current <code>ColorChoice</code> state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the wrapped <code>RawStream</code>","Get the wrapped <code>RawStream</code>","","","","","","Get exclusive access to the <code>AutoStream</code>","Get exclusive access to the <code>AutoStream</code>","","","Only pass printable data to the inner <code>Write</code>.","","Runtime control over styling behavior","Only pass printable data to the inner <code>Write</code>","Panics the current thread.","Prints to <code>stdout</code>.","Prints to <code>stdout</code>, with a newline.","Create an ANSI escape code compatible stderr","Create an ANSI escape code compatible stdout","","","","","","","","","","","","","","","","","","","","","Override the detected <code>ColorChoice</code>","Incrementally strip non-contiguous data","See <code>StripBytes</code>","Incrementally strip non-contiguous data","See <code>StripStr</code>","See <code>strip_bytes</code>","See <code>strip_str</code>","Incrementally convert to wincon calls for non-contiguous …","See <code>WinconBytes</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Strip the next slice of bytes","Strip the next segment of data","","<strong>Note:</strong> this does <em>not</em> exhaust the <code>Iterator</code>","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create a <code>Vec</code> of the printable content","Report the bytes has been exhausted","Initial state","See <code>strip_bytes</code>","Initial state","Initial state","","","","","","Strip ANSI escapes from bytes, returning the printable …","Strip the next segment of data","Strip the next segment of data","Strip ANSI escapes from a <code>&amp;str</code>, returning the printable …","","","","","","Create a <code>String</code> of the printable content","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,6,6,0,0,0,0,15,6,0,0,0,2,2,3,3,2,6,3,2,9,6,3,2,9,2,6,3,6,3,6,3,0,0,6,3,6,3,3,2,9,6,3,2,9,6,3,2,9,6,6,3,2,9,2,9,3,2,2,9,9,15,2,2,9,2,3,2,9,0,0,0,0,0,6,3,6,3,2,9,6,3,2,9,6,3,2,9,3,3,2,9,2,9,6,0,0,0,0,0,0,0,0,20,21,25,22,23,26,24,27,20,21,25,22,23,26,24,27,20,21,22,23,24,20,21,22,23,24,20,21,22,23,24,20,21,25,22,23,26,24,27,20,21,25,22,23,26,24,27,22,24,20,20,21,25,22,23,26,24,27,20,21,25,22,23,26,24,27,20,21,25,22,23,26,24,27,20,25,22,26,27,22,22,21,22,23,24,20,25,22,26,27,0,21,23,0,20,21,22,23,24,20,20,20,21,25,22,23,26,24,27,20,21,25,22,23,26,24,27,20,21,25,22,23,26,24,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1]]]],[1,[[2,[1]]]],[3,[[5,[4]]]],[3,[[5,[4]]]],[1,[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,6],[6,6],[3,3],[[]],[[]],[[],6],[[],3],0,0,[[6,6],7],[[3,3],7],[[],7],[[],7],[3,8],[[[2,[1]]],8],[[[9,[1]]],8],[[6,10],[[12,[11]]]],[[3,10],13],[[[2,[[0,[14,1]]]],10],13],[[[9,[14]],10],13],[[]],[[]],[[]],[[]],[[],6],[[]],[[]],[[]],[[]],[[[2,[1]]],1],[[[9,[1]]],1],[3,7],[[[2,[1]]],7],[[[2,[1]]],7],[[[9,[1]]],7],[[[9,[1]]],7],[[]],[[[2,[[0,[15,1]]]]]],[[[2,[[0,[15,1]]]]]],[[[9,[15]]]],[1,[[2,[1]]]],[[],3],[[1,6],[[2,[1]]]],[1,[[9,[1]]]],0,0,0,[[],[[2,[16]]]],[[],[[2,[17]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],18],[[],18],[[],18],[[],18],[19,3],[[3,[5,[4]]],[[8,[19]]]],[[[2,[1]],[5,[4]]],[[8,[19]]]],[[[9,[1]],[5,[4]]],[[8,[19]]]],[[[2,[1]],[5,[4]]],8],[[[9,[1]],[5,[4]]],8],[6],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[22,22],[23,23],[24,24],[[]],[[]],[[]],[[]],[[]],[[],20],[[],21],[[],22],[[],23],[[],24],[[20,20],7],[[21,21],7],[[25,25],7],[[22,22],7],[[23,23],7],[[26,26],7],[[24,24],7],[[27,27],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[22,[5,[4]]]],[[24,[5,[4]]],27],[[20,10],13],[[20,10],13],[[21,10],13],[[25,10],13],[[22,10],13],[[23,10],13],[[26,10],13],[[24,10],13],[[27,10],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[28,[4]]]],[22,7],[[],21],[[[5,[4]]],22],[[],23],[[],24],[20,29],[25,29],[22,29],[26,29],[27,29],[[[5,[4]]],22],[[21,30],25],[[23,[5,[4]]],26],[30,20],[[]],[[]],[[]],[[]],[[]],[20,31],[[],31],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18]],"c":[],"p":[[8,"RawStream"],[3,"AutoStream"],[3,"Buffer"],[15,"u8"],[15,"slice"],[4,"ColorChoice"],[15,"bool"],[6,"Result"],[3,"StripStream"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Debug"],[8,"Lockable"],[3,"Stderr"],[3,"Stdout"],[3,"TypeId"],[15,"usize"],[3,"StrippedStr"],[3,"StripStr"],[3,"StrippedBytes"],[3,"StripBytes"],[3,"WinconBytes"],[3,"StripStrIter"],[3,"StripBytesIter"],[3,"WinconBytesIter"],[3,"Vec"],[4,"Option"],[15,"str"],[3,"String"]]},\
"anstyle":{"doc":"ANSI Text Styling","t":"NNDESSNNNNNNNNNNSENSSSSDDNSSSNNDNDSDSNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Ansi","Ansi256","Ansi256Color","AnsiColor","BLINK","BOLD","Black","Blue","BrightBlack","BrightBlue","BrightCyan","BrightGreen","BrightMagenta","BrightRed","BrightWhite","BrightYellow","CURLY_UNDERLINE","Color","Cyan","DASHED_UNDERLINE","DIMMED","DOTTED_UNDERLINE","DOUBLE_UNDERLINE","EffectIter","Effects","Green","HIDDEN","INVERT","ITALIC","Magenta","Red","Reset","Rgb","RgbColor","STRIKETHROUGH","Style","UNDERLINE","White","Yellow","b","bg_color","bitor","bitor","bitor_assign","bitor_assign","blink","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bright","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","default","default","default","dimmed","effects","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fg_color","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ansi","g","get_bg_color","get_effects","get_fg_color","get_underline_color","hash","hash","hash","hash","hash","hash","hash","hidden","index","insert","into","into","into","into","into","into","into","into","into_ansi","into_iter","invert","is_bright","is_plain","is_plain","italic","iter","new","new","next","on","on","on","on","on_default","on_default","on_default","on_default","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","remove","render","render","render","render_bg","render_bg","render_bg","render_bg","render_fg","render_fg","render_fg","render_fg","render_reset","set","strikethrough","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline_color","write_reset_to","write_to"],"q":[[0,"anstyle"]],"d":["","","256 (8-bit) color support","Available 4-bit ANSI color palette codes","","","Black: #0 (foreground code <code>30</code>, background code <code>40</code>).","Blue: #4 (foreground code <code>34</code>, background code <code>44</code>).","Bright black: #0 (foreground code <code>90</code>, background code <code>100</code>).","Bright blue: #4 (foreground code <code>94</code>, background code <code>104</code>).","Bright cyan: #6 (foreground code <code>96</code>, background code <code>106</code>).","Bright green: #2 (foreground code <code>92</code>, background code <code>102</code>).","Bright magenta: #5 (foreground code <code>95</code>, background code <code>105</code>…","Bright red: #1 (foreground code <code>91</code>, background code <code>101</code>).","Bright white: #7 (foreground code <code>97</code>, background code <code>107</code>).","Bright yellow: #3 (foreground code <code>93</code>, background code <code>103</code>…","","Any ANSI color code scheme","Cyan: #6 (foreground code <code>36</code>, background code <code>46</code>).","","","","","","A set of text effects","Green: #2 (foreground code <code>32</code>, background code <code>42</code>).","","Swap foreground and background colors; inconsistent …","Not widely supported. Sometimes treated as inverse or blink","Magenta: #5 (foreground code <code>35</code>, background code <code>45</code>).","Red: #1 (foreground code <code>31</code>, background code <code>41</code>).","Reset terminal formatting","","24-bit ANSI RGB color codes","Characters legible but marked as if for deletion. Not …","ANSI Text styling","Style extensions exist for Kitty, VTE, mintty and iTerm2.","White: #7 (foreground code <code>37</code>, background code <code>47</code>).","Yellow: #3 (foreground code <code>33</code>, background code <code>43</code>).","","Set background color","","","","","Apply <code>blink</code> effect","Apply <code>bold</code> effect","","","","","","","","","","","","","","","","","Change the color to/from bright","Reset all effects in-place","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all of the effects in <code>other</code> are contained …","","","","Apply <code>dimmed</code> effect","Set text effects","","","","","","","","","","","","","","","","","","Set foreground color","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Apply <code>hidden</code> effect","","Inserts the specified effects in-place.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Apply <code>invert</code> effect","Report whether the color is bright","Check if no effects are enabled","Check if no effects are enabled","Apply <code>italic</code> effect","Iterate over enabled effects","No effects enabled","No effects enabled","","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","","","","","","","","","Removes the specified effects in-place.","Render the ANSI code","Render the ANSI code","Render the ANSI code","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Renders the relevant <code>Reset</code> code","Enable or disable the specified effects depending on the …","Apply <code>strikethrough</code> effect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply <code>underline</code> effect","Set underline color","Write the relevant <code>Reset</code> code","Write the ANSI code"],"i":[4,4,0,0,6,6,7,7,7,7,7,7,7,7,7,7,6,0,7,6,6,6,6,0,0,7,6,6,6,7,7,0,4,0,6,0,6,7,7,1,3,6,3,6,3,3,3,4,7,9,1,6,10,11,3,4,7,9,1,6,10,11,3,7,6,4,7,9,1,6,10,11,3,4,7,9,1,6,10,11,3,4,7,9,1,6,11,3,6,6,11,3,3,3,4,7,9,1,6,10,11,3,3,4,7,9,1,6,10,11,3,3,4,7,9,1,6,10,11,3,4,4,4,4,4,4,7,9,9,9,1,1,6,10,11,3,3,9,1,3,3,3,3,4,7,9,1,6,11,3,3,9,6,4,7,9,1,6,10,11,3,9,10,3,7,6,3,3,6,6,3,10,4,7,9,1,4,7,9,1,4,7,9,1,6,11,3,1,6,6,11,3,4,7,9,1,4,7,9,1,3,6,3,6,3,6,3,4,7,9,1,6,10,11,3,4,7,9,1,6,10,11,3,4,7,9,1,6,10,11,3,4,7,9,1,6,10,11,3,3,3,3,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,[5,[4]]],3],[[6,6],6],[[3,6],3],[[6,6]],[[3,6]],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,8],7],[6,6],[4,4],[7,7],[9,9],[1,1],[6,6],[10,10],[11,11],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],12],[[7,7],12],[[9,9],12],[[1,1],12],[[6,6],12],[[11,11],12],[[3,3],12],[[6,6],8],[[],6],[[],11],[[],3],[3,3],[[3,6],3],[[4,4],8],[[7,7],8],[[9,9],8],[[1,1],8],[[6,6],8],[[10,10],8],[[11,11],8],[[3,3],8],[[3,6],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[3,[5,[4]]],3],[[4,13],14],[[7,13],14],[[9,13],14],[[1,13],14],[[6,13],14],[[10,13],14],[[11,13],14],[[3,13],14],[2,4],[[]],[7,4],[9,4],[1,4],[[],4],[[]],[7,9],[2,9],[[]],[[]],[[],1],[[]],[[]],[[]],[6,3],[[]],[7,9],[1,2],[3,[[5,[4]]]],[3,6],[3,[[5,[4]]]],[3,[[5,[4]]]],[[4,15]],[[7,15]],[[9,15]],[[1,15]],[[6,15]],[[11,15]],[[3,15]],[3,3],[9,2],[[6,6],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[5,[7]]]],[[]],[3,3],[7,8],[6,8],[3,8],[3,3],[6,10],[[],6],[[],3],[10,5],[[4,[16,[4]]],3],[[7,[16,[4]]],3],[[9,[16,[4]]],3],[[1,[16,[4]]],3],[4,3],[7,3],[9,3],[1,3],[[4,4],[[5,[12]]]],[[7,7],[[5,[12]]]],[[9,9],[[5,[12]]]],[[1,1],[[5,[12]]]],[[6,6],[[5,[12]]]],[[11,11],[[5,[12]]]],[[3,3],[[5,[12]]]],[1,2],[[6,6],6],[6,17],[11,17],[3,17],[4,17],[7,17],[9,17],[1,17],[4,17],[7,17],[9,17],[1,17],[3,17],[[6,6,8],6],[3,3],[[6,6],6],[[3,6],3],[[6,6]],[[3,6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[3,3],[[3,[5,[4]]],3],[[3,20],21],[[3,20],21]],"c":[],"p":[[3,"RgbColor"],[15,"u8"],[3,"Style"],[4,"Color"],[4,"Option"],[3,"Effects"],[4,"AnsiColor"],[15,"bool"],[3,"Ansi256Color"],[3,"EffectIter"],[3,"Reset"],[4,"Ordering"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[8,"Into"],[8,"Display"],[4,"Result"],[3,"TypeId"],[8,"Write"],[6,"Result"]]},\
"anstyle_parse":{"doc":"Parser for implementing virtual terminal emulators","t":"DIGDDDIDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNLLLLLLLLLLLLLLLLLLFLLLLLLLLLL","n":["AsciiParser","CharAccumulator","DefaultCharAccumulator","Params","ParamsIter","Parser","Perform","Utf8Parser","add","add","add","advance","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","csi_dispatch","default","default","default","default","eq","eq","eq","eq","esc_dispatch","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","hook","into","into","into","into","into","into_iter","into_iter","is_empty","iter","len","new","next","osc_dispatch","print","put","size_hint","state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unhook","Action","Anywhere","BeginUtf8","Clear","Collect","CsiDispatch","CsiEntry","CsiIgnore","CsiIntermediate","CsiParam","DcsEntry","DcsIgnore","DcsIntermediate","DcsParam","DcsPassthrough","EscDispatch","Escape","EscapeIntermediate","Execute","Ground","Hook","Ignore","Nop","OscEnd","OscPut","OscStart","OscString","Param","Print","Put","SosPmApcString","State","Unhook","Utf8","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","eq","fmt","fmt","from","from","into","into","state_change","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"anstyle_parse"],[88,"anstyle_parse::state"]],"d":["Only allow parsing 7-bit ASCII","Build a <code>char</code> out of bytes","","","Immutable subparameter iterator.","Parser for raw <em>VTE</em> protocol which delegates actions to a …","Performs actions requested by the <code>Parser</code>","Allow parsing UTF-8","Build a <code>char</code> out of bytes","","","Advance the parser state","","","","","","","","","","","","","","","","","","","A final character has arrived for a CSI sequence","","","","","","","","","The final character of an escape sequence has arrived.","Execute a C0 or C1 control function.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Invoked when a final character arrives in first part of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if there are no parameters present.","Returns an iterator over all parameters and subparameters.","Returns the number of parameters.","Create a new Parser","","Dispatch an operating system command.","Draw a character to the screen and update states.","Pass bytes as part of a device control string to the …","","","","","","","","","","","","","","","","","","","","","","Called when a device control string is terminated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transition to next <code>State</code>","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,6,4,5,7,18,9,7,4,5,18,9,7,4,5,9,7,4,5,9,7,4,5,8,9,7,4,5,9,7,4,5,8,8,9,7,4,5,18,9,7,4,5,8,18,9,7,4,5,18,9,9,9,9,7,18,8,8,8,18,0,9,7,4,5,18,9,7,4,5,18,9,7,4,5,18,9,7,4,5,8,0,22,23,23,23,23,22,22,22,22,22,22,22,22,22,23,22,22,23,22,23,23,23,23,23,23,22,23,23,23,22,0,23,22,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,0,22,23,22,22,23,23,22,23,22,23],"f":[0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[4,1],[[3,[2]]]],[[5,1],[[3,[2]]]],[[[7,[6]],8,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[[[7,[10]]],[[7,[10]]]],[4,4],[5,5],[[]],[[]],[[]],[[]],[[9,[11,[1]],12,1]],[[],9],[[],[[7,[13]]]],[[],4],[[],5],[[9,9],12],[[[7,[14]],[7,[14]]],12],[[4,4],12],[[5,5],12],[[[11,[1]],12,1]],[1],[[9,15],16],[[[7,[17]],15],16],[[4,15],16],[[5,15],16],[[]],[[]],[[]],[[]],[[]],[[9,[11,[1]],12,1]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9,12],[9,18],[9,19],[[],7],[18,3],[[[11,[[11,[1]]]],12]],[2],[1],[18],0,[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[22,22],[23,23],[[]],[[]],[[],22],[[],23],[[22,22],12],[[23,23],12],[[22,15],16],[[23,15],16],[[]],[[]],[[]],[[]],[[22,1]],[[]],[[]],[1,[[20,[22]]]],[[],20],[1,[[20,[23]]]],[[],20],[[],20],[[],20],[[],21],[[],21]],"c":[],"p":[[15,"u8"],[15,"char"],[4,"Option"],[3,"AsciiParser"],[3,"Utf8Parser"],[8,"CharAccumulator"],[3,"Parser"],[8,"Perform"],[3,"Params"],[8,"Clone"],[15,"slice"],[15,"bool"],[8,"Default"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"ParamsIter"],[15,"usize"],[4,"Result"],[3,"TypeId"],[4,"State"],[4,"Action"]]},\
"anstyle_query":{"doc":"","t":"FFFFFFFAF","n":["clicolor","clicolor_force","is_ci","no_color","term_supports_ansi_color","term_supports_color","truecolor","windows","enable_ansi_colors"],"q":[[0,"anstyle_query"],[8,"anstyle_query::windows"]],"d":["Check CLICOLOR status","Check CLICOLOR_FORCE status","Report whether this is running in CI","Check NO_COLOR status","Check <code>TERM</code> for ANSI color support","Check <code>TERM</code> for color support","Check COLORTERM for truecolor support","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[[[],[[2,[1]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[],[[2,[1]]]]],"c":[],"p":[[15,"bool"],[4,"Option"]]},\
"arrayvec":{"doc":"<strong>arrayvec</strong> provides the types <code>ArrayVec</code> and <code>ArrayString</code>:  …","t":"DDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ArrayString","ArrayVec","CapacityError","Drain","IntoIter","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_ptr","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","cmp","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","drain","drop","drop","drop","element","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_string","from_iter","from_str","ge","ge","ge","gt","gt","gt","hash","hash","insert","into","into","into","into","into","into_inner","into_inner_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_full","is_full","le","le","le","len","len","lt","lt","lt","new","new","new","new_const","new_const","next","next","next_back","next_back","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","swap_pop","swap_remove","take","truncate","truncate","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","write_char","write_str","zero_filled"],"q":[[0,"arrayvec"]],"d":["A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","","Return a raw mutable pointer to the vector’s buffer.","Return a mutable slice containing all elements of the …","Return a mutable string slice of the whole <code>ArrayString</code>.","Return a raw pointer to the vector’s buffer.","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","Create a draining iterator that removes the specified …","","","","Extract the overflowing element","","","","","","Extend the <code>ArrayVec</code> with an iterator.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a byte string literal.","Create an <code>ArrayVec</code> from an iterator.","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inner fixed size array, if it is full to its …","Return the inner fixed size array.","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return true if the <code>ArrayVec</code> is completely filled to its …","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","Create a new empty <code>ArrayVec</code> (const fn).","Create a new empty <code>ArrayString</code> (const fn).","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Returns the capacity left in the <code>ArrayString</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Returns the ArrayVec, replacing the original with a new …","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","Copy all elements from the slice and append to the <code>ArrayVec</code>…","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","","Create a new <code>ArrayString</code> value fully filled with ASCII …"],"i":[0,0,0,0,0,1,1,1,3,1,1,3,1,3,1,1,7,12,3,3,8,1,1,7,12,3,3,8,1,3,1,3,1,7,3,8,1,3,1,3,8,1,3,1,3,1,3,1,1,7,12,8,1,1,3,3,8,1,1,7,3,3,8,8,1,1,7,12,3,3,8,3,1,3,1,3,3,1,3,3,1,3,1,1,7,12,3,8,1,1,1,1,1,7,12,1,3,1,3,1,3,3,1,3,1,3,3,1,3,8,1,3,7,12,7,12,1,3,3,8,1,3,1,1,3,3,1,1,3,1,3,1,1,3,8,7,12,1,1,1,1,3,1,1,1,7,12,3,3,3,8,1,1,7,12,3,8,1,3,3,1,7,12,3,8,3,3,3],"f":[0,0,0,0,0,[1,2],[1],[1,2],[3,4],[1],[1,2],[3,4],[1,2],[3,4],[1,2],[[]],[[]],[[]],[3,4],[[]],[[]],[1,2],[[]],[[]],[[]],[3,4],[[]],[[]],[1,5],[3,5],[1],[3],[[[1,[6]]],[[1,[6]]]],[[[7,[6]]],[[7,[6]]]],[3,3],[[[8,[6]]],[[8,[6]]]],[[[1,[6]],[1,[6]]]],[[3,3]],[[[1,[9]],[1,[9]]],10],[[3,3],10],[[[8,[9]],[8,[9]]],10],[[],1],[[],3],[1],[3,4],[1],[3,4],[[1,[11,[5]]],12],[1],[7],[12],[8],[[[1,[13]],[1,[13]]],14],[[[1,[13]],[2,[13]]],14],[[3,4],14],[[3,3],14],[[[8,[13]],[8,[13]]],14],[[1,15]],[[[1,[16]],17],18],[[[7,[16]],17],18],[[3,17],18],[[3,17],18],[[8,17],18],[[8,17],18],[[]],[19,1],[[]],[[]],[4,[[20,[3,[8,[4]]]]]],[[]],[[]],[[[19,[21]]],[[20,[3,22]]]],[15,1],[4,[[20,[3]]]],[[[1,[23]],[1,[23]]],14],[[3,3],14],[[3,4],14],[[[1,[23]],[1,[23]]],14],[[3,3],14],[[3,4],14],[[[1,[24]],25]],[[3,25]],[[1,5]],[[]],[[]],[[]],[[]],[[]],[1,[[20,[19,1]]]],[1,19],[1],[1],[1,7],[[]],[[]],[1,14],[3,14],[1,14],[3,14],[[[1,[23]],[1,[23]]],14],[[3,4],14],[[3,3],14],[1,5],[3,5],[[[1,[23]],[1,[23]]],14],[[3,4],14],[[3,3],14],[[],1],[[],3],[[],8],[[],1],[[],3],[7,26],[12,26],[7,26],[12,26],[[[1,[23]],[1,[23]]],[[26,[10]]]],[[3,4],[[26,[10]]]],[[3,3],[[26,[10]]]],[[[8,[23]],[8,[23]]],[[26,[10]]]],[1,26],[3,[[26,[27]]]],[[1,5],26],[1],[[3,27]],[[3,4]],[1],[1,5],[3,5],[[1,5]],[[3,5],27],[[1,28]],[[1,5]],[[3,5]],[8,8],[7],[12],[[1,5],26],[[1,5]],[1,1],[[1,5]],[[3,5]],[[[1,[29]],[2,[29]]],[[20,[8]]]],[[[2,[6]]],[[20,[[1,[6]]]]]],[[],20],[[],20],[[],20],[[],20],[30,[[20,[3]]]],[4,[[20,[3]]]],[[],20],[[1,5],[[20,[8]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[1,[[20,[8]]]],[[3,27],[[20,[[8,[27]]]]]],[[3,4],[[20,[[8,[4]]]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[3,27],18],[[3,4],18],[[],3]],"c":[],"p":[[3,"ArrayVec"],[15,"slice"],[3,"ArrayString"],[15,"str"],[15,"usize"],[8,"Clone"],[3,"IntoIter"],[3,"CapacityError"],[8,"Ord"],[4,"Ordering"],[8,"RangeBounds"],[3,"Drain"],[8,"PartialEq"],[15,"bool"],[8,"IntoIterator"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"array"],[4,"Result"],[15,"u8"],[3,"Utf8Error"],[8,"PartialOrd"],[8,"Hash"],[8,"Hasher"],[4,"Option"],[15,"char"],[8,"FnMut"],[8,"Copy"],[3,"Arguments"],[3,"TypeId"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":"SIIQSSDIQQLLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKLLFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","Iter","IterNames","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","provide","to_string","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"]],"d":["The value of <code>Self</code> where all bits are set.","","Underlying storage for a flags type.","The underlying storage type.","The value of <code>Self</code> where no bits are set.","The set of available flags and their names.","Metadata for an individual flag.","A set of flags.","An iterator over enabled flags in an instance of the type.","An iterator over the raw names and bits for enabled flags …","Returns the set containing all flags.","Returns the set containing all flags.","The macro used to generate the flag structure.","Returns the raw value of the flags currently stored.","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Get the flag for a particular name.","Get the flag for a particular name.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Iterating over set flag values.","Iterate over enabled flag values.","Iterate over enabled flag values.","Iterate over the raw names and bits for enabled flag …","Iterate over the raw names and bits for enabled flag …","Get the name of this flag.","Create a new flag with the given name and value.","Parsing flags from text.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Get the value of this flag.","An iterator over a set of flags.","An iterator over a set of flags and their names.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get the remaining (unyielded) flags.","","","","","","","An error encountered while parsing flags from text.","Parse a value from a number encoded as a hex string.","Encode a value as a hex number.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a set of flags from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","","","Write a set of flags to a writer.","","","","Write the value as hex."],"i":[19,0,0,10,19,10,0,0,20,20,10,10,0,10,7,7,10,10,10,10,10,10,10,10,7,10,10,10,10,10,10,10,10,10,10,10,10,10,7,10,10,10,10,0,10,10,10,10,7,7,0,10,10,10,10,10,10,10,10,7,7,7,10,10,7,0,0,5,6,5,6,5,6,5,6,5,6,5,6,6,5,6,5,6,5,6,0,0,0,11,11,11,11,11,11,0,11,11,11,21,11,11,0,11,11,11,22],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[4,3],[4,3],[[1,1]],[[1,1]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[],2],[[],2],[[],2],[[],2],0,[[],5],[[],5],[[],6],[[],6],[7,4],[4,7],0,[[1,1]],[[1,1]],[[1,1,2]],[[1,1,2]],[[]],[[]],[[1,1]],[[1,1]],[[],8],[[],8],[[],9],[[]],[[]],[7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[10]]],3],[[[6,[10]]],3],[6],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,[[]],[[]],[[],11],[[11,12],13],[[11,12],13],[[]],[4,[[8,[10,11]]]],[[]],[14,11],[14,11],[4,[[8,[1,11]]]],[15],[[],16],[[10,17],[[8,[18]]]],[[],8],[[],8],[[],9],[17,13]],"c":[1,8,9],"p":[[8,"Sized"],[15,"bool"],[4,"Option"],[15,"str"],[3,"Iter"],[3,"IterNames"],[3,"Flag"],[4,"Result"],[3,"TypeId"],[8,"Flags"],[3,"ParseError"],[3,"Formatter"],[6,"Result"],[8,"Display"],[3,"Demand"],[3,"String"],[8,"Write"],[3,"Error"],[8,"Bits"],[8,"BitFlags"],[8,"ParseHex"],[8,"WriteHex"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":"GEIGEGGIILLLLLLLLLLLLLLLLLLLLKLLKLLLLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLKLLLLKLLLLLLLKLLLLKLLLLLLLKLLLLKLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLKLLLLKLLLLLKLLLLKLLLLLKLLLLKLLLLKLLLLKLLLL","n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","ReadBytesExt","WriteBytesExt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32","read_f32","read_f32_into","read_f32_into","read_f32_into","read_f32_into_unchecked","read_f32_into_unchecked","read_f32_into_unchecked","read_f64","read_f64","read_f64","read_f64_into","read_f64_into","read_f64_into","read_f64_into_unchecked","read_f64_into_unchecked","read_f64_into_unchecked","read_i128","read_i128","read_i128","read_i128_into","read_i128_into","read_i128_into","read_i16","read_i16","read_i16","read_i16_into","read_i16_into","read_i16_into","read_i24","read_i24","read_i24","read_i32","read_i32","read_i32","read_i32_into","read_i32_into","read_i32_into","read_i48","read_i48","read_i48","read_i64","read_i64","read_i64","read_i64_into","read_i64_into","read_i64_into","read_i8","read_i8","read_i8_into","read_i8_into","read_int","read_int","read_int","read_int128","read_int128","read_int128","read_u128","read_u128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u24","read_u24","read_u32","read_u32","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u48","read_u48","read_u64","read_u64","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u8","read_u8","read_uint","read_uint","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","read_uint128","read_uint128","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32","write_f32","write_f32_into","write_f64","write_f64","write_f64","write_f64_into","write_i128","write_i128","write_i128","write_i128_into","write_i16","write_i16","write_i16","write_i16_into","write_i24","write_i24","write_i24","write_i32","write_i32","write_i32","write_i32_into","write_i48","write_i48","write_i48","write_i64","write_i64","write_i64","write_i64_into","write_i8","write_i8","write_i8_into","write_int","write_int","write_int","write_int128","write_int128","write_int128","write_u128","write_u128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u24","write_u24","write_u32","write_u32","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u48","write_u48","write_u64","write_u64","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_u8","write_u8","write_uint","write_uint","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","write_uint128","write_uint128"],"q":[[0,"byteorder"]],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","Extends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…","Extends <code>Write</code> with methods for writing numbers. (For …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from the underlying …","Reads an unsigned 128 bit integer from the underlying …","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","","","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from the underlying …","Reads an unsigned 16 bit integer from the underlying …","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 16 bit integers from the …","","","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from the underlying …","Reads an unsigned 32 bit integer from the underlying …","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","","","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from the underlying …","Reads an unsigned 64 bit integer from the underlying …","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","","","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer to the underlying …","Writes an unsigned 128 bit integer to the underlying …","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,26,1,2,26,1,2,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,27,27,27,27,26,27,27,26,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,27,27,1,2,26,27,27,1,2,1,2,1,2,1,2,1,2,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,28,28,26,26,28,28,1,2,26,1,2,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,28,28,1,2,26,28,28,1,2],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[],4],[[],4],[[1,5],6],[[2,5],6],[[]],[[]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[10]]]],[[[8,[11]]]],[[[8,[12]]]],[[[8,[13]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[17]]]],[[[8,[17]]]],[[[8,[17]]]],[[1,18]],[[2,18]],[[]],[[]],[[1,1],[[19,[3]]]],[[2,2],[[19,[3]]]],[[],[[20,[7]]]],[[],[[20,[7]]]],[[[8,[21]]],7],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[],[[20,[9]]]],[[],[[20,[9]]]],[[[8,[21]]],9],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[],[[20,[10]]]],[[],[[20,[10]]]],[[[8,[21]]],10],[[[8,[10]]],20],[[[8,[10]]],20],[[[8,[21]],[8,[10]]]],[[],[[20,[11]]]],[[],[[20,[11]]]],[[[8,[21]]],11],[[[8,[11]]],20],[[[8,[11]]],20],[[[8,[21]],[8,[11]]]],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[[8,[12]]],20],[[[8,[12]]],20],[[[8,[21]],[8,[12]]]],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[[8,[13]]],20],[[[8,[13]]],20],[[[8,[21]],[8,[13]]]],[[],[[20,[22]]]],[[],[[20,[22]]]],[[[8,[22]]],20],[[[8,[22]]],20],[23,[[20,[13]]]],[23,[[20,[13]]]],[[[8,[21]],23],13],[23,[[20,[10]]]],[23,[[20,[10]]]],[[[8,[21]],23],10],[[[8,[21]]],14],[[],[[20,[14]]]],[[],[[20,[14]]]],[[[8,[21]]],14],[[[8,[21]]],14],[[[8,[21]],[8,[14]]]],[[[8,[14]]],20],[[[8,[14]]],20],[[[8,[21]],[8,[14]]]],[[[8,[21]],[8,[14]]]],[[[8,[21]]],15],[[],[[20,[15]]]],[[],[[20,[15]]]],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]],[8,[15]]]],[[[8,[15]]],20],[[[8,[15]]],20],[[[8,[21]],[8,[15]]]],[[[8,[21]],[8,[15]]]],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]],[8,[16]]]],[[[8,[16]]],20],[[[8,[16]]],20],[[[8,[21]],[8,[16]]]],[[[8,[21]],[8,[16]]]],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]],[8,[17]]]],[[[8,[17]]],20],[[[8,[17]]],20],[[[8,[21]],[8,[17]]]],[[[8,[21]],[8,[17]]]],[[],[[20,[21]]]],[[],[[20,[21]]]],[[[8,[21]],23],17],[23,[[20,[17]]]],[23,[[20,[17]]]],[[[8,[21]],23],17],[[[8,[21]],23],17],[[[8,[21]],23],14],[23,[[20,[14]]]],[23,[[20,[14]]]],[[[8,[21]],23],14],[[[8,[21]],23],14],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[7,20],[7,20],[[[8,[21]],7]],[[[8,[7]],[8,[21]]]],[9,20],[9,20],[[[8,[21]],9]],[[[8,[9]],[8,[21]]]],[10,20],[10,20],[[[8,[21]],10]],[[[8,[10]],[8,[21]]]],[11,20],[11,20],[[[8,[21]],11]],[[[8,[11]],[8,[21]]]],[12,20],[12,20],[[[8,[21]],12]],[12,20],[12,20],[[[8,[21]],12]],[[[8,[12]],[8,[21]]]],[13,20],[13,20],[[[8,[21]],13]],[13,20],[13,20],[[[8,[21]],13]],[[[8,[13]],[8,[21]]]],[22,20],[22,20],[[[8,[22]],[8,[21]]]],[[13,23],20],[[13,23],20],[[[8,[21]],13,23]],[[10,23],20],[[10,23],20],[[[8,[21]],10,23]],[[[8,[21]],14]],[14,20],[14,20],[[[8,[21]],14]],[[[8,[21]],14]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[21]],15]],[15,20],[15,20],[[[8,[21]],15]],[[[8,[21]],15]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[21,20],[21,20],[[[8,[21]],17,23]],[[17,23],20],[[17,23],20],[[[8,[21]],17,23]],[[[8,[21]],17,23]],[[[8,[21]],14,23]],[[14,23],20],[[14,23],20],[[[8,[21]],14,23]],[[[8,[21]],14,23]]],"c":[63,64,65,72,73,74],"p":[[4,"BigEndian"],[4,"LittleEndian"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"f32"],[15,"slice"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[8,"Hasher"],[4,"Option"],[6,"Result"],[15,"u8"],[15,"i8"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"ByteOrder"],[8,"ReadBytesExt"],[8,"WriteBytesExt"]]},\
"clap":{"doc":"<strong>Command Line Argument Parser for Rust</strong>","t":"NNNDEDDINEDINNNNNNGNNINNNNDNNINNNINNNIENLLLLLLLLLLLLLLOLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLKOKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLOLLKLLLLLLLLLLLLNNDEDEDDDNNNNNSNDNNDNNNNNINDDDDNQDDDDDNESNNNDDDDINNNNQEDIDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLNNNEENDNNNDIENNNNNNNNNDNNNNNNNGDNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNDDEDNEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Always","AnyPath","Append","Arg","ArgAction","ArgGroup","ArgMatches","Args","Auto","ColorChoice","Command","CommandFactory","CommandName","CommandString","CommandWithArguments","Count","DirPath","EmailAddress","Error","ExecutablePath","FilePath","FromArgMatches","Help","HelpLong","HelpShort","Hostname","Id","Never","Other","Parser","Set","SetFalse","SetTrue","Subcommand","Unknown","Url","Username","ValueEnum","ValueHint","Version","about","action","after_help","after_long_help","alias","alias","aliases","aliases","allow_external_subcommands","allow_hyphen_values","allow_missing_positional","allow_negative_numbers","arg","arg","arg","arg_required_else_help","args","args","args_conflicts_with_subcommands","args_override_self","args_present","as_ref","as_str","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","before_help","before_long_help","bin_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color","command","command","command_for_update","conflicts_with","conflicts_with","conflicts_with_all","conflicts_with_all","contains_id","debug_assert","default","default","default","default","default","default","default","default_missing_value","default_missing_value_os","default_missing_values","default_missing_values_os","default_value","default_value_if","default_value_ifs","default_values","defer","disable_colored_help","disable_help_flag","disable_help_subcommand","disable_version_flag","display_name","display_order","display_order","dont_delimit_trailing_values","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","exclusive","external_subcommand_value_parser","find_subcommand","find_subcommand_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","from_str","from_str","get_about","get_action","get_after_help","get_after_long_help","get_all_aliases","get_all_aliases","get_all_long_flag_aliases","get_all_short_aliases","get_all_short_flag_aliases","get_arg_conflicts_with","get_args","get_arguments","get_author","get_before_help","get_before_long_help","get_bin_name","get_color","get_count","get_default_values","get_display_name","get_external_subcommand_value_parser","get_flag","get_groups","get_help","get_help_heading","get_id","get_id","get_index","get_long","get_long_about","get_long_and_visible_aliases","get_long_flag","get_long_help","get_long_version","get_many","get_matches","get_matches_from","get_matches_mut","get_name","get_next_help_heading","get_num_args","get_occurrences","get_one","get_opts","get_positionals","get_possible_values","get_raw","get_raw_occurrences","get_short","get_short_and_visible_aliases","get_short_flag","get_styles","get_subcommand_help_heading","get_subcommand_value_name","get_subcommands","get_subcommands_mut","get_value_delimiter","get_value_hint","get_value_names","get_value_parser","get_value_terminator","get_version","get_visible_aliases","get_visible_aliases","get_visible_long_flag_aliases","get_visible_short_aliases","get_visible_short_flag_aliases","global","group","group","group_id","groups","groups","has_subcommand","has_subcommands","hash","hash","help","help_expected","help_heading","help_template","hide","hide","hide_default_value","hide_long_help","hide_possible_values","hide_possible_values","hide_short_help","id","id","ids","ignore_case","ignore_errors","index","index","index_of","indices_of","infer_long_args","infer_subcommands","into","into","into","into","into","into","into","into","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","is_allow_external_subcommands_set","is_allow_hyphen_values_set","is_allow_missing_positional_set","is_allow_negative_numbers_set","is_arg_required_else_help_set","is_args_conflicts_with_subcommands_set","is_disable_colored_help_set","is_disable_help_flag_set","is_disable_help_subcommand_set","is_disable_version_flag_set","is_dont_delimit_trailing_values_set","is_exclusive_set","is_global_set","is_hide_default_value_set","is_hide_long_help_set","is_hide_possible_values_set","is_hide_set","is_hide_set","is_hide_short_help_set","is_ignore_case_set","is_last_set","is_multicall_set","is_multiple","is_next_line_help_set","is_next_line_help_set","is_no_binary_name_set","is_positional","is_propagate_version_set","is_require_equals_set","is_required_set","is_required_set","is_subcommand_negates_reqs_set","is_subcommand_precedence_over_arg_set","is_subcommand_required_set","is_trailing_var_arg_set","last","long","long_about","long_flag","long_flag_alias","long_flag_aliases","long_help","long_version","max_term_width","multicall","multiple","mut_arg","mut_args","mut_subcommand","name","new","new","new","next_display_order","next_help_heading","next_line_help","next_line_help","no_binary_name","num_args","override_help","override_usage","overrides_with","overrides_with_all","parse","parse_from","parser","partial_cmp","partial_cmp","possible_values","print_help","print_long_help","propagate_version","raw","remove_many","remove_occurrences","remove_one","remove_subcommand","render_help","render_long_help","render_long_version","render_usage","render_version","require_equals","required","required","required_if_eq","required_if_eq_all","required_if_eq_any","required_unless_present","required_unless_present_all","required_unless_present_any","requires","requires","requires_all","requires_if","requires_ifs","set_bin_name","short","short_alias","short_aliases","short_flag","short_flag_alias","short_flag_aliases","subcommand","subcommand","subcommand_help_heading","subcommand_matches","subcommand_name","subcommand_negates_reqs","subcommand_precedence_over_arg","subcommand_required","subcommand_value_name","subcommands","takes_values","term_width","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_string","to_string","to_string","to_string","trailing_var_arg","try_contains_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_many","try_get_matches","try_get_matches_from","try_get_matches_from_mut","try_get_occurrences","try_get_one","try_get_raw","try_get_raw_occurrences","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_from","try_remove_many","try_remove_occurrences","try_remove_one","try_update_from","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from","update_from_arg_matches","update_from_arg_matches_mut","value_delimiter","value_hint","value_name","value_names","value_parser","value_parser","value_source","value_terminator","value_variants","value_variants","version","visible_alias","visible_alias","visible_aliases","visible_aliases","visible_long_flag_alias","visible_long_flag_aliases","visible_short_alias","visible_short_aliases","visible_short_flag_alias","visible_short_flag_aliases","AnyPath","Append","Arg","ArgAction","ArgGroup","ArgPredicate","BoolValueParser","BoolishValueParser","Command","CommandName","CommandString","CommandWithArguments","Count","DirPath","EMPTY","EmailAddress","EnumValueParser","Equals","ExecutablePath","FalseyValueParser","FilePath","Help","HelpLong","HelpShort","Hostname","IntoResettable","IsPresent","MapValueParser","NonEmptyStringValueParser","OsStr","OsStringValueParser","Other","Parser","PathBufValueParser","PossibleValue","PossibleValuesParser","RangedI64ValueParser","RangedU64ValueParser","Reset","Resettable","SINGLE","Set","SetFalse","SetTrue","Str","StringValueParser","StyledStr","TryMapValueParser","TypedValueParser","Unknown","Url","Username","Value","Value","ValueHint","ValueParser","ValueParserFactory","ValueRange","Version","alias","aliases","ansi","as_os_str","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_help","get_name","get_name_and_aliases","hash","hash","hash","hash","help","hide","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","is_hide_set","map","matches","max_values","min_values","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","os_string","parse","parse","parse","parse","parse","parse","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_buf","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","range","range","start_bound","string","takes_values","to_os_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_parser","write_char","write_str","ActualNumValues","ArgumentConflict","Bool","ContextKind","ContextValue","Custom","DefaultFormatter","DisplayHelp","DisplayHelpOnMissingArgumentOrSubcommand","DisplayVersion","Error","ErrorFormatter","ErrorKind","ExpectedNumValues","Format","InvalidArg","InvalidSubcommand","InvalidSubcommand","InvalidUtf8","InvalidValue","InvalidValue","Io","KindFormatter","MinValues","MissingRequiredArgument","MissingSubcommand","NoEquals","None","Number","PriorArg","Result","RichFormatter","String","Strings","StyledStr","StyledStrs","Suggested","SuggestedArg","SuggestedCommand","SuggestedSubcommand","SuggestedValue","TooFewValues","TooManyValues","TrailingArg","UnknownArgument","Usage","ValidSubcommand","ValidValue","ValueValidation","WrongNumberOfValues","apply","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","eq","eq","eq","equivalent","equivalent","equivalent","exit","exit_code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_error","format_error","format_error","from","from","from","from","from","from","from","from","get","hash","hash","insert","into","into","into","into","into","into","kind","new","print","provide","raw","render","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_stderr","with_cmd","ArgMatches","CommandLine","DefaultValue","Downcast","EnvVariable","IdsRef","Indices","MatchesError","RawValues","UnknownArgument","ValueSource","Values","ValuesRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","partial_cmp","provide","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","actual","expected"],"q":[[0,"clap"],[502,"clap::builder"],[997,"clap::error"],[1141,"clap::parser"],[1262,"clap::parser::MatchesError"]],"d":["Enables colored output regardless of whether or not the …","Any existing path.","When encountered, store the associated value(s) in …","The abstract representation of a command line argument. …","Behavior of arguments when they are encountered while …","Family of related arguments.","Container for parse results.","Parse a set of arguments into a user-defined container.","Enables colored output only when the output is going to a …","Represents the color preferences for program output","Build a command-line interface.","Create a <code>Command</code> relevant for a user-defined container.","Name of a command, without arguments. May be relative to …","A single string containing a command and its arguments.","Capture the remaining arguments as a command name and …","When encountered, increment a <code>u8</code> counter","Path to a directory.","Email address.","Command Line Argument Parser Error","Path to an executable file.","Path to a file.","Converts an instance of <code>ArgMatches</code> to a user-defined …","When encountered, display <code>Command::print_help</code>","When encountered, display <code>Command::print_long_help</code>","When encountered, display <code>Command::print_help</code>","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …","<code>Arg</code> or <code>ArgGroup</code> identifier","Disables colored output no matter if the output is going …","None of the hints below apply. Disables shell completion …","Parse command-line arguments into <code>Self</code>.","When encountered, store the associated value(s) in …","When encountered, act as if <code>&quot;false&quot;</code> was encountered on the …","When encountered, act as if <code>&quot;true&quot;</code> was encountered on the …","Parse a sub-command into a user-defined enum.","Default value if hint is not specified. Follows shell …","Complete web address.","Name of a local operating system user.","Parse arguments into enums.","Provide shell with hint on how to complete an argument.","When encountered, display <code>Command::version</code>","Sets the program’s description for the short help (<code>-h</code>).","Specify how to react to an argument when parsing it.","Free-form help text for after auto-generated short help (<code>-h</code>…","Free-form help text for after auto-generated long help (…","Add an alias, which functions as a hidden long flag.","Sets a hidden alias to this subcommand.","Add aliases, which function as hidden long flags.","Sets multiple hidden aliases to this subcommand.","Assume unexpected positional arguments are a <code>subcommand</code>.","Allows values which start with a leading hyphen (<code>-</code>)","Allows one to implement two styles of CLIs where …","Allows negative numbers to pass as values.","Adds an argument to this group by name","Adds an argument to the list of valid possibilities.","Create an <code>Arg</code> from a usage string.","Exit gracefully if no arguments are present (e.g. <code>$ myprog</code>…","Adds multiple arguments to this group by name","Adds multiple arguments to the list of valid possibilities.","Specifies that use of an argument prevents the use of …","Replace prior occurrences of arguments rather than error","Check if any args were present on the command line","","Get the raw string of the <code>Id</code>","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","Sets the author(s) for the help message.","Free-form help text for before auto-generated short help (…","Free-form help text for before auto-generated long help (…","Overrides the runtime-determined name of the binary for …","","","","","","","","","","","","","","","","","","Prepare for introspecting on all included <code>Command</code>s","Define <code>Command</code> line arguments","","","","","","","","","","","","","","","","","","","Sets when to color output.","Build a <code>Command</code> that can instantiate <code>Self</code>.","Requires <code>cargo</code> feature flag to be enabled.","Build a <code>Command</code> that can update <code>self</code>.","This argument is mutually exclusive with the specified …","Specify an argument or group that must <strong>not</strong> be present when …","This argument is mutually exclusive with the specified …","Specify arguments or groups that must <strong>not</strong> be present when …","Check if values are present for the argument or group id","Catch problems earlier in the development cycle.","","","","","","","","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when not present.","Specifies the value of the argument if <code>arg</code> has been used …","Specifies multiple values and conditions in the same …","Value for the argument when not present.","Delay initialization for parts of the <code>Command</code>","Disables colorized help messages.","Disables <code>-h</code> and <code>--help</code> flag.","Disables the <code>help</code> <code>subcommand</code>.","Disables <code>-V</code> and <code>--version</code> flag.","Overrides the runtime-determined display name of the …","Allows custom ordering of args within the help message.","Set the placement of this subcommand within the help.","Disables the automatic delimiting of values after <code>--</code> or …","","","","","","","","","","","","","","","","","Error reporting","Custom error message for post-parsing validation","This argument must be passed alone; it conflicts with all …","Specifies how to parse external subcommand arguments.","Find subcommand such that its name or one of aliases …","Find subcommand such that its name or one of aliases …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Parse an argument into <code>Self</code>.","","","Get the help message specified via <code>Command::about</code>.","Behavior when parsing the argument","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get <em>all</em> aliases for this argument, if any, both visible …","Iterate through the set of <em>all</em> the aliases for this …","Iterate through the set of <em>all</em> the long aliases for this …","Get <em>all</em> short aliases for this argument, if any, both …","Iterate through the set of <em>all</em> the short aliases for this …","Get a list of all arguments the given argument conflicts …","Getters for all args. It will return a vector of <code>Id</code>","Iterate through the set of arguments.","Get the authors of the cmd.","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get the name of the binary.","Should we color the output?","Gets the value of a specific <code>ArgAction::Count</code> flag","Get the default values specified for this argument, if any","Get the name of the binary.","Configured parser for values passed to an external …","Gets the value of a specific <code>ArgAction::SetTrue</code> or …","Iterate through the set of groups.","Get the help specified for this argument, if any","Get the help heading specified for this argument, if any","Get the name of the argument","Get the name of the group","Get the index of this argument, if any","Get the long option name for this argument, if any","Get the help message specified via <code>Command::long_about</code>.","Get the long option name and its visible aliases, if any","Get the long flag of the subcommand.","Get the long help specified for this argument, if any","Get the long version of the cmd.","Iterate over values of a specific option or positional …","Parse <code>env::args_os</code>, exiting on failure.","Parse the specified arguments, exiting on failure.","Parse <code>env::args_os</code>, exiting on failure.","Get the name of the cmd.","Get the custom section heading specified via …","Get the number of values for this argument.","Iterate over the values passed to each occurrence of an …","Gets the value of a specific option or positional argument.","Iterate through the <em>options</em>.","Iterate through the <em>positionals</em> arguments.","Get the names of possible values for this argument. Only …","Iterate over the original argument values.","Iterate over the original values for each occurrence of an …","Get the short option name for this argument, if any","Get the short option name and its visible aliases, if any","Get the short flag of the subcommand.","Return the current <code>Styles</code> for the <code>Command</code>","Returns the help heading for listing subcommands.","Returns the subcommand value name.","Iterate through the set of subcommands, getting a …","Iterate through the set of subcommands, getting a mutable …","Get the delimiter between multiple values","Get the value hint of this argument","Get the names of values for this argument.","Configured parser for argument values","Get the value terminator for this argument. The …","Get the version of the cmd.","Get visible aliases for this argument, if any","Iterate through the <em>visible</em> aliases for this subcommand.","Iterate through the <em>visible</em> long aliases for this …","Get visible short aliases for this argument, if any","Iterate through the <em>visible</em> short aliases for this …","Specifies that an argument can be matched to all child …","The name of the <code>ArgGroup</code> the argument belongs to.","Adds an <code>ArgGroup</code> to the application.","Report the <code>ArgGroup::id</code> for this set of arguments","The names of <code>ArgGroup</code>’s the argument belongs to.","Adds multiple <code>ArgGroup</code>s to the <code>Command</code> at once.","Test whether <code>Self</code> can parse a specific subcommand","Returns <code>true</code> if this <code>Command</code> has subcommands.","","","Sets the description of the argument for short help (<code>-h</code>).","Panic if help descriptions are omitted.","Override the current help section.","Sets the help template to be used, overriding the default …","Do not display the argument in help message.","Specifies that this <code>subcommand</code> should be hidden from help …","Do not display the default value of the argument in the …","Hides an argument from long help (<code>--help</code>).","Do not display the possible values in the help message.","Tells <code>clap</code> <em>not</em> to print possible values when displaying …","Hides an argument from short help (<code>-h</code>).","Set the identifier used for referencing this argument in …","Sets the group name.","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","Match values against <code>PossibleValuesParser</code> without matching …","Try not to fail on parse errors, like missing option …","Specifies the index of a positional argument <strong>starting at</strong> 1.","","The first index of that an argument showed up.","All indices an argument appeared at when parsing.","Allow partial matches of long arguments or their aliases.","Allow partial matches of subcommand names and their aliases…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Report whether <code>Command::allow_external_subcommands</code> is set","Report whether <code>Arg::allow_hyphen_values</code> is set","Report whether <code>Command::allow_missing_positional</code> is set","Report whether <code>Arg::allow_negative_numbers</code> is set","Report whether <code>Command::arg_required_else_help</code> is set","Report whether <code>Command::args_conflicts_with_subcommands</code> is …","Report whether <code>Command::disable_colored_help</code> is set","Report whether <code>Command::disable_help_flag</code> is set","Report whether <code>Command::disable_help_subcommand</code> is set","Report whether <code>Command::disable_version_flag</code> is set","Report whether <code>Command::dont_delimit_trailing_values</code> is set","Reports whether <code>Arg::exclusive</code> is set","Report whether <code>Arg::global</code> is set","Report whether <code>Arg::hide_default_value</code> is set","Report whether <code>Arg::hide_long_help</code> is set","Report whether <code>Arg::hide_possible_values</code> is set","Report whether <code>Arg::hide</code> is set","Report whether <code>Command::hide</code> is set","Report whether <code>Arg::hide_short_help</code> is set","Reports whether <code>Arg::ignore_case</code> is set","Reports whether <code>Arg::last</code> is set","Report whether <code>Command::multicall</code> is set","Return true if the group allows more than one of the …","Report whether <code>Arg::next_line_help</code> is set","Report whether <code>Command::next_line_help</code> is set","Report whether <code>Command::no_binary_name</code> is set","Checks whether this argument is a positional or not.","Report whether <code>Command::propagate_version</code> is set","Report whether <code>Arg::require_equals</code> is set","Reports whether <code>Arg::required</code> is set","Reports whether <code>ArgGroup::required</code> is set","Report whether <code>Command::subcommand_negates_reqs</code> is set","Report whether <code>Command::subcommand_precedence_over_arg</code> is …","Report whether <code>Command::subcommand_required</code> is set","Report whether <code>Arg::trailing_var_arg</code> is set","This arg is the last, or final, positional argument (i.e. …","Sets the long version of the argument without the …","Sets the program’s description for the long help (<code>--help</code>…","Sets the long version of the subcommand flag without the …","Add an alias, which functions as a “hidden” long flag …","Add aliases, which function as “hidden” long flag …","Sets the description of the argument for long help (<code>--help</code>…","Sets the version for the long version (<code>--version</code>) and help …","Limit the line length for wrapping help when using the …","Multiple-personality program dispatched on the binary name …","Allows more than one of the <code>Arg</code>s in this group to be used. …","Allows one to mutate an <code>Arg</code> after it’s been added to a …","Allows one to mutate all <code>Arg</code>s after they’ve been added …","Allows one to mutate a <code>Command</code> after it’s been added as …","(Re)Sets the program’s name.","Create a new <code>Arg</code> with a unique name.","Create a <code>ArgGroup</code> using a unique name.","Creates a new instance of an <code>Command</code>.","Change the starting value for assigning future display …","Set the default section heading for future args.","Render the help on the line after the argument.","Places the help string for all arguments and subcommands …","Specifies that the parser should not assume the first …","Specifies the number of arguments parsed per occurrence","Overrides the <code>clap</code> generated help message (both <code>-h</code> and …","Overrides the <code>clap</code> generated usage string for help and …","Sets an overridable argument.","Sets multiple mutually overridable arguments by name.","Parse from <code>std::env::args_os()</code>, exit on error","Parse from iterator, exit on error","<code>Command</code> line argument parser","","","Report all <code>possible_values</code>","Prints the short help message (<code>-h</code>) to <code>io::stdout()</code>.","Prints the long help message (<code>--help</code>) to <code>io::stdout()</code>.","Specifies to use the version of the current command for …","Consume all following arguments.","Return values of a specific option or positional argument.","Return values for each occurrence of an option.","Returns the value of a specific option or positional …","Return the name and <code>ArgMatches</code> of the current subcommand.","Render the short help message (<code>-h</code>) to a <code>StyledStr</code>","Render the long help message (<code>--help</code>) to a <code>StyledStr</code>.","Version message rendered as if the user ran <code>--version</code>.","Usage statement","Version message rendered as if the user ran <code>-V</code>.","Requires that options use the <code>--option=val</code> syntax","Specifies that the argument must be present.","Require an argument from the group to be present when …","This argument is required only if the specified <code>arg</code> is …","Specify this argument is required based on multiple …","Specify this argument is required based on multiple …","Set this arg as required as long as the specified argument …","Sets this arg as required unless <em>all</em> of the specified …","Sets this arg as required unless <em>any</em> of the specified …","Sets an argument that is required when this one is present","Specify an argument or group that must be present when …","Specify arguments or groups that must be present when this …","Require another argument if this arg matches the …","Allows multiple conditional requirements.","Set binary name. Uses <code>&amp;mut self</code> instead of <code>self</code>.","Sets the short version of the argument without the …","Add an alias, which functions as a hidden short flag.","Add aliases, which functions as a hidden short flag.","Sets the short version of the subcommand flag without the …","Add an alias, which functions as  “hidden” short flag …","Add aliases, which function as “hidden” short flag …","Adds a subcommand to the list of valid possibilities.","The name and <code>ArgMatches</code> of the current subcommand.","Sets the help heading used for subcommands when printing …","The <code>ArgMatches</code> for the current subcommand.","The name of the current subcommand.","Allows <code>subcommands</code> to override all requirements of the …","Prevent subcommands from being consumed as an arguments …","If no <code>subcommand</code> is present at runtime, error and exit …","Sets the value name used for subcommands when printing …","Adds multiple subcommands to the list of valid …","Returns whether this action accepts values on the …","Sets the terminal width at which to wrap help messages.","","","","","","","","","The canonical argument value.","","","","","","This is a “VarArg” and everything that follows should …","Non-panicking version of <code>ArgMatches::contains_id</code>","","","","","","","","","Non-panicking version of <code>ArgMatches::get_many</code>","Parse <code>env::args_os</code>, returning a <code>clap::Result</code> on failure.","Parse the specified arguments, returning a <code>clap::Result</code> on …","Parse the specified arguments, returning a <code>clap::Result</code> on …","Non-panicking version of <code>ArgMatches::get_occurrences</code>","Non-panicking version of <code>ArgMatches::get_one</code>","Non-panicking version of <code>ArgMatches::get_raw</code>","Non-panicking version of <code>ArgMatches::get_raw_occurrences</code>","","","","","","","","","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from iterator, return Err on error.","Non-panicking version of <code>ArgMatches::remove_many</code>","Non-panicking version of <code>ArgMatches::remove_occurrences</code>","Non-panicking version of <code>ArgMatches::remove_one</code>","Update from iterator, return Err on error.","","","","","","","","","Update from iterator, exit on error","Assign values from <code>ArgMatches</code> to <code>self</code>.","Assign values from <code>ArgMatches</code> to <code>self</code>.","Allow grouping of multiple values via a delimiter.","Provide the shell a hint about how to complete this …","Placeholder for the argument’s value in the help message …","Placeholders for the argument’s values in the help …","Specify the typed behavior of the argument.","Select a <code>ValueParser</code> implementation from the intended type","Report where argument value came from","Sentinel to <strong>stop</strong> parsing multiple values of a given …","All possible argument values, in display order.","","Sets the version for the short version (<code>-V</code>) and help …","Add an alias, which functions as a visible long flag.","Sets a visible alias to this subcommand.","Add aliases, which function as visible long flags.","Sets multiple visible aliases to this subcommand.","Add an alias, which functions as a “visible” long flag …","Add aliases, which function as <em>visible</em> long flag …","Add an alias, which functions as a visible short flag.","Add aliases, which function as visible short flags.","Add an alias, which functions as  “visible” short flag …","Add aliases, which function as <em>visible</em> short flag …","Any existing path.","When encountered, store the associated value(s) in …","The abstract representation of a command line argument. …","Behavior of arguments when they are encountered while …","Family of related arguments.","Operations to perform on argument values","Implementation for <code>ValueParser::bool</code>","Parse bool-like string values, everything else is <code>true</code>","Build a command-line interface.","Name of a command, without arguments. May be relative to …","A single string containing a command and its arguments.","Capture the remaining arguments as a command name and …","When encountered, increment a <code>u8</code> counter","Path to a directory.","Nor argument values, or a flag","Email address.","Parse an <code>ValueEnum</code> value.","Does the argument match the specified value?","Path to an executable file.","Parse false-like string values, everything else is <code>true</code>","Path to a file.","When encountered, display <code>Command::print_help</code>","When encountered, display <code>Command::print_long_help</code>","When encountered, display <code>Command::print_help</code>","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …","Convert to the intended resettable type","Is the argument present?","Adapt a <code>TypedValueParser</code> from one value to another","Parse non-empty string values","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::os_string</code>","None of the hints below apply. Disables shell completion …","Generated parser, usually <code>ValueParser</code>.","Implementation for <code>ValueParser::path_buf</code>","A possible value of an argument.","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Parse number that fall within a range of values","Parse number that fall within a range of values","Reset builder value","Clearable builder value","A single argument value, the most common case for options","When encountered, store the associated value(s) in …","When encountered, act as if <code>&quot;false&quot;</code> was encountered on the …","When encountered, act as if <code>&quot;true&quot;</code> was encountered on the …","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::string</code>","Terminal-styling container","Adapt a <code>TypedValueParser</code> from one value to another","Parse/validate argument values","Default value if hint is not specified. Follows shell …","Complete web address.","Name of a local operating system user.","Overwrite builder value","Argument’s value type","Provide shell with hint on how to complete an argument.","Parse/validate argument values","Register a type with value_parser!","Values per occurrence for an argument","When encountered, display <code>Command::version</code>","Sets a <em>hidden</em> alias for this argument value.","Sets multiple <em>hidden</em> aliases for this argument value.","Display using ANSI Escape Code styling","Get the raw string as an <code>std::ffi::OsStr</code>","","","","","","","Get the raw string of the <code>Str</code>","<code>bool</code> parser for argument valueseturns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the help specified for this argument, if any","Get the name of the argument value","Returns all valid values of the argument value.","","","","","Sets the help description of the value.","Hides this value from help and shell completions.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to the intended resettable type","","","","","","","","","","","","","","","","","","","","","","","Report if <code>PossibleValue::hide</code> is set","Adapt a <code>TypedValueParser</code> from one value to another","Tests if the value is valid for this argument value","Most number of values the argument accepts","Fewest number of values the argument accepts","Custom parser for argument values","Create a <code>PossibleValue</code> with its name.","Create a range","Create an empty buffer","Implementation for <code>ValueParser::string</code>","Implementation for <code>ValueParser::os_string</code>","Implementation for <code>ValueParser::path_buf</code>","Parse an <code>ValueEnum</code>","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Select full range of <code>i64</code>","Select full range of <code>u64</code>","Implementation for <code>ValueParser::bool</code>","Parse false-like string values, everything else is <code>true</code>","Parse bool-like string values, everything else is <code>true</code>","Parse non-empty string values","<code>OsString</code> parser for argument values","Parse the argument value","","","","","","Parse the argument value","","","","","","","","","","","","","","","","","","<code>PathBuf</code> parser for argument values","Reflect on enumerated value properties","Reflect on enumerated value properties","","","","","","","","Narrow the supported range","Narrow the supported range","","<code>String</code> parser for argument values","Report whether the argument takes any values (ie is a flag)","Get the raw string as an <code>OsString</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapt a <code>TypedValueParser</code> from one value to another","Describes the content of <code>AnyValue</code>","","","","","","","","","","","","","","","","","","","","","","Create the specified <code>Self::Parser</code>","","","Number of values present","Occurs when the user provides two values which conflict …","A single value","Semantics for a piece of error information","A piece of error information","An opaque message to the user","Richly formatted error context","Not a true “error” as it means <code>--help</code> or similar was …","Occurs when either an argument or a <code>Subcommand</code> is …","Not a true “error” as it means <code>--version</code> or similar …","Command Line Argument Parser Error","Defines how to format an error for displaying to the user","Command line argument parser kind of error","Number of allowed values","Represents a Format error (which is a part of <code>Display</code>). …","The cause of the error","The cause of the error","Occurs when the user provides an unrecognized <code>Subcommand</code> …","Occurs when the user provides a value containing invalid …","Rejected values","Occurs when an <code>Arg</code> has a set of possible values, and the …","Represents an I/O error. Can occur when writing to <code>stderr</code> …","Report <code>ErrorKind</code>","Minimum number of allowed values","Occurs when the user does not provide one or more required …","Occurs when a subcommand is required (as defined by …","Occurs when the user doesn’t use equals for an option …","<code>ContextKind</code> is self-sufficient, no additional information …","A single value","Existing arguments","Short hand for <code>Result</code> type","Richly formatted error context","A single value","Many values","A single value","many value","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Occurs when the user provides fewer values for an argument …","Occurs when a user provides more values for an argument …","Trailing argument","Occurs when a user provides a flag, option, argument or …","A usage string","Accepted subcommands","Accepted values","Occurs when the user provides a value for an argument with …","Occurs when the user provides a different number of values …","Apply an alternative formatter to the error","End-user description of the error case, where relevant","End-user description of the error case, where relevant","","","","","","","","","","","","","","","","","","","Additional information to further qualify the error","","","","","","","Prints the error and exits.","Returns the exit code that <code>.exit</code> will exit the process …","","","","","","","","","Format the existing message with the Command’s context","Stylize the error for the terminal","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Lookup a piece of context","","","Insert a piece of context","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Type of error for programmatic processing","Create an error with a pre-defined message","Prints formatted and colored error to <code>stdout</code> or <code>stderr</code> …","","Create an unformatted error","Render the error message to a <code>StyledStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the message be written to <code>stdout</code> or not?","Apply <code>Command</code>’s formatting to the error","Container for parse results.","Value was passed in on the command-line","Value came <code>Arg::default_value</code>","Failed to downcast <code>AnyValue</code> to the specified type","Value came [<code>Arg::env</code>][crate::Arg::env]","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","Iterate over indices for where an argument appeared when …","Violation of <code>ArgMatches</code> assumptions","Iterate over raw argument values via <code>ArgMatches::get_raw</code>.","Argument not defined in <code>Command</code>","Origin of the argument’s value","Iterate over multiple values for an argument via …","Iterate over multiple values for an argument via …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type for value stored in <code>ArgMatches</code>","The target type to downcast to"],"i":[16,15,5,0,0,0,0,0,16,0,0,0,15,15,15,5,15,15,0,15,15,0,5,5,5,15,0,16,15,0,5,5,5,0,15,15,15,0,0,5,1,4,1,1,4,1,4,1,1,4,1,4,9,1,0,1,9,1,1,1,12,10,10,106,106,107,107,1,1,1,1,5,4,9,1,15,12,10,10,16,5,4,9,1,15,12,10,16,1,0,5,4,9,1,15,12,10,16,5,4,9,1,15,12,10,16,4,10,1,108,0,108,4,9,4,9,12,1,4,9,1,15,12,10,16,4,4,4,4,4,4,4,4,1,1,1,1,1,1,4,1,1,4,9,15,12,10,10,10,10,10,16,4,9,15,12,10,16,0,1,4,1,1,1,5,4,4,9,1,1,15,12,10,10,16,16,5,4,4,9,9,1,1,15,12,10,10,10,10,10,10,16,109,109,65,15,16,1,4,1,1,4,1,1,4,1,1,9,1,1,1,1,1,1,12,4,1,1,12,1,4,4,4,9,4,4,1,4,1,4,1,12,1,1,1,1,1,4,12,12,1,1,4,12,12,4,4,1,1,1,1,1,1,4,4,4,4,4,1,4,1,1,4,1,4,4,1,106,4,1,107,1,15,10,4,1,4,1,4,1,4,4,4,1,4,4,9,12,4,1,4,1,12,12,1,1,5,4,9,1,15,12,10,16,5,15,10,10,10,1,4,1,4,1,1,1,1,1,1,1,4,4,4,4,4,4,1,4,4,4,1,9,4,1,1,4,1,4,4,9,1,1,1,4,4,4,1,1,1,1,4,1,1,1,9,1,1,1,1,4,9,1,1,1,4,1,1,4,1,1,4,4,110,110,0,4,10,16,1,1,1,4,12,12,12,12,1,1,1,1,1,4,4,9,4,4,4,4,4,4,4,9,9,4,4,1,4,4,4,1,1,1,1,12,1,12,12,1,1,1,1,1,5,1,5,4,9,1,15,12,10,16,65,16,4,1,10,16,4,12,5,4,9,1,15,12,10,16,12,1,1,1,12,12,12,12,5,4,9,1,15,12,10,16,110,110,12,12,12,110,5,4,9,1,15,12,10,16,110,109,109,4,4,4,4,4,0,12,4,65,16,1,4,1,4,1,1,1,4,4,1,1,15,5,0,0,0,0,0,0,0,15,15,15,5,15,43,15,0,19,15,0,15,5,5,5,15,0,19,0,0,0,0,15,111,0,0,0,0,0,52,0,43,5,5,5,0,0,0,0,0,15,15,15,52,89,0,0,0,0,5,45,45,2,18,18,18,6,6,6,6,6,25,25,19,18,18,45,43,52,6,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,18,52,6,2,18,45,43,6,2,2,62,63,64,66,70,72,73,74,75,76,18,6,43,19,18,18,18,18,18,18,45,43,52,6,6,6,6,6,6,6,2,19,18,45,43,52,6,2,25,19,18,45,43,43,52,6,6,2,2,62,63,64,66,67,70,72,73,74,75,76,77,78,25,25,25,25,25,25,25,25,25,25,19,19,18,18,18,18,18,18,18,18,45,45,43,43,43,43,43,43,43,43,52,52,52,52,6,6,6,6,6,2,2,2,2,2,62,63,64,66,67,67,70,70,72,72,73,74,75,76,77,78,45,45,45,18,43,52,6,45,45,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,3,25,18,43,52,6,6,6,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,45,89,45,43,43,25,45,43,2,62,63,64,66,67,70,72,73,74,75,76,25,89,62,63,64,67,77,89,62,63,64,66,67,70,72,73,74,75,76,77,78,18,52,6,2,25,25,89,66,67,73,74,75,77,78,70,72,43,25,43,18,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,43,6,2,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,89,25,25,19,18,45,43,52,6,2,62,63,64,66,67,70,72,73,74,75,76,77,78,111,2,2,100,21,101,0,0,100,0,21,21,21,0,0,0,100,21,100,100,21,21,100,21,21,0,100,21,21,21,101,101,100,0,0,101,101,101,101,100,100,100,100,100,21,21,100,21,100,100,100,21,21,24,100,21,103,23,24,100,101,21,103,23,24,100,101,21,100,101,21,100,101,21,24,100,101,21,100,101,21,24,24,24,24,100,100,101,101,21,21,24,99,103,23,103,23,24,24,24,100,101,21,24,100,21,24,103,23,24,100,101,21,24,24,24,24,24,24,24,100,101,21,24,100,101,21,103,23,24,100,101,21,103,23,24,100,101,21,103,23,24,100,101,21,24,24,0,60,60,58,60,0,0,0,0,58,0,0,0,58,50,56,42,46,51,60,58,50,56,42,46,51,60,58,50,56,42,46,51,60,58,50,56,42,46,51,60,60,56,42,46,51,60,60,58,58,50,56,42,46,51,60,58,50,56,42,46,51,60,58,50,56,42,46,51,60,50,56,42,46,51,50,56,42,46,51,50,56,42,46,51,60,58,50,56,42,46,51,58,50,56,42,46,51,60,58,58,50,56,42,46,51,60,58,50,56,42,46,51,60,58,50,56,42,46,51,60,112,112],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],1],[[4,[3,[5]]],4],[[1,[3,[2]]],1],[[1,[3,[2]]],1],[[4,[3,[6]]],4],[[1,[3,[6]]],1],[[4,7],4],[[1,7],1],[[1,8],1],[[4,8],4],[[1,8],1],[[4,8],4],[[9,[3,[10]]],9],[[1,[11,[4]]],1],0,[[1,8],1],[[9,7],9],[[1,7],1],[[1,8],1],[[1,8],1],[12,8],[10,13],[10,13],[1,1],[1,1],[1,1],[1,1],[[1,[3,[6]]],1],[[1,[3,[2]]],1],[[1,[3,[2]]],1],[[1,[3,[14]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],0,[5,5],[4,4],[9,9],[1,1],[15,15],[12,12],[10,10],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],17],[[10,10],17],[[1,16],1],[[],1],0,[[],1],[[4,[3,[10]]],4],[[9,[3,[10]]],9],[[4,7],4],[[9,7],9],[[12,13],8],[1],[[],4],[[],9],[[],1],[[],15],[[],12],[[],10],[[],16],[[4,[3,[18]]],4],[[4,[11,[18]]],4],[[4,7],4],[[4,7],4],[[4,[3,[18]]],4],[[4,[11,[10]],[11,[19]],[3,[18]]],4],[[4,7],4],[[4,7],4],[1,1],[[1,8],1],[[1,8],1],[[1,8],1],[[1,8],1],[[1,[3,[14]]],1],[[4,[3,[20]]],4],[[1,[3,[20]]],1],[[1,8],1],[[4,4],8],[[9,9],8],[[15,15],8],[[12,12],8],[[10,13],8],[[10,13],8],[[10,6],8],[[10,14],8],[[10,10],8],[[16,16],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[1,21,22],[[24,[23]]]],[[4,8],4],[[1,[3,[25]]],1],[[1,[27,[26]]],[[28,[1]]]],[[1,[27,[26]]],[[28,[1]]]],[[5,29],[[31,[30]]]],[[4,29],[[31,[30]]]],[[4,29],[[31,[30]]]],[[9,29],[[31,[30]]]],[[1,29],[[31,[30]]]],[[1,29],[[31,[30]]]],[[15,29],[[31,[30]]]],[[12,29],[[31,[30]]]],[[10,29],[[31,[30]]]],[[10,29],[[31,[30]]]],[[16,29],[[31,[30]]]],[[16,29],[[31,[30]]]],[[]],[[]],[4,4],[[]],[9,9],[1,1],[[]],[[]],[[]],[6,10],[10,10],[13,10],[13,10],[6,10],[[]],[[]],[12,[[31,[[24,[23]]]]]],[12,[[31,[[24,[23]]]]]],[[13,8],[[31,[14]]]],[13,[[31,[15]]]],[13,[[31,[16]]]],[1,[[28,[2]]]],[4,5],[1,[[28,[2]]]],[1,[[28,[2]]]],[4,[[28,[[33,[13,32]]]]]],[1,34],[1,34],[4,[[28,[[33,[35,32]]]]]],[1,34],[[1,4],[[33,[4,32]]]],[9,34],[1,34],[1,[[28,[13]]]],[1,[[28,[2]]]],[1,[[28,[2]]]],[1,[[28,[13]]]],[1,16],[[12,13],36],[4,[[37,[18]]]],[1,[[28,[13]]]],[1,[[28,[25]]]],[[12,13],8],[1,34],[4,[[28,[2]]]],[4,[[28,[13]]]],[4,10],[9,10],[4,[[28,[20]]]],[4,[[28,[13]]]],[1,[[28,[2]]]],[4,[[28,[[33,[13,32]]]]]],[1,[[28,[13]]]],[4,[[28,[2]]]],[1,[[28,[13]]]],[[12,13],[[28,[[42,[[0,[38,39,40,41]]]]]]]],[1,12],[[1,7],12],[1,12],[1,13],[1,[[28,[13]]]],[4,[[28,[43]]]],[[12,13],[[28,[[44,[[0,[38,39,40,41]]]]]]]],[[12,13],[[28,[[0,[38,39,40,41]]]]]],[1,34],[1,34],[4,[[33,[45,32]]]],[[12,13],[[28,[46]]]],[[12,13],[[28,[47]]]],[4,[[28,[35]]]],[4,[[28,[[33,[35,32]]]]]],[1,[[28,[35]]]],[1,48],[1,[[28,[13]]]],[1,[[28,[13]]]],[1,34],[1,34],[4,[[28,[35]]]],[4,15],[4,[[28,[[37,[6]]]]]],[4,25],[4,[[28,[6]]]],[1,[[28,[13]]]],[4,[[28,[[33,[13,32]]]]]],[1,34],[1,34],[4,[[28,[[33,[35,32]]]]]],[1,34],[[4,8],4],[[4,[3,[10]]],4],[[1,[11,[9]]],1],[[],[[28,[10]]]],[[4,7],4],[[1,7],1],[13,8],[1,8],[[15,49]],[[10,49]],[[4,[3,[2]]],4],[[1,8],1],[[4,[3,[6]]],4],[[1,[3,[2]]],1],[[4,8],4],[[1,8],1],[[4,8],4],[[4,8],4],[[4,8],4],[[1,8],1],[[4,8],4],[[4,[11,[10]]],4],[[9,[11,[10]]],9],[12,50],[[4,8],4],[[1,8],1],[[4,[3,[20]]],4],[[1,10]],[[12,13],[[28,[20]]]],[[12,13],[[28,[51]]]],[[1,8],1],[[1,8],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[52,[5]]]],[15,[[52,[15]]]],[[],[[52,[10]]]],[[],[[52,[14]]]],[[],[[52,[6]]]],[1,8],[4,8],[1,8],[4,8],[1,8],[1,8],[1,8],[1,8],[1,8],[1,8],[1,8],[4,8],[4,8],[4,8],[4,8],[4,8],[4,8],[1,8],[4,8],[4,8],[4,8],[1,8],[9,8],[4,8],[1,8],[1,8],[4,8],[1,8],[4,8],[4,8],[9,8],[1,8],[1,8],[1,8],[4,8],[[4,8],4],[[4,[3,[6]]],4],[[1,[3,[2]]],1],[[1,[11,[6]]],1],[[1,[3,[6]]],1],[[1,7],1],[[4,[3,[2]]],4],[[1,[3,[6]]],1],[[1,20],1],[[1,8],1],[[9,8],9],[[1,[27,[13]],53],1],[[1,54],1],[[1,[27,[13]],53],1],[[1,[11,[6]]],1],[[[11,[10]]],4],[[[11,[10]]],9],[[[11,[6]]],1],[[1,[3,[20]]],1],[[1,[3,[6]]],1],[[4,8],4],[[1,8],1],[[1,8],1],[[4,[3,[43]]],4],[[1,[3,[2]]],1],[[1,[3,[2]]],1],[[4,[3,[10]]],4],[[4,7],4],[[]],[7],0,[[4,4],[[28,[17]]]],[[10,10],[[28,[17]]]],[[],34],[1,[[31,[55]]]],[1,[[31,[55]]]],[[1,8],1],[[4,8],4],[[12,13],[[28,[[56,[[0,[38,39,40,41]]]]]]]],[[12,13],[[28,[[57,[[0,[38,39,40,41]]]]]]]],[[12,13],[[28,[[0,[38,39,40,41]]]]]],[12,28],[1,2],[1,2],[1,14],[1,2],[1,14],[[4,8],4],[[4,8],4],[[9,8],9],[[4,[11,[10]],[11,[18]]],4],[[4,7],4],[[4,7],4],[[4,[3,[10]]],4],[[4,7],4],[[4,7],4],[[4,[3,[10]]],4],[[9,[3,[10]]],9],[[9,7],9],[[4,[11,[19]],[11,[10]]],4],[[4,7],4],[[1,[11,[14]]]],[[4,[3,[35]]],4],[[4,[3,[35]]],4],[[4,7],4],[[1,[3,[35]]],1],[[1,[3,[35]]],1],[[1,7],1],[[1,[11,[1]]],1],[12,28],[[1,[3,[6]]],1],[[12,13],[[28,[12]]]],[12,[[28,[13]]]],[[1,8],1],[[1,8],1],[[1,8],1],[[1,[3,[6]]],1],[[1,7],1],[5,8],[[1,20],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[28,[45]]]],[16,[[28,[45]]]],[[],14],[[],14],[[],14],[[],14],[[4,8],4],[[12,13],[[31,[8,58]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[12,13],[[31,[[28,[[42,[[0,[38,39,40,41]]]]]],58]]]],[1,[[31,[12,[24,[23]]]]]],[[1,7],[[31,[12,[24,[23]]]]]],[[1,7],[[31,[12,[24,[23]]]]]],[[12,13],[[31,[[28,[[44,[[0,[38,39,40,41]]]]]],58]]]],[[12,13],[[31,[[28,[[0,[38,39,40,41]]]],58]]]],[[12,13],[[31,[[28,[46]],58]]]],[[12,13],[[31,[[28,[47]],58]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],[[31,[[24,[23]]]]]],[7,[[31,[[24,[23]]]]]],[[12,13],[[31,[[28,[[56,[[0,[38,39,40,41]]]]]],58]]]],[[12,13],[[31,[[28,[[57,[[0,[38,39,40,41]]]]]],58]]]],[[12,13],[[31,[[28,[[0,[38,39,40,41]]]],58]]]],[7,[[31,[[24,[23]]]]]],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[7],[12,[[31,[[24,[23]]]]]],[12,[[31,[[24,[23]]]]]],[[4,[3,[35]]],4],[[4,[3,[15]]],4],[[4,[3,[6]]],4],[[4,7],4],[[4,[3,[25]]],4],0,[[12,13],[[28,[60]]]],[[4,[3,[6]]],4],[[],37],[[],[[37,[16]]]],[[1,[3,[6]]],1],[[4,[3,[6]]],4],[[1,[3,[6]]],1],[[4,7],4],[[1,7],1],[[1,[3,[6]]],1],[[1,7],1],[[4,[3,[35]]],4],[[4,7],4],[[1,[3,[35]]],1],[[1,7],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,[3,[6]]],45],[[45,7],45],[2,22],[18,26],[18,26],[18,61],[6,26],[6,13],[6,61],[6,[[37,[36]]]],[6,13],[[],25],[[]],[[]],[18,26],[[]],[[]],[[]],[[]],[6,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[19,19],[18,18],[45,45],[43,43],[[[52,[39]]],[[52,[39]]]],[6,6],[2,2],[62,62],[63,63],[64,64],[[[66,[[0,[39,65,39,40,41]]]]],[[66,[[0,[39,65,39,40,41]]]]]],[67,67],[[[70,[[0,[39,[69,[68]],39,40,41]]]]],[[70,[[0,[39,[69,[68]],39,40,41]]]]]],[[[72,[[0,[39,[69,[71]]]]]]],[[72,[[0,[39,[69,[71]]]]]]]],[73,73],[74,74],[75,75],[76,76],[[[77,[39,39]]],[[77,[39,39]]]],[[[78,[39,39]]],[[78,[39,39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,18],17],[[[52,[79]],[52,[79]]],17],[[6,6],17],[[2,2],17],[[],18],[[],45],[[],43],[[],6],[[],2],[[],2],[[],62],[[],63],[[],64],[[],[[66,[[0,[65,39,40,41]]]]]],[[],[[70,[[0,[[69,[68]],39,40,41]]]]]],[[],[[72,[[69,[71]]]]]],[[],73],[[],74],[[],75],[[],76],[18,26],[6,13],[43,[[80,[20]]]],[[19,19],8],[[18,81],8],[[18,14],8],[[18,26],8],[[18,18],8],[[18,13],8],[[18,13],8],[[45,45],8],[[43,43],8],[[[52,[[82,[[82,[[82,[82]]]]]]]],[52,[[82,[[82,[[82,[82]]]]]]]]],8],[[6,6],8],[[6,26],8],[[6,13],8],[[6,13],8],[[6,26],8],[[6,14],8],[[6,10],8],[[2,2],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[25,29],[[31,[30]]]],[[19,29],[[31,[30]]]],[[18,29],[[31,[30]]]],[[45,29],[[31,[30]]]],[[43,29],[[31,[30]]]],[[43,29],[[31,[30]]]],[[[52,[83]],29],[[31,[30]]]],[[6,29],[[31,[30]]]],[[6,29],[[31,[30]]]],[[2,29],[[31,[30]]]],[[2,29],[[31,[30]]]],[[62,29],[[31,[30]]]],[[63,29],[[31,[30]]]],[[64,29],[[31,[30]]]],[[[66,[[0,[83,65,39,40,41]]]],29],[[31,[30]]]],[[67,29],[[31,[30]]]],[[[70,[[0,[83,[69,[68]],39,40,41]]]],29],[[31,[30]]]],[[[72,[[0,[83,[69,[71]]]]]],29],[[31,[30]]]],[[73,29],[[31,[30]]]],[[74,29],[[31,[30]]]],[[75,29],[[31,[30]]]],[[76,29],[[31,[30]]]],[[[77,[83,83]],29],[[31,[30]]]],[[[78,[83,83]],29],[[31,[30]]]],[[[84,[68]]],25],[[[85,[68]]],25],[[[86,[[11,[45]]]]],25],[[[87,[68]]],25],[[[88,[68]]],25],[[[0,[89,40,41]]],25],[[[33,[[11,[45]],32]]],25],[[[90,[68]]],25],[91,25],[[]],[[[11,[18]]],19],[[]],[13,18],[26,18],[6,18],[26,18],[18,18],[6,18],[[]],[13,18],[[[11,[6]]],45],[[]],[[[85,[20]]],43],[[[84,[20]]],43],[20,43],[[[87,[20]]],43],[[[88,[20]]],43],[91,43],[[]],[[[90,[20]]],43],[92],[[],52],[[]],[28,52],[13,6],[10,6],[6,6],[[]],[13,6],[13,2],[14,2],[13,2],[[]],[14,2],[[]],[[]],[[]],[[]],[[]],[7,67],[[]],[[[93,[68]]],[[70,[[0,[[69,[68]],39,40,41]]]]]],[[]],[[[93,[71]]],[[72,[[69,[71]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[45,[[28,[2]]]],[45,13],[45,34],[[18,49]],[[43,49]],[[[52,[94]],49]],[[6,49]],[[45,[3,[2]]],45],[[45,8],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[],[[52,[25]]]],[[],[[52,[18]]]],[[],[[52,[43]]]],[52,52],[[],[[52,[10]]]],[[],[[52,[18]]]],[[],[[52,[14]]]],[[],[[52,[6]]]],[[],[[52,[2]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[[],[[52,[25]]]],[45,8],[[[0,[95,39]]],[[77,[[0,[95,39]]]]]],[[45,13,8],8],[43,20],[43,20],[89,25],[[[11,[6]]],45],[[[11,[43]]],43],[[],2],[[],62],[[],63],[[],64],[[],[[66,[[0,[65,39,40,41]]]]]],[[[11,[67]]],67],[[],[[70,[[0,[[69,[68]],39,40,41]]]]]],[[],[[72,[[69,[71]]]]]],[[],73],[[],74],[[],75],[[],76],[[],25],[[1,[28,[4]],81],[[31,[[24,[23]]]]]],[[62,1,[28,[4]],81],[[31,[[24,[23]]]]]],[[63,1,[28,[4]],81],[[31,[[24,[23]]]]]],[[64,1,[28,[4]],81],[[31,[[24,[23]]]]]],[[67,1,[28,[4]],81],[[31,[14,[24,[23]]]]]],[[[77,[89,[0,[95,39,40,41]]]],1,[28,[4]],81],[[31,[[24,[23]]]]]],[[1,[28,[4]],26],[[31,[[24,[23]]]]]],[[62,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[63,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[64,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[[66,[[0,[65,39,40,41]]]],1,[28,[4]],26],[[31,[[24,[23]]]]]],[[67,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[[70,[[0,[[69,[68]],39,40,41]]]],1,[28,[4]],26],[[31,[[24,[23]]]]]],[[[72,[[0,[[69,[71]],39,40,41]]]],1,[28,[4]],26],[[31,[[24,[23]]]]]],[[73,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[74,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[75,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[76,1,[28,[4]],26],[[31,[[24,[23]]]]]],[[[77,[89,[0,[95,39,40,41]]]],1,[28,[4]],26],[[31,[[24,[23]]]]]],[[[78,[89,[0,[95,39,40,41]]]],1,[28,[4]],26],[[31,[[24,[23]]]]]],[[18,18],[[28,[17]]]],[[[52,[[96,[[96,[[96,[96]]]]]]]],[52,[[96,[[96,[[96,[96]]]]]]]]],[[28,[17]]]],[[6,6],[[28,[17]]]],[[2,2],[[28,[17]]]],[[],25],[25,[[28,[[97,[34,32]]]]]],[[],[[28,[[97,[34,32]]]]]],[[[66,[[0,[65,39,40,41]]]]],[[28,[[97,[34,32]]]]]],[67,[[28,[[97,[34,32]]]]]],[73,[[28,[[97,[34,32]]]]]],[74,[[28,[[97,[34,32]]]]]],[75,[[28,[[97,[34,32]]]]]],[[[77,[89,[0,[95,39,40,41]]]]],[[28,[[97,[34,32]]]]]],[[[78,[89,[0,[95,39,40,41]]]]],[[28,[[97,[34,32]]]]]],[[[70,[[0,[[69,[68]],39,40,41]]]],[93,[68]]],[[70,[[0,[[69,[68]],39,40,41]]]]]],[[[72,[[69,[71]]]],[93,[71]]],[[72,[[69,[71]]]]]],[43,[[80,[20]]]],[[],25],[43,8],[18,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[[0,[95,39,40,41]]],[[78,[[0,[95,39,40,41]]]]]],[25,98],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[]],[[2,35],[[31,[30]]]],[[2,13],[[31,[30]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[24,[99]]],[[24,[99]]]],[100,[[28,[13]]]],[21,[[28,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[101,101],[21,21],[[]],[[]],[[]],[[[24,[99]]],34],[[100,100],8],[[101,101],8],[[21,21],8],[[],8],[[],8],[[],8],[[[24,[99]]],92],[[[24,[99]]],102],[[[24,[99]],29],[[31,[30]]]],[[[24,[99]],29],[[31,[30]]]],[[100,29],[[31,[30]]]],[[100,29],[[31,[30]]]],[[101,29],[[31,[30]]]],[[101,29],[[31,[30]]]],[[21,29],[[31,[30]]]],[[21,29],[[31,[30]]]],[[[24,[99]],1],[[24,[99]]]],[24,2],[[[24,[103]]],2],[[[24,[23]]],2],[[]],[[]],[[]],[55,[[24,[99]]]],[30,[[24,[99]]]],[[]],[[]],[[]],[[[24,[99]],100],[[28,[101]]]],[[100,49]],[[21,49]],[[[24,[99]],100,101],[[28,[101]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[99]]],21],[21,[[24,[99]]]],[[[24,[99]]],[[31,[55]]]],[104],[[21,22],[[24,[99]]]],[[[24,[99]]],2],[[[24,[99]]],[[28,[105]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[[24,[99]]],8],[[[24,[99]],1],[[24,[99]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,58],[50,50],[[[56,[39]]],[[56,[39]]]],[[[42,[39]]],[[42,[39]]]],[46,46],[51,51],[60,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[60,60],17],[[],56],[[],42],[[],46],[[],51],[[60,60],8],[[],8],[[58,29],[[31,[30]]]],[[58,29],[[31,[30]]]],[[50,29],[[31,[30]]]],[[[56,[83]],29],[[31,[30]]]],[[[42,[83]],29],[[31,[30]]]],[[46,29],[[31,[30]]]],[[51,29],[[31,[30]]]],[[60,29],[[31,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[28,[10]]]],[56,28],[42,28],[46,[[28,[26]]]],[51,[[28,[20]]]],[50,[[28,[10]]]],[56,28],[42,28],[46,[[28,[26]]]],[51,[[28,[20]]]],[[60,60],[[28,[17]]]],[104],[50],[56],[42],[46],[51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],0,0],"c":[],"p":[[3,"Command"],[3,"StyledStr"],[8,"IntoResettable"],[3,"Arg"],[4,"ArgAction"],[3,"Str"],[8,"IntoIterator"],[15,"bool"],[3,"ArgGroup"],[3,"Id"],[8,"Into"],[3,"ArgMatches"],[15,"str"],[3,"String"],[4,"ValueHint"],[4,"ColorChoice"],[4,"Ordering"],[3,"OsStr"],[4,"ArgPredicate"],[15,"usize"],[4,"ErrorKind"],[8,"Display"],[3,"DefaultFormatter"],[3,"Error"],[3,"ValueParser"],[3,"OsStr"],[8,"AsRef"],[4,"Option"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Global"],[3,"Vec"],[8,"Iterator"],[15,"char"],[15,"u8"],[15,"slice"],[8,"Any"],[8,"Clone"],[8,"Send"],[8,"Sync"],[3,"ValuesRef"],[3,"ValueRange"],[3,"OccurrencesRef"],[3,"PossibleValue"],[3,"RawValues"],[3,"RawOccurrences"],[3,"Styles"],[8,"Hasher"],[3,"IdsRef"],[3,"Indices"],[4,"Resettable"],[8,"FnOnce"],[8,"FnMut"],[3,"Error"],[3,"Values"],[3,"Occurrences"],[4,"MatchesError"],[3,"TypeId"],[4,"ValueSource"],[3,"Path"],[3,"StringValueParser"],[3,"OsStringValueParser"],[3,"PathBufValueParser"],[8,"ValueEnum"],[3,"EnumValueParser"],[3,"PossibleValuesParser"],[15,"i64"],[8,"TryFrom"],[3,"RangedI64ValueParser"],[15,"u64"],[3,"RangedU64ValueParser"],[3,"BoolValueParser"],[3,"FalseyValueParser"],[3,"BoolishValueParser"],[3,"NonEmptyStringValueParser"],[3,"MapValueParser"],[3,"TryMapValueParser"],[8,"Ord"],[4,"Bound"],[3,"OsString"],[8,"PartialEq"],[8,"Debug"],[3,"RangeInclusive"],[3,"Range"],[15,"array"],[3,"RangeToInclusive"],[3,"RangeFrom"],[8,"TypedValueParser"],[3,"RangeTo"],[3,"RangeFull"],[15,"never"],[8,"RangeBounds"],[8,"Hash"],[8,"Fn"],[8,"PartialOrd"],[3,"Box"],[3,"AnyValueId"],[8,"ErrorFormatter"],[4,"ContextKind"],[4,"ContextValue"],[15,"i32"],[3,"KindFormatter"],[3,"Demand"],[8,"Error"],[8,"Args"],[8,"Subcommand"],[8,"CommandFactory"],[8,"FromArgMatches"],[8,"Parser"],[8,"ValueParserFactory"],[13,"Downcast"]]},\
"clap_builder":{"doc":"clap_builder","t":"NCCCCINECIGIDNIIICOLLKKKKLLLLLALLLLLKOKLLLLLLLLLLALLLLLLLLLLLKLLLLLLLKLLLLLLLLLLALLLLKLLLLLLLLLLLLLLLLLKLLOKLNNDEDEDDDNNNNNSNDNNDNNNNNINDDDDNQDDDDDNESNNNDDDDINNNNQEDIDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLNNNEENCNNNDIENNNNNNNNNDNNNNNNNGDNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNDDEDNEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Always","Arg","ArgAction","ArgGroup","ArgMatches","Args","Auto","ColorChoice","Command","CommandFactory","Error","FromArgMatches","Id","Never","Parser","Subcommand","ValueEnum","ValueHint","arg","as_ref","as_str","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","cmp","command","command","command_for_update","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","from_str","group_id","group_id","has_subcommand","hash","into","into","into_resettable","into_resettable","into_resettable","parse","parse","parse_from","parse_from","parser","partial_cmp","possible_values","to_owned","to_owned","to_possible_value","to_possible_value","to_string","to_string","try_from","try_from","try_into","try_into","try_parse","try_parse","try_parse_from","try_parse_from","try_update_from","try_update_from","type_id","type_id","update_from","update_from","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","value_parser","value_variants","value_variants","AnyPath","Append","Arg","ArgAction","ArgGroup","ArgPredicate","BoolValueParser","BoolishValueParser","Command","CommandName","CommandString","CommandWithArguments","Count","DirPath","EMPTY","EmailAddress","EnumValueParser","Equals","ExecutablePath","FalseyValueParser","FilePath","Help","HelpLong","HelpShort","Hostname","IntoResettable","IsPresent","MapValueParser","NonEmptyStringValueParser","OsStr","OsStringValueParser","Other","Parser","PathBufValueParser","PossibleValue","PossibleValuesParser","RangedI64ValueParser","RangedU64ValueParser","Reset","Resettable","SINGLE","Set","SetFalse","SetTrue","Str","StringValueParser","StyledStr","TryMapValueParser","TypedValueParser","Unknown","Url","Username","Value","Value","ValueHint","ValueParser","ValueParserFactory","ValueRange","Version","about","action","after_help","after_long_help","alias","alias","alias","aliases","aliases","aliases","allow_external_subcommands","allow_hyphen_values","allow_missing_positional","allow_negative_numbers","ansi","arg","arg","arg_required_else_help","args","args","args_conflicts_with_subcommands","args_override_self","as_os_str","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","author","before_help","before_long_help","bin_name","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","conflicts_with","conflicts_with","conflicts_with_all","conflicts_with_all","debug_assert","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_missing_value","default_missing_value_os","default_missing_values","default_missing_values_os","default_value","default_value_if","default_value_ifs","default_values","defer","deref","deref","disable_colored_help","disable_help_flag","disable_help_subcommand","disable_version_flag","display_name","display_order","display_order","dont_delimit_trailing_values","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","exclusive","external_subcommand_value_parser","find_subcommand","find_subcommand_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_about","get_action","get_after_help","get_after_long_help","get_all_aliases","get_all_aliases","get_all_long_flag_aliases","get_all_short_aliases","get_all_short_flag_aliases","get_arg_conflicts_with","get_args","get_arguments","get_author","get_before_help","get_before_long_help","get_bin_name","get_color","get_default_values","get_display_name","get_external_subcommand_value_parser","get_groups","get_help","get_help","get_help_heading","get_id","get_id","get_index","get_long","get_long_about","get_long_and_visible_aliases","get_long_flag","get_long_help","get_long_version","get_matches","get_matches_from","get_matches_mut","get_name","get_name","get_name_and_aliases","get_next_help_heading","get_num_args","get_opts","get_positionals","get_possible_values","get_short","get_short_and_visible_aliases","get_short_flag","get_styles","get_subcommand_help_heading","get_subcommand_value_name","get_subcommands","get_subcommands_mut","get_value_delimiter","get_value_hint","get_value_names","get_value_parser","get_value_terminator","get_version","get_visible_aliases","get_visible_aliases","get_visible_long_flag_aliases","get_visible_short_aliases","get_visible_short_flag_aliases","global","group","group","groups","groups","has_subcommands","hash","hash","hash","hash","hash","help","help","help_expected","help_heading","help_template","hide","hide","hide","hide_default_value","hide_long_help","hide_possible_values","hide_possible_values","hide_short_help","id","id","ignore_case","ignore_errors","index","index","infer_long_args","infer_subcommands","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","is_allow_external_subcommands_set","is_allow_hyphen_values_set","is_allow_missing_positional_set","is_allow_negative_numbers_set","is_arg_required_else_help_set","is_args_conflicts_with_subcommands_set","is_disable_colored_help_set","is_disable_help_flag_set","is_disable_help_subcommand_set","is_disable_version_flag_set","is_dont_delimit_trailing_values_set","is_exclusive_set","is_global_set","is_hide_default_value_set","is_hide_long_help_set","is_hide_possible_values_set","is_hide_set","is_hide_set","is_hide_set","is_hide_short_help_set","is_ignore_case_set","is_last_set","is_multicall_set","is_multiple","is_next_line_help_set","is_next_line_help_set","is_no_binary_name_set","is_positional","is_propagate_version_set","is_require_equals_set","is_required_set","is_required_set","is_subcommand_negates_reqs_set","is_subcommand_precedence_over_arg_set","is_subcommand_required_set","is_trailing_var_arg_set","last","long","long_about","long_flag","long_flag_alias","long_flag_aliases","long_help","long_version","map","map","matches","max_term_width","max_values","min_values","multicall","multiple","mut_arg","mut_args","mut_subcommand","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_display_order","next_help_heading","next_line_help","next_line_help","no_binary_name","num_args","os_string","override_help","override_usage","overrides_with","overrides_with_all","parse","parse","parse","parse","parse","parse","parse","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_buf","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","print_help","print_long_help","propagate_version","range","range","raw","render_help","render_long_help","render_long_version","render_usage","render_version","require_equals","required","required","required_if_eq","required_if_eq_all","required_if_eq_any","required_unless_present","required_unless_present_all","required_unless_present_any","requires","requires","requires_all","requires_if","requires_ifs","set_bin_name","short","short_alias","short_aliases","short_flag","short_flag_alias","short_flag_aliases","start_bound","string","subcommand","subcommand_help_heading","subcommand_negates_reqs","subcommand_precedence_over_arg","subcommand_required","subcommand_value_name","subcommands","takes_values","takes_values","term_width","to_os_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trailing_var_arg","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_matches","try_get_matches_from","try_get_matches_from_mut","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_delimiter","value_hint","value_name","value_names","value_parser","value_parser","value_terminator","version","visible_alias","visible_alias","visible_aliases","visible_aliases","visible_long_flag_alias","visible_long_flag_aliases","visible_short_alias","visible_short_aliases","visible_short_flag_alias","visible_short_flag_aliases","write_char","write_str","ActualNumValues","ArgumentConflict","Bool","ContextKind","ContextValue","Custom","DefaultFormatter","DisplayHelp","DisplayHelpOnMissingArgumentOrSubcommand","DisplayVersion","Error","ErrorFormatter","ErrorKind","ExpectedNumValues","Format","InvalidArg","InvalidSubcommand","InvalidSubcommand","InvalidUtf8","InvalidValue","InvalidValue","Io","KindFormatter","MinValues","MissingRequiredArgument","MissingSubcommand","NoEquals","None","Number","PriorArg","Result","RichFormatter","String","Strings","StyledStr","StyledStrs","Suggested","SuggestedArg","SuggestedCommand","SuggestedSubcommand","SuggestedValue","TooFewValues","TooManyValues","TrailingArg","UnknownArgument","Usage","ValidSubcommand","ValidValue","ValueValidation","WrongNumberOfValues","apply","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","eq","eq","eq","equivalent","equivalent","equivalent","exit","exit_code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_error","format_error","format_error","from","from","from","from","from","from","from","from","get","hash","hash","insert","into","into","into","into","into","into","kind","new","print","provide","raw","render","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_stderr","with_cmd","ArgMatches","CommandLine","DefaultValue","Downcast","EnvVariable","IdsRef","Indices","MatchesError","RawValues","UnknownArgument","ValueSource","Values","ValuesRef","args_present","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains_id","default","default","default","default","default","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_count","get_flag","get_many","get_occurrences","get_one","get_raw","get_raw_occurrences","ids","index_of","indices_of","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","partial_cmp","provide","remove_many","remove_occurrences","remove_one","remove_subcommand","size_hint","size_hint","size_hint","size_hint","size_hint","subcommand","subcommand_matches","subcommand_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_contains_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_many","try_get_occurrences","try_get_one","try_get_raw","try_get_raw_occurrences","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_remove_many","try_remove_occurrences","try_remove_one","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_source","actual","expected"],"q":[[0,"clap_builder"],[109,"clap_builder::builder"],[946,"clap_builder::error"],[1090,"clap_builder::parser"],[1254,"clap_builder::parser::MatchesError"]],"d":["Enables colored output regardless of whether or not the …","","","","","Parse a set of arguments into a user-defined container.","Enables colored output only when the output is going to a …","Represents the color preferences for program output","","Create a <code>Command</code> relevant for a user-defined container.","Command Line Argument Parser Error","Converts an instance of <code>ArgMatches</code> to a user-defined …","<code>Arg</code> or <code>ArgGroup</code> identifier","Disables colored output no matter if the output is going …","Parse command-line arguments into <code>Self</code>.","Parse a sub-command into a user-defined enum.","Parse arguments into enums.","","Create an <code>Arg</code> from a usage string.","","Get the raw string of the <code>Id</code>","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","","","","","","Define <code>Command</code> line arguments","","","","","","Build a <code>Command</code> that can instantiate <code>Self</code>.","Requires <code>cargo</code> feature flag to be enabled.","Build a <code>Command</code> that can update <code>self</code>.","","","","","","","","","","","Error reporting","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Parse an argument into <code>Self</code>.","Parse an argument into <code>Self</code>.","","Report the <code>ArgGroup::id</code> for this set of arguments","Report the <code>ArgGroup::id</code> for this set of arguments","Test whether <code>Self</code> can parse a specific subcommand","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Parse from <code>std::env::args_os()</code>, exit on error","Parse from <code>std::env::args_os()</code>, exit on error","Parse from iterator, exit on error","Parse from iterator, exit on error","<code>Command</code> line argument parser","","Report all <code>possible_values</code>","","","The canonical argument value.","","","","","","","","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from iterator, return Err on error.","Parse from iterator, return Err on error.","Update from iterator, return Err on error.","Update from iterator, return Err on error.","","","Update from iterator, exit on error","Update from iterator, exit on error","Assign values from <code>ArgMatches</code> to <code>self</code>.","Assign values from <code>ArgMatches</code> to <code>self</code>.","Assign values from <code>ArgMatches</code> to <code>self</code>.","Select a <code>ValueParser</code> implementation from the intended type","All possible argument values, in display order.","","Any existing path.","When encountered, store the associated value(s) in …","The abstract representation of a command line argument. …","Behavior of arguments when they are encountered while …","Family of related arguments.","Operations to perform on argument values","Implementation for <code>ValueParser::bool</code>","Parse bool-like string values, everything else is <code>true</code>","Build a command-line interface.","Name of a command, without arguments. May be relative to …","A single string containing a command and its arguments.","Capture the remaining arguments as a command name and …","When encountered, increment a <code>u8</code> counter","Path to a directory.","Nor argument values, or a flag","Email address.","Parse an <code>ValueEnum</code> value.","Does the argument match the specified value?","Path to an executable file.","Parse false-like string values, everything else is <code>true</code>","Path to a file.","When encountered, display <code>Command::print_help</code>","When encountered, display <code>Command::print_long_help</code>","When encountered, display <code>Command::print_help</code>","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …","Convert to the intended resettable type","Is the argument present?","Adapt a <code>TypedValueParser</code> from one value to another","Parse non-empty string values","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::os_string</code>","None of the hints below apply. Disables shell completion …","Generated parser, usually <code>ValueParser</code>.","Implementation for <code>ValueParser::path_buf</code>","A possible value of an argument.","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Parse number that fall within a range of values","Parse number that fall within a range of values","Reset builder value","Clearable builder value","A single argument value, the most common case for options","When encountered, store the associated value(s) in …","When encountered, act as if <code>&quot;false&quot;</code> was encountered on the …","When encountered, act as if <code>&quot;true&quot;</code> was encountered on the …","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::string</code>","Terminal-styling container","Adapt a <code>TypedValueParser</code> from one value to another","Parse/validate argument values","Default value if hint is not specified. Follows shell …","Complete web address.","Name of a local operating system user.","Overwrite builder value","Argument’s value type","Provide shell with hint on how to complete an argument.","Parse/validate argument values","Register a type with value_parser!","Values per occurrence for an argument","When encountered, display <code>Command::version</code>","Sets the program’s description for the short help (<code>-h</code>).","Specify how to react to an argument when parsing it.","Free-form help text for after auto-generated short help (<code>-h</code>…","Free-form help text for after auto-generated long help (…","Add an alias, which functions as a hidden long flag.","Sets a hidden alias to this subcommand.","Sets a <em>hidden</em> alias for this argument value.","Add aliases, which function as hidden long flags.","Sets multiple hidden aliases to this subcommand.","Sets multiple <em>hidden</em> aliases for this argument value.","Assume unexpected positional arguments are a <code>subcommand</code>.","Allows values which start with a leading hyphen (<code>-</code>)","Allows one to implement two styles of CLIs where …","Allows negative numbers to pass as values.","Display using ANSI Escape Code styling","Adds an argument to this group by name","Adds an argument to the list of valid possibilities.","Exit gracefully if no arguments are present (e.g. <code>$ myprog</code>…","Adds multiple arguments to this group by name","Adds multiple arguments to the list of valid possibilities.","Specifies that use of an argument prevents the use of …","Replace prior occurrences of arguments rather than error","Get the raw string as an <code>std::ffi::OsStr</code>","","","","","","","Get the raw string of the <code>Str</code>","Sets the author(s) for the help message.","Free-form help text for before auto-generated short help (…","Free-form help text for before auto-generated long help (…","Overrides the runtime-determined name of the binary for …","<code>bool</code> parser for argument values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prepare for introspecting on all included <code>Command</code>s","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets when to color output.","This argument is mutually exclusive with the specified …","Specify an argument or group that must <strong>not</strong> be present when …","This argument is mutually exclusive with the specified …","Specify arguments or groups that must <strong>not</strong> be present when …","Catch problems earlier in the development cycle.","","","","","","","","","","","","","","","","","","","","","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when not present.","Specifies the value of the argument if <code>arg</code> has been used …","Specifies multiple values and conditions in the same …","Value for the argument when not present.","Delay initialization for parts of the <code>Command</code>","","","Disables colorized help messages.","Disables <code>-h</code> and <code>--help</code> flag.","Disables the <code>help</code> <code>subcommand</code>.","Disables <code>-V</code> and <code>--version</code> flag.","Overrides the runtime-determined display name of the …","Allows custom ordering of args within the help message.","Set the placement of this subcommand within the help.","Disables the automatic delimiting of values after <code>--</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Custom error message for post-parsing validation","This argument must be passed alone; it conflicts with all …","Specifies how to parse external subcommand arguments.","Find subcommand such that its name or one of aliases …","Find subcommand such that its name or one of aliases …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the help message specified via <code>Command::about</code>.","Behavior when parsing the argument","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get <em>all</em> aliases for this argument, if any, both visible …","Iterate through the set of <em>all</em> the aliases for this …","Iterate through the set of <em>all</em> the long aliases for this …","Get <em>all</em> short aliases for this argument, if any, both …","Iterate through the set of <em>all</em> the short aliases for this …","Get a list of all arguments the given argument conflicts …","Getters for all args. It will return a vector of <code>Id</code>","Iterate through the set of arguments.","Get the authors of the cmd.","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get the name of the binary.","Should we color the output?","Get the default values specified for this argument, if any","Get the name of the binary.","Configured parser for values passed to an external …","Iterate through the set of groups.","Get the help specified for this argument, if any","Get the help specified for this argument, if any","Get the help heading specified for this argument, if any","Get the name of the argument","Get the name of the group","Get the index of this argument, if any","Get the long option name for this argument, if any","Get the help message specified via <code>Command::long_about</code>.","Get the long option name and its visible aliases, if any","Get the long flag of the subcommand.","Get the long help specified for this argument, if any","Get the long version of the cmd.","Parse <code>env::args_os</code>, exiting on failure.","Parse the specified arguments, exiting on failure.","Parse <code>env::args_os</code>, exiting on failure.","Get the name of the cmd.","Get the name of the argument value","Returns all valid values of the argument value.","Get the custom section heading specified via …","Get the number of values for this argument.","Iterate through the <em>options</em>.","Iterate through the <em>positionals</em> arguments.","Get the names of possible values for this argument. Only …","Get the short option name for this argument, if any","Get the short option name and its visible aliases, if any","Get the short flag of the subcommand.","Return the current <code>Styles</code> for the <code>Command</code>","Returns the help heading for listing subcommands.","Returns the subcommand value name.","Iterate through the set of subcommands, getting a …","Iterate through the set of subcommands, getting a mutable …","Get the delimiter between multiple values","Get the value hint of this argument","Get the names of values for this argument.","Configured parser for argument values","Get the value terminator for this argument. The …","Get the version of the cmd.","Get visible aliases for this argument, if any","Iterate through the <em>visible</em> aliases for this subcommand.","Iterate through the <em>visible</em> long aliases for this …","Get visible short aliases for this argument, if any","Iterate through the <em>visible</em> short aliases for this …","Specifies that an argument can be matched to all child …","The name of the <code>ArgGroup</code> the argument belongs to.","Adds an <code>ArgGroup</code> to the application.","The names of <code>ArgGroup</code>’s the argument belongs to.","Adds multiple <code>ArgGroup</code>s to the <code>Command</code> at once.","Returns <code>true</code> if this <code>Command</code> has subcommands.","","","","","","Sets the description of the argument for short help (<code>-h</code>).","Sets the help description of the value.","Panic if help descriptions are omitted.","Override the current help section.","Sets the help template to be used, overriding the default …","Do not display the argument in help message.","Specifies that this <code>subcommand</code> should be hidden from help …","Hides this value from help and shell completions.","Do not display the default value of the argument in the …","Hides an argument from long help (<code>--help</code>).","Do not display the possible values in the help message.","Tells <code>clap</code> <em>not</em> to print possible values when displaying …","Hides an argument from short help (<code>-h</code>).","Set the identifier used for referencing this argument in …","Sets the group name.","Match values against <code>PossibleValuesParser</code> without matching …","Try not to fail on parse errors, like missing option …","Specifies the index of a positional argument <strong>starting at</strong> 1.","","Allow partial matches of long arguments or their aliases.","Allow partial matches of subcommand names and their aliases…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to the intended resettable type","","","","","","","","","","","","","","","","","","","","","","","","","Report whether <code>Command::allow_external_subcommands</code> is set","Report whether <code>Arg::allow_hyphen_values</code> is set","Report whether <code>Command::allow_missing_positional</code> is set","Report whether <code>Arg::allow_negative_numbers</code> is set","Report whether <code>Command::arg_required_else_help</code> is set","Report whether <code>Command::args_conflicts_with_subcommands</code> is …","Report whether <code>Command::disable_colored_help</code> is set","Report whether <code>Command::disable_help_flag</code> is set","Report whether <code>Command::disable_help_subcommand</code> is set","Report whether <code>Command::disable_version_flag</code> is set","Report whether <code>Command::dont_delimit_trailing_values</code> is set","Reports whether <code>Arg::exclusive</code> is set","Report whether <code>Arg::global</code> is set","Report whether <code>Arg::hide_default_value</code> is set","Report whether <code>Arg::hide_long_help</code> is set","Report whether <code>Arg::hide_possible_values</code> is set","Report whether <code>Arg::hide</code> is set","Report whether <code>Command::hide</code> is set","Report if <code>PossibleValue::hide</code> is set","Report whether <code>Arg::hide_short_help</code> is set","Reports whether <code>Arg::ignore_case</code> is set","Reports whether <code>Arg::last</code> is set","Report whether <code>Command::multicall</code> is set","Return true if the group allows more than one of the …","Report whether <code>Arg::next_line_help</code> is set","Report whether <code>Command::next_line_help</code> is set","Report whether <code>Command::no_binary_name</code> is set","Checks whether this argument is a positional or not.","Report whether <code>Command::propagate_version</code> is set","Report whether <code>Arg::require_equals</code> is set","Reports whether <code>Arg::required</code> is set","Reports whether <code>ArgGroup::required</code> is set","Report whether <code>Command::subcommand_negates_reqs</code> is set","Report whether <code>Command::subcommand_precedence_over_arg</code> is …","Report whether <code>Command::subcommand_required</code> is set","Report whether <code>Arg::trailing_var_arg</code> is set","This arg is the last, or final, positional argument (i.e. …","Sets the long version of the argument without the …","Sets the program’s description for the long help (<code>--help</code>…","Sets the long version of the subcommand flag without the …","Add an alias, which functions as a “hidden” long flag …","Add aliases, which function as “hidden” long flag …","Sets the description of the argument for long help (<code>--help</code>…","Sets the version for the long version (<code>--version</code>) and help …","Adapt a <code>TypedValueParser</code> from one value to another","Adapt a <code>TypedValueParser</code> from one value to another","Tests if the value is valid for this argument value","Limit the line length for wrapping help when using the …","Most number of values the argument accepts","Fewest number of values the argument accepts","Multiple-personality program dispatched on the binary name …","Allows more than one of the <code>Arg</code>s in this group to be used. …","Allows one to mutate an <code>Arg</code> after it’s been added to a …","Allows one to mutate all <code>Arg</code>s after they’ve been added …","Allows one to mutate a <code>Command</code> after it’s been added as …","(Re)Sets the program’s name.","Custom parser for argument values","Create a new <code>Arg</code> with a unique name.","Create a <code>ArgGroup</code> using a unique name.","Creates a new instance of an <code>Command</code>.","Create a <code>PossibleValue</code> with its name.","Create a range","Create an empty buffer","Implementation for <code>ValueParser::string</code>","Implementation for <code>ValueParser::os_string</code>","Implementation for <code>ValueParser::path_buf</code>","Parse an <code>ValueEnum</code>","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Select full range of <code>i64</code>","Select full range of <code>u64</code>","Implementation for <code>ValueParser::bool</code>","Parse false-like string values, everything else is <code>true</code>","Parse bool-like string values, everything else is <code>true</code>","Parse non-empty string values","Change the starting value for assigning future display …","Set the default section heading for future args.","Render the help on the line after the argument.","Places the help string for all arguments and subcommands …","Specifies that the parser should not assume the first …","Specifies the number of arguments parsed per occurrence","<code>OsString</code> parser for argument values","Overrides the <code>clap</code> generated help message (both <code>-h</code> and …","Overrides the <code>clap</code> generated usage string for help and …","Sets an overridable argument.","Sets multiple mutually overridable arguments by name.","Parse the argument value","Parse the argument value","","","","","","Parse the argument value","","","","","","","","","","","","","","","","","","","<code>PathBuf</code> parser for argument values","Reflect on enumerated value properties","Reflect on enumerated value properties","Reflect on enumerated value properties","","","","","","","","Prints the short help message (<code>-h</code>) to <code>io::stdout()</code>.","Prints the long help message (<code>--help</code>) to <code>io::stdout()</code>.","Specifies to use the version of the current command for …","Narrow the supported range","Narrow the supported range","Consume all following arguments.","Render the short help message (<code>-h</code>) to a <code>StyledStr</code>","Render the long help message (<code>--help</code>) to a <code>StyledStr</code>.","Version message rendered as if the user ran <code>--version</code>.","Usage statement","Version message rendered as if the user ran <code>-V</code>.","Requires that options use the <code>--option=val</code> syntax","Specifies that the argument must be present.","Require an argument from the group to be present when …","This argument is required only if the specified <code>arg</code> is …","Specify this argument is required based on multiple …","Specify this argument is required based on multiple …","Set this arg as required as long as the specified argument …","Sets this arg as required unless <em>all</em> of the specified …","Sets this arg as required unless <em>any</em> of the specified …","Sets an argument that is required when this one is present","Specify an argument or group that must be present when …","Specify arguments or groups that must be present when this …","Require another argument if this arg matches the …","Allows multiple conditional requirements.","Set binary name. Uses <code>&amp;mut self</code> instead of <code>self</code>.","Sets the short version of the argument without the …","Add an alias, which functions as a hidden short flag.","Add aliases, which functions as a hidden short flag.","Sets the short version of the subcommand flag without the …","Add an alias, which functions as  “hidden” short flag …","Add aliases, which function as “hidden” short flag …","","<code>String</code> parser for argument values","Adds a subcommand to the list of valid possibilities.","Sets the help heading used for subcommands when printing …","Allows <code>subcommands</code> to override all requirements of the …","Prevent subcommands from being consumed as an arguments …","If no <code>subcommand</code> is present at runtime, error and exit …","Sets the value name used for subcommands when printing …","Adds multiple subcommands to the list of valid …","Returns whether this action accepts values on the …","Report whether the argument takes any values (ie is a flag)","Sets the terminal width at which to wrap help messages.","Get the raw string as an <code>OsString</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a “VarArg” and everything that follows should …","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse <code>env::args_os</code>, returning a <code>clap::Result</code> on failure.","Parse the specified arguments, returning a <code>clap::Result</code> on …","Parse the specified arguments, returning a <code>clap::Result</code> on …","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapt a <code>TypedValueParser</code> from one value to another","Adapt a <code>TypedValueParser</code> from one value to another","Describes the content of <code>AnyValue</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow grouping of multiple values via a delimiter.","Provide the shell a hint about how to complete this …","Placeholder for the argument’s value in the help message …","Placeholders for the argument’s values in the help …","Create the specified <code>Self::Parser</code>","Specify the typed behavior of the argument.","Sentinel to <strong>stop</strong> parsing multiple values of a given …","Sets the version for the short version (<code>-V</code>) and help …","Add an alias, which functions as a visible long flag.","Sets a visible alias to this subcommand.","Add aliases, which function as visible long flags.","Sets multiple visible aliases to this subcommand.","Add an alias, which functions as a “visible” long flag …","Add aliases, which function as <em>visible</em> long flag …","Add an alias, which functions as a visible short flag.","Add aliases, which function as visible short flags.","Add an alias, which functions as  “visible” short flag …","Add aliases, which function as <em>visible</em> short flag …","","","Number of values present","Occurs when the user provides two values which conflict …","A single value","Semantics for a piece of error information","A piece of error information","An opaque message to the user","","Not a true “error” as it means <code>--help</code> or similar was …","Occurs when either an argument or a <code>Subcommand</code> is …","Not a true “error” as it means <code>--version</code> or similar …","Command Line Argument Parser Error","Defines how to format an error for displaying to the user","Command line argument parser kind of error","Number of allowed values","Represents a Format error (which is a part of <code>Display</code>). …","The cause of the error","The cause of the error","Occurs when the user provides an unrecognized <code>Subcommand</code> …","Occurs when the user provides a value containing invalid …","Rejected values","Occurs when an <code>Arg</code> has a set of possible values, and the …","Represents an I/O error. Can occur when writing to <code>stderr</code> …","Report <code>ErrorKind</code>","Minimum number of allowed values","Occurs when the user does not provide one or more required …","Occurs when a subcommand is required (as defined by …","Occurs when the user doesn’t use equals for an option …","<code>ContextKind</code> is self-sufficient, no additional information …","A single value","Existing arguments","Short hand for <code>Result</code> type","Richly formatted error context","A single value","Many values","A single value","many value","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Occurs when the user provides fewer values for an argument …","Occurs when a user provides more values for an argument …","Trailing argument","Occurs when a user provides a flag, option, argument or …","A usage string","Accepted subcommands","Accepted values","Occurs when the user provides a value for an argument with …","Occurs when the user provides a different number of values …","Apply an alternative formatter to the error","End-user description of the error case, where relevant","End-user description of the error case, where relevant","","","","","","","","","","","","","","","","","","","Additional information to further qualify the error","","","","","","","Prints the error and exits.","Returns the exit code that <code>.exit</code> will exit the process …","","","","","","","","","Format the existing message with the Command’s context","Stylize the error for the terminal","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Lookup a piece of context","","","Insert a piece of context","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Type of error for programmatic processing","Create an error with a pre-defined message","Prints formatted and colored error to <code>stdout</code> or <code>stderr</code> …","","Create an unformatted error","Render the error message to a <code>StyledStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the message be written to <code>stdout</code> or not?","Apply <code>Command</code>’s formatting to the error","Container for parse results.","Value was passed in on the command-line","Value came <code>Arg::default_value</code>","Failed to downcast <code>AnyValue</code> to the specified type","Value came [<code>Arg::env</code>][crate::Arg::env]","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","Iterate over indices for where an argument appeared when …","Violation of <code>ArgMatches</code> assumptions","Iterate over raw argument values via <code>ArgMatches::get_raw</code>.","Argument not defined in <code>Command</code>","Origin of the argument’s value","Iterate over multiple values for an argument via …","Iterate over multiple values for an argument via …","Check if any args were present on the command line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if values are present for the argument or group id","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the value of a specific <code>ArgAction::Count</code> flag","Gets the value of a specific <code>ArgAction::SetTrue</code> or …","Iterate over values of a specific option or positional …","Iterate over the values passed to each occurrence of an …","Gets the value of a specific option or positional argument.","Iterate over the original argument values.","Iterate over the original values for each occurrence of an …","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","The first index of that an argument showed up.","All indices an argument appeared at when parsing.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Return values of a specific option or positional argument.","Return values for each occurrence of an option.","Returns the value of a specific option or positional …","Return the name and <code>ArgMatches</code> of the current subcommand.","","","","","","The name and <code>ArgMatches</code> of the current subcommand.","The <code>ArgMatches</code> for the current subcommand.","The name of the current subcommand.","","","","","","","","","","Non-panicking version of <code>ArgMatches::contains_id</code>","","","","","","","","","Non-panicking version of <code>ArgMatches::get_many</code>","Non-panicking version of <code>ArgMatches::get_occurrences</code>","Non-panicking version of <code>ArgMatches::get_one</code>","Non-panicking version of <code>ArgMatches::get_raw</code>","Non-panicking version of <code>ArgMatches::get_raw_occurrences</code>","","","","","","","","","Non-panicking version of <code>ArgMatches::remove_many</code>","Non-panicking version of <code>ArgMatches::remove_occurrences</code>","Non-panicking version of <code>ArgMatches::remove_one</code>","","","","","","","","","Report where argument value came from","Type for value stored in <code>ArgMatches</code>","The target type to downcast to"],"i":[4,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,0,0,0,1,1,104,104,105,105,1,1,4,1,4,0,1,4,1,4,1,106,0,106,1,4,1,1,1,1,1,4,1,4,0,1,1,4,4,1,1,1,1,1,1,4,107,107,107,41,41,4,104,104,105,1,1,4,1,1,1,108,108,108,108,0,1,4,1,4,41,4,1,4,1,4,1,4,108,108,108,108,108,108,1,4,108,108,107,107,107,0,41,4,37,25,0,0,0,0,0,0,0,37,37,37,25,37,35,37,0,34,37,0,37,25,25,25,37,0,34,0,0,0,0,37,109,0,0,0,0,0,16,0,35,25,25,25,0,0,0,0,0,37,37,37,16,69,0,0,0,0,25,3,24,3,3,24,3,19,24,3,19,3,24,3,24,22,27,3,3,27,3,3,3,29,29,29,8,8,8,8,8,3,3,3,3,33,33,25,24,27,34,3,29,29,19,35,16,8,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,3,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,24,29,16,8,22,3,24,27,24,27,3,24,27,3,29,19,35,8,22,22,37,38,39,40,44,48,50,51,52,53,54,24,24,24,24,24,24,24,24,3,29,8,3,3,3,3,3,24,3,3,35,24,27,34,29,29,29,29,29,29,19,35,16,8,8,8,8,8,8,8,22,37,24,27,34,29,19,35,16,8,22,37,3,24,3,3,3,33,25,24,24,27,34,3,3,29,19,35,35,16,8,8,22,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,33,33,33,33,33,33,33,33,33,33,25,24,24,27,27,34,34,3,3,29,29,29,29,29,29,29,29,19,19,35,35,35,35,35,35,35,35,16,16,16,16,8,8,8,8,8,22,22,22,22,22,37,38,39,40,44,45,45,48,48,50,50,51,52,53,54,55,56,37,3,24,3,3,24,3,3,24,3,3,27,3,3,3,3,3,3,24,3,3,3,24,19,24,24,27,24,24,3,24,3,24,3,3,3,3,3,19,19,3,24,3,3,24,24,24,3,3,3,3,3,3,24,24,24,24,24,3,24,3,3,24,3,24,24,3,24,3,3,29,35,16,8,37,24,19,3,24,3,24,3,19,24,24,24,3,24,24,27,24,3,24,3,3,3,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,23,33,25,29,35,16,8,8,8,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,3,24,3,24,3,3,3,3,3,3,3,24,24,24,24,24,24,3,19,24,24,24,3,27,24,3,3,24,3,24,24,27,3,3,3,24,24,24,3,3,3,3,24,3,69,69,19,3,35,35,3,27,3,3,3,3,33,24,27,3,19,35,22,38,39,40,44,45,48,50,51,52,53,54,3,3,24,3,3,24,33,3,3,24,24,69,69,38,39,40,45,55,69,38,39,40,44,45,48,50,51,52,53,54,55,56,24,29,16,8,22,33,33,69,69,44,45,51,52,53,55,56,3,3,3,48,50,24,3,3,3,3,3,24,24,27,24,24,24,24,24,24,24,27,27,24,24,3,24,24,24,3,3,3,35,33,3,3,3,3,3,3,3,25,35,3,29,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,24,3,35,8,22,24,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,3,3,3,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,69,69,33,33,25,24,27,34,3,29,19,35,16,8,22,37,38,39,40,44,45,48,50,51,52,53,54,55,56,24,24,24,24,109,24,24,3,24,3,24,3,3,3,24,24,3,3,22,22,88,62,89,0,0,88,0,62,62,62,0,0,0,88,62,88,88,62,62,88,62,62,0,88,62,62,62,89,89,88,0,0,89,89,89,89,88,88,88,88,88,62,62,88,62,88,88,88,62,62,87,88,62,91,92,87,88,89,62,91,92,87,88,89,62,88,89,62,88,89,62,87,88,89,62,88,89,62,87,87,87,87,88,88,89,89,62,62,87,86,91,92,91,92,87,87,87,88,89,62,87,88,62,87,91,92,87,88,89,62,87,87,87,87,87,87,87,88,89,62,87,88,89,62,91,92,87,88,89,62,91,92,87,88,89,62,91,92,87,88,89,62,87,87,0,102,102,96,102,0,0,0,0,96,0,0,0,11,96,11,97,98,99,100,101,102,96,11,97,98,99,100,101,102,96,11,97,98,99,100,101,102,96,11,97,98,99,100,101,102,102,11,11,98,99,100,101,11,102,11,102,96,96,11,97,98,99,100,101,102,96,11,97,98,99,100,101,102,11,11,11,11,11,11,11,11,11,11,96,11,97,98,99,100,101,102,97,98,99,100,101,97,98,99,100,101,97,98,99,100,101,102,96,11,11,11,11,97,98,99,100,101,11,11,11,96,11,97,98,99,100,101,102,96,11,96,11,97,98,99,100,101,102,11,11,11,11,11,96,11,97,98,99,100,101,102,11,11,11,96,11,97,98,99,100,101,102,11,110,110],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[3,3],[3,3],[3,3],[3,3],[1,2],[[]],[[]],[[]],[[]],0,[1,1],[4,4],[[]],[[]],[[1,1],5],[[],3],0,[[],3],[[],1],[[],4],[[1,2],6],[[1,7],6],[[1,8],6],[[1,1],6],[[1,2],6],[[4,4],6],[[],6],[[],6],0,[[1,9],10],[[1,9],10],[[4,9],10],[[4,9],10],[2,1],[8,1],[[]],[8,1],[2,1],[1,1],[[]],[11,[[13,[12]]]],[11,[[13,[12]]]],[11,[[13,[12]]]],[[2,6],[[13,[7]]]],[[2,6],[[13,[7]]]],[2,[[13,[4]]]],[[],[[14,[1]]]],[[],[[14,[1]]]],[2,6],[[1,15]],[[]],[[]],[[],[[16,[1]]]],[[],[[16,[8]]]],[[],[[16,[7]]]],[[]],[[]],[17],[17],0,[[1,1],[[14,[5]]]],[[],18],[[]],[[]],[[],[[14,[19]]]],[4,[[14,[19]]]],[[],7],[[],7],[[],13],[[],13],[[],13],[[],13],[[],[[13,[12]]]],[[],[[13,[12]]]],[17,[[13,[12]]]],[17,[[13,[12]]]],[17,[[13,[12]]]],[17,[[13,[12]]]],[[],20],[[],20],[17],[17],[11,[[13,[12]]]],[11,[[13,[12]]]],[11,[[13,[12]]]],0,[[],21],[[],[[21,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,[23,[22]]],3],[[24,[23,[25]]],24],[[3,[23,[22]]],3],[[3,[23,[22]]],3],[[24,[23,[8]]],24],[[3,[23,[8]]],3],[[19,[23,[8]]],19],[[24,17],24],[[3,17],3],[[19,17],19],[[3,6],3],[[24,6],24],[[3,6],3],[[24,6],24],[22,26],[[27,[23,[1]]],27],[[3,[28,[24]]],3],[[3,6],3],[[27,17],27],[[3,17],3],[[3,6],3],[[3,6],3],[29,30],[29,31],[29,30],[8,[[21,[32]]]],[8,30],[8,31],[8,2],[8,2],[[3,[23,[8]]],3],[[3,[23,[22]]],3],[[3,[23,[22]]],3],[[3,[23,[7]]],3],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[29,30],[[]],[[]],[[]],[[]],[[]],[8,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3],[33,33],[25,25],[24,24],[27,27],[34,34],[3,3],[29,29],[19,19],[35,35],[[[16,[36]]],[[16,[36]]]],[8,8],[22,22],[37,37],[38,38],[39,39],[40,40],[[[44,[[0,[36,41,36,42,43]]]]],[[44,[[0,[36,41,36,42,43]]]]]],[45,45],[[[48,[[0,[36,[47,[46]],36,42,43]]]]],[[48,[[0,[36,[47,[46]],36,42,43]]]]]],[[[50,[[0,[36,[47,[49]]]]]]],[[50,[[0,[36,[47,[49]]]]]]]],[51,51],[52,52],[53,53],[54,54],[[[55,[36,36]]],[[55,[36,36]]]],[[[56,[36,36]]],[[56,[36,36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,24],5],[[29,29],5],[[[16,[57]],[16,[57]]],5],[[8,8],5],[[22,22],5],[[3,4],3],[[24,[23,[1]]],24],[[27,[23,[1]]],27],[[24,17],24],[[27,17],27],[3],[[],24],[[],27],[[],3],[[],29],[[],19],[[],35],[[],8],[[],22],[[],22],[[],37],[[],38],[[],39],[[],40],[[],[[44,[[0,[41,36,42,43]]]]]],[[],[[48,[[0,[[47,[46]],36,42,43]]]]]],[[],[[50,[[47,[49]]]]]],[[],51],[[],52],[[],53],[[],54],[[24,[23,[29]]],24],[[24,[28,[29]]],24],[[24,17],24],[[24,17],24],[[24,[23,[29]]],24],[[24,[28,[1]],[28,[34]],[23,[29]]],24],[[24,17],24],[[24,17],24],[3,3],[29,30],[8,2],[[3,6],3],[[3,6],3],[[3,6],3],[[3,6],3],[[3,[23,[7]]],3],[[24,[23,[58]]],24],[[3,[23,[58]]],3],[[3,6],3],[35,[[59,[58]]]],[[24,24],6],[[27,27],6],[[34,34],6],[[29,60],6],[[29,2],6],[[29,7],6],[[29,30],6],[[29,2],6],[[29,29],6],[[19,19],6],[[35,35],6],[[[16,[61]],[16,[61]]],6],[[8,30],6],[[8,2],6],[[8,1],6],[[8,7],6],[[8,2],6],[[8,30],6],[[8,8],6],[[22,22],6],[[37,37],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[3,62,26],12],[[24,6],24],[[3,[23,[33]]],3],[[3,[63,[30]]],[[14,[3]]]],[[3,[63,[30]]],[[14,[3]]]],[[33,9],[[13,[64]]]],[[25,9],10],[[24,9],10],[[24,9],[[13,[64]]]],[[27,9],10],[[34,9],10],[[3,9],10],[[3,9],10],[[29,9],10],[[19,9],10],[[35,9],10],[[35,9],10],[[[16,[65]],9],10],[[8,9],10],[[8,9],10],[[22,9],10],[[22,9],10],[[37,9],10],[[38,9],10],[[39,9],10],[[40,9],10],[[[44,[[0,[65,41,36,42,43]]]],9],10],[[45,9],10],[[[48,[[0,[65,[47,[46]],36,42,43]]]],9],10],[[[50,[[0,[65,[47,[49]]]]]],9],10],[[51,9],10],[[52,9],10],[[53,9],10],[[54,9],10],[[[55,[65,65]],9],10],[[[56,[65,65]],9],10],[[[66,[46]]],33],[67,33],[[[68,[[28,[19]]]]],33],[[[0,[69,42,43]]],33],[[[70,[46]]],33],[[[71,[46]]],33],[[]],[[[72,[46]]],33],[[[73,[[28,[19]]]]],33],[[[74,[46]]],33],[[]],[[]],[24,24],[27,27],[[]],[[]],[[[28,[29]]],34],[[]],[3,3],[8,29],[2,29],[30,29],[30,29],[2,29],[29,29],[[]],[8,29],[[[28,[8]]],19],[[]],[[[66,[58]]],35],[[]],[[[72,[58]]],35],[[[74,[58]]],35],[[[71,[58]]],35],[67,35],[58,35],[[[70,[58]]],35],[[]],[[],16],[14,16],[75],[2,8],[1,8],[2,8],[8,8],[[]],[[]],[7,22],[2,22],[2,22],[7,22],[[]],[[]],[[]],[[]],[[]],[[]],[17,45],[[[76,[46]]],[[48,[[0,[[47,[46]],36,42,43]]]]]],[[]],[[[76,[49]]],[[50,[[47,[49]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[13,[37]]]],[3,[[14,[22]]]],[24,25],[3,[[14,[22]]]],[3,[[14,[22]]]],[24,[[14,[[68,[2]]]]]],[3,18],[3,18],[24,[[14,[[68,[77]]]]]],[3,18],[[3,24],[[68,[24]]]],[27,18],[3,18],[3,[[14,[2]]]],[3,[[14,[22]]]],[3,[[14,[22]]]],[3,[[14,[2]]]],[3,4],[24,[[21,[29]]]],[3,[[14,[2]]]],[3,[[14,[33]]]],[3,18],[24,[[14,[22]]]],[19,[[14,[22]]]],[24,[[14,[2]]]],[24,1],[27,1],[24,[[14,[58]]]],[24,[[14,[2]]]],[3,[[14,[22]]]],[24,[[14,[[68,[2]]]]]],[3,[[14,[2]]]],[24,[[14,[22]]]],[3,[[14,[2]]]],[3,11],[[3,17],11],[3,11],[3,2],[19,2],[19,18],[3,[[14,[2]]]],[24,[[14,[35]]]],[3,18],[3,18],[24,[[68,[19]]]],[24,[[14,[77]]]],[24,[[14,[[68,[77]]]]]],[3,[[14,[77]]]],0,[3,[[14,[2]]]],[3,[[14,[2]]]],[3,18],[3,18],[24,[[14,[77]]]],[24,37],[24,[[14,[[21,[8]]]]]],[24,33],[24,[[14,[8]]]],[3,[[14,[2]]]],[24,[[14,[[68,[2]]]]]],[3,18],[3,18],[24,[[14,[[68,[77]]]]]],[3,18],[[24,6],24],[[24,[23,[1]]],24],[[3,[28,[27]]],3],[[24,17],24],[[3,17],3],[3,6],[[29,15]],[[35,15]],[[[16,[78]],15]],[[8,15]],[[37,15]],[[24,[23,[22]]],24],[[19,[23,[22]]],19],[[3,6],3],[[24,[23,[8]]],24],[[3,[23,[22]]],3],[[24,6],24],[[3,6],3],[[19,6],19],[[24,6],24],[[24,6],24],[[24,6],24],[[3,6],3],[[24,6],24],[[24,[28,[1]]],24],[[27,[28,[1]]],27],[[24,6],24],[[3,6],3],[[24,[23,[58]]],24],[[3,1]],[[3,6],3],[[3,6],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],[[16,[33]]]],[25,[[16,[25]]]],[[],[[16,[29]]]],[[],[[16,[35]]]],[16,16],[[],[[16,[1]]]],[[],[[16,[8]]]],[[],[[16,[29]]]],[[],[[16,[7]]]],[[],[[16,[22]]]],[37,[[16,[37]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[[],[[16,[33]]]],[3,6],[24,6],[3,6],[24,6],[3,6],[3,6],[3,6],[3,6],[3,6],[3,6],[3,6],[24,6],[24,6],[24,6],[24,6],[24,6],[24,6],[3,6],[19,6],[24,6],[24,6],[24,6],[3,6],[27,6],[24,6],[3,6],[3,6],[24,6],[3,6],[24,6],[24,6],[27,6],[3,6],[3,6],[3,6],[24,6],[[24,6],24],[[24,[23,[8]]],24],[[3,[23,[22]]],3],[[3,[28,[8]]],3],[[3,[23,[8]]],3],[[3,17],3],[[24,[23,[22]]],24],[[3,[23,[8]]],3],[[[0,[79,36]]],[[55,[[0,[79,36]]]]]],[[[0,[79,36]]],[[55,[[0,[79,36]]]]]],[[19,2,6],6],[[3,58],3],[35,58],[35,58],[[3,6],3],[[27,6],27],[[3,[63,[2]],80],3],[[3,81],3],[[3,[63,[2]],80],3],[[3,[28,[8]]],3],[69,33],[[[28,[1]]],24],[[[28,[1]]],27],[[[28,[8]]],3],[[[28,[8]]],19],[[[28,[35]]],35],[[],22],[[],38],[[],39],[[],40],[[],[[44,[[0,[41,36,42,43]]]]]],[[[28,[45]]],45],[[],[[48,[[0,[[47,[46]],36,42,43]]]]]],[[],[[50,[[47,[49]]]]]],[[],51],[[],52],[[],53],[[],54],[[3,[23,[58]]],3],[[3,[23,[8]]],3],[[24,6],24],[[3,6],3],[[3,6],3],[[24,[23,[35]]],24],[[],33],[[3,[23,[22]]],3],[[3,[23,[22]]],3],[[24,[23,[1]]],24],[[24,17],24],[[3,[14,[24]],60],[[13,[12]]]],[[3,[14,[24]],60],[[13,[12]]]],[[38,3,[14,[24]],60],[[13,[12]]]],[[39,3,[14,[24]],60],[[13,[12]]]],[[40,3,[14,[24]],60],[[13,[12]]]],[[45,3,[14,[24]],60],[[13,[7,12]]]],[[[55,[69,[0,[79,36,42,43]]]],3,[14,[24]],60],[[13,[12]]]],[[3,[14,[24]],30],[[13,[12]]]],[[38,3,[14,[24]],30],[[13,[12]]]],[[39,3,[14,[24]],30],[[13,[12]]]],[[40,3,[14,[24]],30],[[13,[12]]]],[[[44,[[0,[41,36,42,43]]]],3,[14,[24]],30],[[13,[12]]]],[[45,3,[14,[24]],30],[[13,[12]]]],[[[48,[[0,[[47,[46]],36,42,43]]]],3,[14,[24]],30],[[13,[12]]]],[[[50,[[0,[[47,[49]],36,42,43]]]],3,[14,[24]],30],[[13,[12]]]],[[51,3,[14,[24]],30],[[13,[12]]]],[[52,3,[14,[24]],30],[[13,[12]]]],[[53,3,[14,[24]],30],[[13,[12]]]],[[54,3,[14,[24]],30],[[13,[12]]]],[[[55,[69,[0,[79,36,42,43]]]],3,[14,[24]],30],[[13,[12]]]],[[[56,[69,[0,[79,36,42,43]]]],3,[14,[24]],30],[[13,[12]]]],[[24,24],[[14,[5]]]],[[29,29],[[14,[5]]]],[[[16,[82]],[16,[82]]],[[14,[5]]]],[[8,8],[[14,[5]]]],[[22,22],[[14,[5]]]],[[],33],[33,[[14,[[83,[18]]]]]],[[],[[14,[[83,[18]]]]]],[[],[[14,[[83,[18]]]]]],[[[44,[[0,[41,36,42,43]]]]],[[14,[[83,[18]]]]]],[45,[[14,[[83,[18]]]]]],[51,[[14,[[83,[18]]]]]],[52,[[14,[[83,[18]]]]]],[53,[[14,[[83,[18]]]]]],[[[55,[69,[0,[79,36,42,43]]]]],[[14,[[83,[18]]]]]],[[[56,[69,[0,[79,36,42,43]]]]],[[14,[[83,[18]]]]]],[3,84],[3,84],[[3,6],3],[[[48,[[0,[[47,[46]],36,42,43]]]],[76,[46]]],[[48,[[0,[[47,[46]],36,42,43]]]]]],[[[50,[[47,[49]]]],[76,[49]]],[[50,[[47,[49]]]]]],[[24,6],24],[3,22],[3,22],[3,7],[3,22],[3,7],[[24,6],24],[[24,6],24],[[27,6],27],[[24,[28,[1]],[28,[29]]],24],[[24,17],24],[[24,17],24],[[24,[23,[1]]],24],[[24,17],24],[[24,17],24],[[24,[23,[1]]],24],[[27,[23,[1]]],27],[[27,17],27],[[24,[28,[34]],[28,[1]]],24],[[24,17],24],[[3,[28,[7]]]],[[24,[23,[77]]],24],[[24,[23,[77]]],24],[[24,17],24],[[3,[23,[77]]],3],[[3,[23,[77]]],3],[[3,17],3],[35,[[59,[58]]]],[[],33],[[3,[28,[3]]],3],[[3,[23,[8]]],3],[[3,6],3],[[3,6],3],[[3,6],3],[[3,[23,[8]]],3],[[3,17],3],[25,6],[35,6],[[3,58],3],[29,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[24,6],24],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[3,[[85,[11]]]],[[3,17],[[85,[11]]]],[[3,17],[[85,[11]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[0,[79,36,42,43]]],[[56,[[0,[79,36,42,43]]]]]],[[[0,[79,36,42,43]]],[[56,[[0,[79,36,42,43]]]]]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[24,[23,[77]]],24],[[24,[23,[37]]],24],[[24,[23,[8]]],24],[[24,17],24],[[]],[[24,[23,[33]]],24],[[24,[23,[8]]],24],[[3,[23,[8]]],3],[[24,[23,[8]]],24],[[3,[23,[8]]],3],[[24,17],24],[[3,17],3],[[3,[23,[8]]],3],[[3,17],3],[[24,[23,[77]]],24],[[24,17],24],[[3,[23,[77]]],3],[[3,17],3],[[22,77],[[13,[64]]]],[[22,2],[[13,[64]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[87,[86]]],[[87,[86]]]],[88,[[14,[2]]]],[62,[[14,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,88],[89,89],[62,62],[[]],[[]],[[]],[[[87,[86]]],18],[[88,88],6],[[89,89],6],[[62,62],6],[[],6],[[],6],[[],6],[[[87,[86]]],75],[[[87,[86]]],90],[[[87,[86]],9],[[85,[64]]]],[[[87,[86]],9],10],[[88,9],10],[[88,9],10],[[89,9],10],[[89,9],10],[[62,9],10],[[62,9],10],[[[87,[86]],3],[[87,[86]]]],[87,22],[[[87,[91]]],22],[[[87,[92]]],22],[[]],[[]],[64,[[87,[86]]]],[93,[[87,[86]]]],[[]],[[]],[[]],[[]],[[[87,[86]],88],[[14,[89]]]],[[88,15]],[[62,15]],[[[87,[86]],88,89],[[14,[89]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[87,[86]]],62],[62,[[87,[86]]]],[[[87,[86]]],84],[94],[[62,26],[[87,[86]]]],[[[87,[86]]],22],[[[87,[86]]],[[14,[95]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[[87,[86]]],6],[[[87,[86]],3],[[87,[86]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[11,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,96],[11,11],[97,97],[[[98,[36]]],[[98,[36]]]],[[[99,[36]]],[[99,[36]]]],[100,100],[101,101],[102,102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[102,102],5],[[11,2],6],[[],11],[[],98],[[],99],[[],100],[[],101],[[11,11],6],[[102,102],6],[[],6],[[],6],[[96,9],10],[[96,9],10],[[11,9],10],[[97,9],10],[[[98,[65]],9],10],[[[99,[65]],9],10],[[100,9],10],[[101,9],10],[[102,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,2],32],[[11,2],6],[[11,2],[[14,[[99,[[0,[103,36,42,43]]]]]]]],[[11,2],[[14,[[0,[[0,[103,36,42,43]]]]]]]],[[11,2],[[14,[[0,[103,36,42,43]]]]]],[[11,2],[[14,[100]]]],[[11,2],[[14,[0]]]],[11,97],[[11,2],[[14,[58]]]],[[11,2],[[14,[101]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,[[14,[1]]]],[98,14],[99,14],[100,[[14,[30]]]],[101,[[14,[58]]]],[97,[[14,[1]]]],[98,14],[99,14],[100,[[14,[30]]]],[101,[[14,[58]]]],[[102,102],[[14,[5]]]],[94],[[11,2],[[14,[[98,[[0,[103,36,42,43]]]]]]]],[[11,2],[[14,[[0,[[0,[103,36,42,43]]]]]]]],[[11,2],[[14,[[0,[103,36,42,43]]]]]],[11,14],[97],[98],[99],[100],[101],[11,14],[[11,2],[[14,[11]]]],[11,[[14,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[11,2],[[13,[6,96]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[11,2],[[13,[[14,[[99,[[0,[103,36,42,43]]]]]],96]]]],[[11,2],[[13,[[14,[[0,[[0,[103,36,42,43]]]]]],96]]]],[[11,2],[[13,[[14,[[0,[103,36,42,43]]]],96]]]],[[11,2],[[13,[[14,[100]],96]]]],[[11,2],[[13,[[14,[0]],96]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[11,2],[[13,[[14,[[98,[[0,[103,36,42,43]]]]]],96]]]],[[11,2],[[13,[[14,[[0,[[0,[103,36,42,43]]]]]],96]]]],[[11,2],[[13,[[14,[[0,[103,36,42,43]]]],96]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[11,2],[[14,[102]]]],0,0],"c":[],"p":[[3,"Id"],[15,"str"],[3,"Command"],[4,"ColorChoice"],[4,"Ordering"],[15,"bool"],[3,"String"],[3,"Str"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[4,"Option"],[8,"Hasher"],[4,"Resettable"],[8,"IntoIterator"],[8,"Iterator"],[3,"PossibleValue"],[3,"TypeId"],[15,"slice"],[3,"StyledStr"],[8,"IntoResettable"],[3,"Arg"],[4,"ArgAction"],[8,"Display"],[3,"ArgGroup"],[8,"Into"],[3,"OsStr"],[3,"OsStr"],[3,"Path"],[15,"u8"],[3,"ValueParser"],[4,"ArgPredicate"],[3,"ValueRange"],[8,"Clone"],[4,"ValueHint"],[3,"StringValueParser"],[3,"OsStringValueParser"],[3,"PathBufValueParser"],[8,"ValueEnum"],[8,"Send"],[8,"Sync"],[3,"EnumValueParser"],[3,"PossibleValuesParser"],[15,"i64"],[8,"TryFrom"],[3,"RangedI64ValueParser"],[15,"u64"],[3,"RangedU64ValueParser"],[3,"BoolValueParser"],[3,"FalseyValueParser"],[3,"BoolishValueParser"],[3,"NonEmptyStringValueParser"],[3,"MapValueParser"],[3,"TryMapValueParser"],[8,"Ord"],[15,"usize"],[4,"Bound"],[3,"OsString"],[8,"PartialEq"],[4,"ErrorKind"],[8,"AsRef"],[3,"Error"],[8,"Debug"],[3,"RangeInclusive"],[3,"RangeFull"],[3,"Vec"],[8,"TypedValueParser"],[3,"RangeTo"],[3,"RangeFrom"],[3,"RangeToInclusive"],[15,"array"],[3,"Range"],[15,"never"],[8,"RangeBounds"],[15,"char"],[8,"Hash"],[8,"Fn"],[8,"FnOnce"],[8,"FnMut"],[8,"PartialOrd"],[3,"Box"],[6,"Result"],[6,"Result"],[8,"ErrorFormatter"],[3,"Error"],[4,"ContextKind"],[4,"ContextValue"],[15,"i32"],[3,"KindFormatter"],[3,"RichFormatter"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"MatchesError"],[3,"IdsRef"],[3,"Values"],[3,"ValuesRef"],[3,"RawValues"],[3,"Indices"],[4,"ValueSource"],[8,"Any"],[8,"Args"],[8,"Subcommand"],[8,"CommandFactory"],[8,"FromArgMatches"],[8,"Parser"],[8,"ValueParserFactory"],[13,"Downcast"]]},\
"clap_derive":{"doc":"clap_derive","t":"YYYY","n":["Args","Parser","Subcommand","ValueEnum"],"q":[[0,"clap_derive"]],"d":["Generates the <code>Args</code> impl.","Generates the <code>Parser</code> implementation.","Generates the <code>Subcommand</code> impl.","Generates the <code>ValueEnum</code> impl."],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[]},\
"clap_lex":{"doc":"Minimal, flexible command-line parser","t":"DNNIDDEDNLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLKLLLLL","n":["ArgCursor","Current","End","OsStrExt","ParsedArg","RawArgs","SeekFrom","ShortFlags","Start","advance_by","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","cursor","default","display","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","find","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_args","hash","insert","into","into","into","into","into","into_iter","is_empty","is_empty","is_end","is_escape","is_long","is_number","is_number","is_short","is_stdio","new","next","next","next_flag","next_os","next_value_os","partial_cmp","partial_cmp","peek","peek_os","remaining","seek","split","split_once","starts_with","strip_prefix","to_long","to_owned","to_owned","to_owned","to_owned","to_owned","to_short","to_value","to_value_os","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_str","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"clap_lex"]],"d":["Position within <code>RawArgs</code>","Sets the offset to the current position plus the specified …","Sets the offset to the size of this object plus the …","","Command-line Argument","Command-line arguments","Enumeration of possible methods to seek within an I/O …","Walk through short flags within a <code>ParsedArg</code>","Sets the offset to the provided number of bytes.","Move the iterator forward by <code>n</code> short flags","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the given pattern matches a sub-slice of …","Create a cursor for walking the arguments","","Safely print an argument that may contain non-UTF8 content","","","","","","","","","Returns the byte index of the first character of this …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<strong>NOTE:</strong> The argument returned will be the current binary.","","Inject arguments before the <code>RawArgs::next</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Argument is length of 0","No short flags left","Any remaining args?","Does the argument look like an argument escape (<code>--</code>)","Can treat as a long-flag","Does the argument look like a number","Does the short flag look like a number","Can treat as a short-flag","Does the argument look like a stdio argument (<code>-</code>)","Example","Advance the cursor, returning the next <code>ParsedArg</code>","","Advance the iterator, returning the next short flag on …","Advance the cursor, returning a raw argument value.","Advance the iterator, returning everything left as a value","","","Return the next <code>ParsedArg</code>","Return a raw argument value.","Return all remaining raw arguments, advancing the cursor …","Adjust the cursor’s position","An iterator over substrings of this string slice, …","Splits the string on the first occurrence of the specified …","Returns <code>true</code> if the given pattern matches a prefix of this …","Returns a string slice with the prefix removed.","Treat as a long-flag","","","","","","Treat as a short-flag","Treat as a value","Treat as a value","","","","","","","","","","","Converts to a string slice.","","","","",""],"i":[0,7,7,0,0,0,0,0,7,1,4,5,6,1,7,4,5,6,1,7,4,5,6,1,7,4,5,6,1,7,5,6,23,4,4,6,4,5,6,7,4,5,6,7,23,4,5,6,1,7,4,4,5,6,1,7,4,6,4,4,5,6,1,7,1,6,1,4,6,6,6,1,6,6,4,4,1,1,4,1,5,6,4,4,4,4,23,23,23,23,6,4,5,6,1,7,6,6,6,4,5,6,1,7,4,5,6,1,7,23,4,5,6,1,7],"f":[0,0,0,0,0,0,0,0,0,[[1,2],[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[5,5],[6,6],[1,1],[7,7],[[]],[[]],[[]],[[]],[[]],[[5,5],8],[[6,6],8],[9,10],[4,5],[[],4],[6,11],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[],10],[[],10],[[],10],[[],10],[9,[[12,[2]]]],[[4,13],14],[[5,13],14],[[6,13],14],[[1,13],14],[[7,13],[[3,[15]]]],[16,4],[[]],[[]],[[]],[[]],[[]],[[],4],[[6,17]],[[4,5,18]],[[]],[[]],[[]],[[]],[[]],[[]],[6,10],[1,10],[[4,5],10],[6,10],[6,10],[6,10],[1,10],[6,10],[6,10],[18,4],[[4,5],[[12,[6]]]],[1,12],[1,[[12,[[3,[19,20]]]]]],[[4,5],[[12,[20]]]],[1,[[12,[20]]]],[[5,5],[[12,[8]]]],[[6,6],[[12,[8]]]],[[4,5],[[12,[6]]]],[[4,5],[[12,[20]]]],[[4,5],16],[[4,5,7]],0,[9,12],[9,10],[9,[[12,[20]]]],[6,12],[[]],[[]],[[]],[[]],[[]],[6,[[12,[1]]]],[6,[[3,[9,20]]]],[6,20],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],[[3,[9,21]]]],[[],22],[[],22],[[],22],[[],22],[[],22]],"c":[],"p":[[3,"ShortFlags"],[15,"usize"],[4,"Result"],[3,"RawArgs"],[3,"ArgCursor"],[3,"ParsedArg"],[4,"SeekFrom"],[4,"Ordering"],[15,"str"],[15,"bool"],[8,"Display"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"Error"],[8,"Iterator"],[8,"Hasher"],[8,"IntoIterator"],[15,"char"],[3,"OsStr"],[3,"Utf8Error"],[3,"TypeId"],[8,"OsStrExt"]]},\
"colorchoice":{"doc":"Global override of color control","t":"NNNENLLLLLLLLLLLLL","n":["Always","AlwaysAnsi","Auto","ColorChoice","Never","borrow","borrow_mut","clone","default","eq","fmt","from","global","into","try_from","try_into","type_id","write_global"],"q":[[0,"colorchoice"]],"d":["","","","Selection for overriding color output","","","","","","","","Returns the argument unchanged.","Get the current <code>ColorChoice</code> state","Calls <code>U::from(self)</code>.","","","","Override the detected <code>ColorChoice</code>"],"i":[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,[[]],[[]],[1,1],[[],1],[[1,1],2],[[1,3],4],[[]],[[],1],[[]],[[],5],[[],5],[[],6],[1]],"c":[],"p":[[4,"ColorChoice"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"const_str":{"doc":"Compile-time string operations","t":"OOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["compare","concat","concat_bytes","contains","convert_ascii_case","cstr","encode","encode_z","ends_with","eq_ignore_ascii_case","equal","from_utf8","hex","is_ascii","parse","raw_cstr","repeat","replace","sorted","split","squish","starts_with","strip_prefix","strip_suffix","to_byte_array","to_char_array","to_str","unwrap"],"q":[[0,"const_str"]],"d":["Compares two strings lexicographically.","Concatenates values into a string slice.","Concatenates values into a byte slice.","Returns <code>true</code> if the given pattern matches a sub-slice of …","Converts a string slice to a specified case. Non-ascii …","Converts a string slice to <code>&amp;CStr</code>.","Encode a string slice with a specified encoding.","Encode a string slice with a specified encoding and append …","Returns <code>true</code> if the given pattern matches a suffix of this …","Checks that two (string) slices are an ASCII …","Checks that two strings are equal.","Converts a byte string to a string slice","Converts hexadecimal string slices to a byte array.","Checks if all characters in this (string) slice are within …","Parse a value from a string slice.","Converts a string slice to <code>*const c_char</code>.","Creates a new string slice by repeating a string slice n …","Replaces all matches of a pattern with another string …","Sorts string slices and returns a new array.","Returns an array of substrings of a string slice, …","Splits the string by ASCII whitespaces, and then joins the …","Returns <code>true</code> if the given pattern matches a prefix of this …","Returns a string slice with the prefix removed.","Returns a string slice with the suffix removed.","Converts a string slice or a byte string to a byte array.","Converts a string slice into an array of its characters.","Converts a value to a string slice.","Unwraps a container, returns the content."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"equivalent":{"doc":"<code>Equivalent</code> and <code>Comparable</code> are traits for key comparison in …","t":"IIKK","n":["Comparable","Equivalent","compare","equivalent"],"q":[[0,"equivalent"]],"d":["Key ordering trait.","Key equivalence trait.","Compare self to <code>key</code> and return their ordering.","Compare self to <code>key</code> and return <code>true</code> if they are equal."],"i":[0,0,3,4],"f":[0,0,[[],1],[[],2]],"c":[],"p":[[4,"Ordering"],[15,"bool"],[8,"Comparable"],[8,"Equivalent"]]},\
"fastrand":{"doc":"A simple and fast random number generator.","t":"DLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Rng","alphabetic","alphanumeric","bool","borrow","borrow_mut","char","choice","clone","digit","eq","f32","f64","fill","fmt","fork","from","get_seed","i128","i16","i32","i64","i8","into","isize","lowercase","seed","shuffle","try_from","try_into","type_id","u128","u16","u32","u64","u8","uppercase","usize","with_seed"],"q":[[0,"fastrand"]],"d":["A random number generator.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>bool</code>.","","","Generates a random <code>char</code> in the given range.","Choose an item from an iterator at random.","Clones the generator by creating a new generator with the …","Generates a random digit in the given <code>base</code>.","","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Fill a byte slice with random data.","","Clones the generator by deterministically deriving a new …","Returns the argument unchanged.","Gives back <strong>current</strong> seed that is being held by this …","Generates a random <code>i128</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i8</code> in the given range.","Calls <code>U::from(self)</code>.","Generates a random <code>isize</code> in the given range.","Generates a random <code>char</code> in range a-z.","Initializes this generator with the given seed.","Shuffles a slice randomly.","","","","Generates a random <code>u128</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>usize</code> in the given range.","Creates a new random number generator with the initial …"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,2],[1,2],[1,3],[[]],[[]],[[1,[4,[2]]],2],[[1,5],6],[1,1],[[1,7],2],[[1,1],3],[1,8],[1,9],[[1,[11,[10]]]],[[1,12],13],[1,1],[[]],[1,14],[[1,[4,[15]]],15],[[1,[4,[16]]],16],[[1,[4,[17]]],17],[[1,[4,[18]]],18],[[1,[4,[19]]],19],[[]],[[1,[4,[20]]],20],[1,2],[[1,14]],[[1,11]],[[],21],[[],21],[[],22],[[1,[4,[23]]],23],[[1,[4,[24]]],24],[[1,[4,[7]]],7],[[1,[4,[14]]],14],[[1,[4,[10]]],10],[1,2],[[1,[4,[25]]],25],[14,1]],"c":[],"p":[[3,"Rng"],[15,"char"],[15,"bool"],[8,"RangeBounds"],[8,"IntoIterator"],[4,"Option"],[15,"u32"],[15,"f32"],[15,"f64"],[15,"u8"],[15,"slice"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[4,"Result"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"usize"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":"NNIDDELLLLLKLLLAALALLLLMEDEEDDDDDDDDNNNDDDDDEDDNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDEDDDDDNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","from","hash_map","hash_set","into","raw","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","entry","entry","entry_ref","eq","equivalent","extend","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","raw_table","raw_table_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","allocator","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","entry","eq","equivalent","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_value","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","next","next","next","next","next","next","next","next","or_insert","raw_table","raw_table_mut","remove","remove","replace","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Bucket","InsertSlot","RawDrain","RawIntoIter","RawIter","RawIterHash","RawTable","allocation_info","allocator","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket_index","buckets","capacity","clear","clear_no_drop","clone","clone","clone","clone_from","clone_from_with_hasher","clone_into","clone_into","clone_into","copy_from_nonoverlapping","data_end","data_start","default","drain","drain_iter_from","drop","drop","drop","erase","erase_entry","find","find_or_find_insert_slot","from","from","from","from","from","from","from","get","get_many_mut","get_many_unchecked_mut","get_mut","insert","insert_entry","insert_in_slot","insert_no_grow","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_from","is_bucket_full","is_empty","iter","iter","iter","iter_hash","len","new","new_in","next","next","next","next","reflect_insert","reflect_remove","remove","remove_entry","replace_bucket_with","reserve","shrink_to","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_no_grow","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_with_capacity","try_with_capacity_in","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity_in"],"q":[[0,"hashbrown"],[23,"hashbrown::TryReserveError"],[24,"hashbrown::hash_map"],[425,"hashbrown::hash_set"],[640,"hashbrown::raw"]],"d":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","","","","","","Checks if this value is equivalent to the given key.","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Calls <code>U::from(self)</code>.","Experimental and unsafe <code>RawTable</code> API. This module is only …","","","","","The layout of the allocation request that failed.","Dummy default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a consuming iterator, that is, one that moves each …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Returns a reference to the <code>RawTable</code> used underneath <code>HashMap</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","Returns a reference to the underlying allocator.","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Gets the given value’s corresponding entry in the set …","","","","","Drains elements which are true under the given predicate, …","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","Take ownership of the value.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Returns a reference to the <code>RawTable</code> used underneath <code>HashSet</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a value from the set. Returns whether the value was","Takes the value out of the entry, and returns it. Keeps …","Adds a value to the set, replacing the existing value, if …","Replaces the entry, returning the old value. The new value …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …","A reference to a hash table bucket containing a <code>T</code>.","A reference to an empty bucket into which an can be …","Iterator which consumes elements without freeing the table …","Iterator which consumes a table and returns elements.","Iterator which returns a raw pointer to every full bucket …","Iterator over occupied buckets that could match a given …","A raw hash table with an unsafe API.","Return the information about memory allocated by the table.","Returns a reference to the underlying allocator.","Returns a unique mutable reference to the <code>value</code>.","Acquires the underlying raw pointer <code>*mut T</code> to <code>data</code>.","Returns a shared immutable reference to the <code>value</code>.","","","","","","","","","","","","","","","Returns a pointer to an element in the table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns the number of buckets in the table.","Returns the number of elements the map can hold without …","Removes all elements from the table without freeing the …","Marks all table buckets as empty without dropping their …","","","","","Variant of <code>clone_from</code> to use when a hasher is available.","","","","Copies <code>size_of&lt;T&gt;</code> bytes from <code>other</code> to <code>self</code>. The source and …","Returns pointer to one past last element of data table.","Returns pointer to start of data table.","","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","","","","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it in …","Searches for an element in the table.","Searches for an element in the table. If the element is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to an element in the table.","Attempts to get mutable references to <code>N</code> entries in the …","","Gets a mutable reference to an element in the table.","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table in the given slot, …","Inserts a new element into the table, without growing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns an iterator which consumes all elements from the …","Checks whether the bucket at <code>index</code> is full.","Returns <code>true</code> if the table contains no elements.","Returns an iterator over every element in the table. It is …","","","Returns an iterator over occupied buckets that could match …","Returns the number of elements in the table.","Creates a new empty hash table without allocating any …","Creates a new empty hash table without allocating any …","","","","","Refresh the iterator so that it reflects an insertion into …","Refresh the iterator so that it reflects a removal from …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Temporary removes a bucket, applying the given function to …","Ensures that at least <code>additional</code> items can be inserted …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","","","","","","","","","","","","","","Attempts to insert a new element without growing the table …","","","","","","","","Tries to ensure that at least <code>additional</code> items can be …","Attempts to allocate a new hash table with at least enough …","Attempts to allocate a new hash table using the given …","","","","","","","","Allocates a new hash table with at least enough capacity …","Allocates a new hash table using the given allocator, with …"],"i":[1,1,0,0,0,0,1,1,1,1,1,21,1,1,1,0,0,1,0,1,1,1,1,72,0,0,0,0,0,0,0,0,0,0,0,0,9,11,13,0,0,0,0,0,0,0,0,9,11,13,0,0,0,0,8,9,11,13,9,11,13,73,8,15,30,31,32,33,16,17,23,28,34,35,9,36,37,38,11,39,40,13,42,43,44,73,8,15,30,31,32,33,16,17,23,28,34,35,9,36,37,38,11,39,40,13,42,43,44,8,8,8,15,16,17,8,8,15,16,17,8,8,8,8,44,8,8,8,8,8,8,8,8,15,30,31,32,33,16,17,23,34,35,9,36,37,38,11,39,40,13,42,43,44,44,73,8,15,30,31,32,33,16,17,23,28,34,35,9,36,37,38,11,39,40,13,42,43,44,35,38,8,35,38,35,38,8,36,39,42,8,36,8,36,8,8,8,8,8,36,39,42,8,8,8,9,36,37,11,39,40,13,42,43,37,36,8,37,73,8,15,30,31,32,33,16,17,23,28,34,35,9,36,37,38,11,39,40,13,42,43,44,8,8,8,15,30,31,32,33,16,17,23,28,34,36,40,43,36,8,36,39,42,8,8,8,8,36,11,39,40,13,42,43,36,8,8,15,30,31,32,33,16,17,23,34,15,30,31,32,33,16,17,23,28,34,11,13,9,11,13,9,11,13,11,13,8,8,8,8,8,36,39,42,8,36,39,42,39,42,36,39,42,39,42,8,8,8,8,15,30,31,32,33,16,17,23,28,34,8,15,16,17,44,73,8,15,30,31,32,33,16,17,23,28,34,35,9,36,37,38,11,39,40,13,42,43,44,8,73,8,15,30,31,32,33,16,17,23,28,34,35,9,36,37,38,11,39,40,13,42,43,44,8,73,8,15,30,31,32,33,16,17,23,28,34,35,9,36,37,38,11,39,40,13,42,43,44,44,8,8,8,8,8,8,0,0,0,0,0,0,0,0,59,0,0,0,59,0,52,52,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,53,54,55,56,57,52,52,53,54,55,56,57,52,52,52,52,52,52,52,52,52,52,52,53,61,58,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,59,62,63,52,52,52,52,52,59,63,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,63,52,52,52,52,52,52,53,61,58,53,61,58,60,54,55,56,57,59,52,52,52,62,52,62,52,52,52,52,53,61,58,60,54,55,56,57,52,52,52,52,53,54,55,56,57,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,52,52,0,0,0,0,0,0,0,50,50,65,65,65,70,65,50,66,69,68,71,70,65,50,66,69,68,71,50,50,50,50,50,50,65,50,66,50,50,65,50,66,65,50,50,50,50,50,50,69,68,50,50,50,50,70,65,50,66,69,68,71,50,50,50,50,50,50,50,50,70,65,50,66,69,68,71,50,66,69,68,71,50,50,50,50,69,68,50,50,50,50,66,69,68,71,66,66,50,50,50,50,50,66,69,68,65,50,66,70,65,50,66,69,68,71,50,70,65,50,66,69,68,71,50,50,50,70,65,50,66,69,68,71,50,50],"f":[0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[1,3],4],[[]],0,0,[[]],0,[[]],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[[0,[0,7]]]]],[[0,[0,7]]]],[[[9,[[0,[0,7]]]],10],[[9,[[0,[0,7]]]]]],[[[11,[[0,[0,7]]]],10],[[11,[[0,[0,7]]]]]],[[[13,[12,[0,[0,7]]]],10],[[13,[12,[0,[0,7]]]]]],[[[9,[[0,[0,7]]]],10],[[9,[[0,[0,7]]]]]],[[[11,[[0,[0,7]]]],10],[[11,[[0,[0,7]]]]]],[[[13,[12,[0,[0,7]]]],10],[[13,[12,[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[0,[0,7]]]]],14],[[[8,[[0,[0,7]]]]]],[[[8,[7,7,7,[0,[0,7]]]]],[[8,[7,7,7,[0,[0,7]]]]]],[15,15],[16,16],[17,17],[[[8,[7,7,7,[0,[0,7]]]],[8,[7,7,7,[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],2],[[],[[8,[22,[0,[22,0,7]]]]]],[[[8,[[0,[0,7]]]]],[[23,[[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],[[11,[[0,[18,19]],20,[0,[0,7]]]]]],0,[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],[[13,[[0,[18,19]],[0,[19,[21,[[0,[18,19]]]],12]],20,[0,[0,7]]]]]],[[[8,[[0,[18,19]],24,20,[0,[0,7]]]],[8,[[0,[18,19]],24,20,[0,[0,7]]]]],2],[[],2],[[[8,[[0,[18,19,25]],25,20,[0,[0,7]]]],26]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],26]],[[[8,[[0,[18,19,25]],25,20,[0,[0,7]]]],26]],[[[8,[[0,[0,7]]]],27],[[28,[27,[0,[0,7]]]]]],[[[8,[29,29,[0,[0,7]]]],3],4],[[[15,[29,29]],3],4],[[[30,[29,29]],3],4],[[[31,[29,29,[0,[0,7]]]],3],4],[[[32,[29,29,[0,[0,7]]]],3],4],[[[33,[29,[0,[0,7]]]],3],4],[[[16,[29]],3],4],[[[17,[29]],3],4],[[[23,[29,29,[0,[0,7]]]],3],4],[[[34,[29]],3],4],[[[35,[[0,[0,7]]]],3],4],[[[9,[29,29,[0,[0,7]]]],3],4],[[[36,[29,29,[0,[0,7]]]],3],4],[[[37,[[0,[0,7]]]],3],4],[[[38,[[0,[0,7]]]],3],4],[[[11,[29,29,[0,[0,7]]]],3],4],[[[39,[29,29,[0,[0,7]]]],3],4],[[[40,[29,[0,[0,7]]]],3],4],[[[13,[[41,[[0,[12,29]]]],[0,[12,29]],29,[0,[0,7]]]],3],4],[[[42,[[41,[[0,[12,29]]]],[0,[12,29]],29,[0,[0,7]]]],3],4],[[[43,[[41,[[0,[12,29]]]],[0,[12,29]],[0,[0,7]]]],3],4],[[[44,[29,29,[0,[0,7]]]],3],4],[[[44,[29,29,[0,[0,7]]]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[[0,[0,7]]]],45,27],[[9,[[0,[0,7]]]]]],[[[38,[[0,[0,7]]]],45,27],46],[26,[[8,[[0,[18,19]],[0,[20,22]],[0,[22,0,7]]]]]],[[[35,[20,[0,[0,7]]]],[0,[19,21,12]]],[[9,[20,[0,[0,7]]]]]],[[[38,[20,[0,[0,7]]]],[0,[19,21,12]]],46],[[[35,[[0,[0,7]]]],45,[0,[21,12]]],[[9,[[0,[0,7]]]]]],[[[38,[[0,[0,7]]]],45,[0,[21,12]]],46],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],46],[[[36,[[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[42,[12,[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],46],[[[36,[[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],46],[[[36,[[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[47,[[0,[19,[21,[[0,[18,19]]]],12]]]]],[[46,[47]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[47,[[0,[19,[21,[[0,[18,19]]]],12]]]]],[[46,[47]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[47,[[0,[19,[21,[[0,[18,19]]]],12]]]]],[[46,[47]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[47,[[0,[19,[21,[[0,[18,19]]]],12]]]]],[[46,[47]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],46],[[[36,[[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[42,[12,[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],46],[[[9,[19,20,[0,[0,7]]]],19],[[36,[19,20,[0,[0,7]]]]]],[[[36,[[0,[0,7]]]]]],[[[37,[19,20,[0,[0,7]]]],19]],[[[11,[19,20,[0,[0,7]]]]],[[39,[19,20,[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[40,[19,20,[0,[0,7]]]]]],[[[13,[[0,[19,[48,[12]]]],12,20,[0,[0,7]]]]],[[42,[[0,[19,[48,[12]]]],12,20,[0,[0,7]]]]]],[[[42,[12,[0,[0,7]]]]]],[[[43,[[0,[19,[48,[12]]]],12,20,[0,[0,7]]]]]],[[[37,[19,20,[0,[0,7]]]],45,19]],[[[36,[[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]]],[[[37,[[0,[0,7]]]],45,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[0,[0,7]]]]],[[31,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],30],[[[8,[[0,[0,7]]]]],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[[0,[0,7]]]]]],[[[40,[[0,[0,7]]]]]],[[[43,[[48,[12]],12,[0,[0,7]]]]],[[48,[12]]]],[[[36,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[32,[[0,[0,7]]]]]],[[[36,[[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[42,[12,[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[33,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],2],[[[8,[[0,[0,7]]]]],15],[[[8,[[0,[0,7]]]]],30],[[[36,[[0,[0,7]]]]]],[[[11,[[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[40,[[0,[0,7]]]]]],[[[13,[[41,[12]],12,[0,[0,7]]]]],12],[[[42,[12,[0,[0,7]]]]]],[[[43,[[41,[12]],12,[0,[0,7]]]]],12],[[[36,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],16],[[[8,[[0,[0,7]]]]],14],[15,14],[30,14],[[[31,[[0,[0,7]]]]],14],[[[32,[[0,[0,7]]]]],14],[[[33,[[0,[0,7]]]]],14],[16,14],[17,14],[[[23,[[0,[0,7]]]]],14],[34,14],[15,46],[30,46],[[[31,[[0,[0,7]]]]],46],[[[32,[[0,[0,7]]]]],46],[[[33,[[0,[0,7]]]]],46],[16,46],[17,46],[[[23,[[0,[0,7]]]]],46],[[[28,[27,[0,[0,7]]]]],46],[34,46],[[[11,[19,22,20,[0,[0,7]]]]],22],[[[13,[[0,[19,[48,[12]]]],12,22,20,[0,[0,7]]]]],22],[[[9,[19,20,[0,[0,7]]]],19]],[[[11,[19,20,[0,[0,7]]]]]],[[[13,[[0,[19,[48,[12]]]],12,20,[0,[0,7]]]]]],[[[9,[19,20,[0,[0,7]]]],10]],[[[11,[19,20,[0,[0,7]]]],10]],[[[13,[[0,[19,[48,[12]]]],12,20,[0,[0,7]]]],10]],[[[11,[19,20,[0,[0,7]]]],10]],[[[13,[[0,[19,[41,[12]],[48,[12]]]],12,20,[0,[0,7]]]],10]],[[[8,[[0,[0,7]]]]],[[38,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[35,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[50,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[50,[[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],46],[[[36,[[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[42,[12,[0,[0,7]]]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],46],[[[36,[[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[42,[12,[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[42,[[48,[12]],12,[0,[0,7]]]]]],[[[36,[[0,[0,7]]]],10],[[9,[[0,[0,7]]]]]],[[[39,[[0,[0,7]]]],10],[[11,[[0,[0,7]]]]]],[[[42,[12,[0,[0,7]]]],10],[[13,[12,[0,[0,7]]]]]],[[[39,[[0,[0,7]]]]]],[[[42,[[48,[12]],12,[0,[0,7]]]]],[[48,[12]]]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],14]],[[[8,[[0,[0,7]]]],27]],[[[8,[[0,[18,19]],20,[0,[0,7]]]],14]],[[[8,[[0,[18,19]],20,[0,[0,7]]]]]],[15],[30],[[[31,[[0,[0,7]]]]]],[[[32,[[0,[0,7]]]]]],[[[33,[[0,[0,7]]]]]],[16],[17],[[[23,[[0,[0,7]]]]]],[[[28,[27,[0,[0,7]]]]]],[34],[[]],[[]],[[]],[[]],[[],51],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[8,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],[[5,[[44,[[0,[18,19]],20,[0,[0,7]]]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[8,[[0,[18,19]],20,[0,[0,7]]]],14],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[[8,[[0,[0,7]]]]],17],[[[8,[[0,[0,7]]]]],34],[14,8],[[14,[0,[0,7]]],[[8,[[0,[0,7]]]]]],[[],8],[[[0,[0,7]]],[[8,[[0,[0,7]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[52,[[0,[0,7]]]]],[[0,[0,7]]]],[[[52,[[0,[18,19,7]],[0,[20,22]],[0,[0,7]]]],[52,[[0,[18,19,7]],[0,[20,22]],[0,[0,7]]]]],[[52,[[0,[18,19,7]],[0,[20,22]]]]]],[[[52,[[0,[18,19,7]],[0,[20,22]],[0,[0,7]]]],[52,[[0,[18,19,7]],[0,[20,22]],[0,[0,7]]]]],[[52,[[0,[18,19,7]],[0,[20,22]]]]]],[[[52,[[0,[18,19,7]],[0,[20,22]]]],[52,[[0,[18,19,7]],[0,[20,22]]]]],[[52,[[0,[18,19,7]],[0,[20,22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[0,7]]]]],14],[[[52,[[0,[0,7]]]]]],[[[52,[7,7,[0,[0,7]]]]],[[52,[7,7,[0,[0,7]]]]]],[53,53],[[[54,[[0,[0,7]]]]],[[54,[[0,[0,7]]]]]],[[[55,[[0,[0,7]]]]],[[55,[[0,[0,7]]]]]],[[[56,[[0,[0,7]]]]],[[56,[[0,[0,7]]]]]],[[[57,[[0,[0,7]]]]],[[57,[[0,[0,7]]]]]],[[[52,[7,7,[0,[0,7]]]],[52,[7,7,[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],2],[[],[[52,[22,[0,[22,0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],[[55,[[0,[18,19]],20,[0,[0,7]]]]]],[[[52,[[0,[0,7]]]]],[[58,[[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],[[59,[[0,[18,19]],20,[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],2],[[],2],[[[52,[[0,[18,19,25]],20,[0,[0,7]]]],26]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],26]],[[[52,[[0,[0,7]]]],27],[[60,[27,[0,[0,7]]]]]],[[[52,[29,[0,[0,7]]]],3],4],[[[53,[29]],3],4],[[[61,[29,[0,[0,7]]]],3],4],[[[58,[29,[0,[0,7]]]],3],4],[[[54,[[0,[29,18,19]],20,[0,[0,7]]]],3],4],[[[55,[[0,[29,18,19]],20,[0,[0,7]]]],3],4],[[[56,[[0,[29,18,19]],20,[0,[0,7]]]],3],4],[[[57,[[0,[29,18,19]],20,[0,[0,7]]]],3],4],[[[59,[29,[0,[0,7]]]],3],4],[[[62,[29,[0,[0,7]]]],3],4],[[[63,[29,[0,[0,7]]]],3],4],[[]],[[[8,[[0,[0,7]]]]],[[52,[[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[52,[[0,[18,19]],[0,[20,22]],[0,[22,0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],[[46,[[0,[18,19]]]]]],[[[59,[[0,[0,7]]]]]],[[[62,[[0,[0,7]]]]]],[[[63,[[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],64,12]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]],10],[[0,[18,19]]]],[[[52,[[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],2],[[[59,[19,20,[0,[0,7]]]]],[[62,[19,20,[0,[0,7]]]]]],[[[63,[19,20,[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],[[54,[[0,[18,19]],20,[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[0,7]]]]],53],[[[52,[[0,[0,7]]]]],[[61,[[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],2],[[[52,[[0,[0,7]]]]],2],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],2],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],2],[[[52,[[0,[0,7]]]]],53],[[[52,[[0,[0,7]]]]],14],[53,14],[[[61,[[0,[0,7]]]]],14],[[[58,[[0,[0,7]]]]],14],[53,46],[[[61,[[0,[0,7]]]]],46],[[[58,[[0,[0,7]]]]],46],[[[60,[27,[0,[0,7]]]]],46],[[[54,[[0,[18,19]],20,[0,[0,7]]]]],[[46,[[0,[18,19]]]]]],[[[55,[[0,[18,19]],20,[0,[0,7]]]]],[[46,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20,[0,[0,7]]]]],[[46,[[0,[18,19]]]]]],[[[57,[[0,[18,19]],20,[0,[0,7]]]]],[[46,[[0,[18,19]]]]]],[[[59,[19,20,[0,[0,7]]]]]],[[[52,[[0,[0,7]]]]],[[50,[[0,[0,7]]]]]],[[[52,[[0,[0,7]]]]],[[50,[[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],2],[[[62,[[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[18,19]]],[[46,[[0,[18,19]]]]]],[[[62,[[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],14]],[[[52,[[0,[0,7]]]],27]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],14]],[[[52,[[0,[18,19]],20,[0,[0,7]]]]]],[53],[[[61,[[0,[0,7]]]]]],[[[58,[[0,[0,7]]]]]],[[[60,[27,[0,[0,7]]]]]],[[[54,[[0,[18,19]],20,[0,[0,7]]]]]],[[[55,[[0,[18,19]],20,[0,[0,7]]]]]],[[[56,[[0,[18,19]],20,[0,[0,7]]]]]],[[[57,[[0,[18,19]],20,[0,[0,7]]]]]],[[[52,[[0,[18,19,7]],[0,[20,22]]]],[52,[[0,[18,19,7]],[0,[20,22]]]]],[[52,[[0,[18,19,7]],[0,[20,22]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],[[56,[[0,[18,19]],20,[0,[0,7]]]]]],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[0,[19,[21,[[0,[18,19]]]],12]]],[[46,[[0,[18,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[52,[[0,[18,19]],20,[0,[0,7]]]],14],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[52,[[0,[18,19]],20,[0,[0,7]]]],[52,[[0,[18,19]],20,[0,[0,7]]]]],[[57,[[0,[18,19]],20,[0,[0,7]]]]]],[14,[[52,[0]]]],[[14,[0,[0,7]]],[[52,[[0,[0,7]]]]]],[[],[[52,[0]]]],[[[0,[0,7]]],[[52,[[0,[0,7]]]]]],0,0,0,0,0,0,0,[[[50,[[0,[0,7]]]]]],[[[50,[[0,[0,7]]]]],[[0,[0,7]]]],[65],[65],[65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[[0,[0,7]]]],14],65],[[[50,[[0,[0,7]]]],65],14],[[[50,[[0,[0,7]]]]],14],[[[50,[[0,[0,7]]]]],14],[[[50,[[0,[0,7]]]]]],[[[50,[[0,[0,7]]]]]],[65,65],[[[50,[7,[0,[0,7]]]]],[[50,[7,[0,[0,7]]]]]],[66,66],[[[50,[7,[0,[0,7]]]],[50,[7,[0,[0,7]]]]]],[[[50,[7,[0,[0,7]]]],[50,[7,[0,[0,7]]]],49]],[[]],[[]],[[]],[[65,65]],[[[50,[[0,[0,7]]]]],67],[[[50,[[0,[0,7]]]]],67],[[],[[50,[[0,[0,7,22]]]]]],[[[50,[[0,[0,7]]]]],[[68,[[0,[0,7]]]]]],[[[50,[[0,[0,7]]]],66],[[68,[[0,[0,7]]]]]],[[[50,[[0,[0,7]]]]]],[[[69,[[0,[0,7]]]]]],[[[68,[[0,[0,7]]]]]],[[[50,[[0,[0,7]]]],65]],[[[50,[[0,[0,7]]]],45,27],2],[[[50,[[0,[0,7]]]],45,27],[[46,[65]]]],[[[50,[[0,[0,7]]]],45,27,49],[[5,[65,70]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[[0,[0,7]]]],45,27],46],[[[50,[[0,[0,7]]]],[47,[45]],27],[[46,[47]]]],[[[50,[[0,[0,7]]]],[47,[45]],27],[[46,[47]]]],[[[50,[[0,[0,7]]]],45,27],46],[[[50,[[0,[0,7]]]],45,49],65],[[[50,[[0,[0,7]]]],45,49]],[[[50,[[0,[0,7]]]],45,70],65],[[[50,[[0,[0,7]]]],45],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[[0,[0,7]]]]],[[69,[[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[[50,[[0,[0,7]]]],66],[[69,[[0,[0,7]]]]]],[[[50,[[0,[0,7]]]],14],2],[[[50,[[0,[0,7]]]]],2],[[[50,[[0,[0,7]]]]],66],[[[69,[[0,[0,7]]]]],66],[[[68,[[0,[0,7]]]]],66],[[[50,[[0,[0,7]]]],45],71],[[[50,[[0,[0,7]]]]],14],[[],[[50,[0]]]],[[[0,[0,7]]],[[50,[[0,[0,7]]]]]],[66,[[46,[65]]]],[[[69,[[0,[0,7]]]]],46],[[[68,[[0,[0,7]]]]],46],[71,[[46,[65]]]],[[66,65]],[[66,65]],[[[50,[[0,[0,7]]]],65]],[[[50,[[0,[0,7]]]],45,27],46],[[[50,[[0,[0,7]]]],65,10],2],[[[50,[[0,[0,7]]]],14,49]],[[[50,[[0,[0,7]]]],14,49]],[66],[[[69,[[0,[0,7]]]]]],[[[68,[[0,[0,7]]]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[[0,[0,7]]]],45],[[5,[65]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[[0,[0,7]]]],14,49],[[5,[1]]]],[14,[[5,[[50,[0]],1]]]],[[14,[0,[0,7]]],[[5,[[50,[[0,[0,7]]]],1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[14,[[50,[0]]]],[[14,[0,[0,7]]],[[50,[[0,[0,7]]]]]]],"c":[],"p":[[4,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[3,"HashMap"],[4,"RawEntryMut"],[8,"FnOnce"],[4,"Entry"],[8,"Sized"],[4,"EntryRef"],[15,"usize"],[3,"Iter"],[3,"Keys"],[3,"Values"],[8,"Eq"],[8,"Hash"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Default"],[3,"Drain"],[8,"PartialEq"],[8,"Copy"],[8,"IntoIterator"],[8,"FnMut"],[3,"ExtractIf"],[8,"Debug"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Borrow"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedError"],[15,"u64"],[4,"Option"],[15,"array"],[8,"From"],[8,"Fn"],[3,"RawTable"],[3,"String"],[3,"HashSet"],[3,"Iter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Drain"],[4,"Entry"],[3,"ExtractIf"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"ToOwned"],[3,"Bucket"],[3,"RawIter"],[3,"NonNull"],[3,"RawDrain"],[3,"RawIntoIter"],[3,"InsertSlot"],[3,"RawIterHash"],[13,"AllocError"],[4,"DefaultHashBuilder"]]},\
"heck":{"doc":"<strong>heck</strong> is a case conversion library.","t":"DDDDDDDDDDDKIIIIIIIIIIILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLL","n":["AsKebabCase","AsLowerCamelCase","AsPascalCase","AsShoutyKebabCase","AsShoutySnakeCase","AsShoutySnekCase","AsSnakeCase","AsSnekCase","AsTitleCase","AsTrainCase","AsUpperCamelCase","TO_SHOUTY_SNEK_CASE","ToKebabCase","ToLowerCamelCase","ToPascalCase","ToShoutyKebabCase","ToShoutySnakeCase","ToShoutySnekCase","ToSnakeCase","ToSnekCase","ToTitleCase","ToTrainCase","ToUpperCamelCase","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","to_kebab_case","to_lower_camel_case","to_pascal_case","to_shouty_kebab_case","to_shouty_snake_case","to_snake_case","to_snek_case","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_title_case","to_train_case","to_upper_camel_case","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"heck"]],"d":["This wrapper performs a kebab case conversion in …","This wrapper performs a lower camel case conversion in …","This wrapper performs a upper camel case conversion in …","This wrapper performs a kebab case conversion in …","This wrapper performs a shouty snake  case conversion in …","This wrapper performs a shouty snake  case conversion in …","This wrapper performs a snake case conversion in …","This wrapper performs a snake case conversion in …","This wrapper performs a title case conversion in …","This wrapper performs a train case conversion in …","This wrapper performs a upper camel case conversion in …","CONVERT THIS TYPE TO SNEK CASE.","This trait defines a kebab case conversion.","This trait defines a lower camel case conversion.","ToPascalCase is an alias for ToUpperCamelCase. See …","This trait defines a shouty kebab case conversion.","This trait defines a shouty snake case conversion.","Oh heck, ToShoutySnekCase is an alias for …","This trait defines a snake case conversion.","Oh heck, SnekCase is an alias for ToSnakeCase. See …","This trait defines a title case conversion.","This trait defines a train case conversion.","This trait defines an upper camel case conversion.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this type to kebab case.","Convert this type to lower camel case.","Convert this type to upper camel case.","Convert this type to shouty kebab case.","Convert this type to shouty snake case.","Convert this type to snake case.","Convert this type to snek case.","","","","","","","","","Convert this type to title case.","Convert this type to Train-Case.","Convert this type to upper camel case.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,3,6,7,8,9,10,11,12,3,6,7,8,9,10,11,12,3,6,7,8,9,10,11,12,3,6,7,8,9,10,11,12,3,6,7,8,9,10,11,12,17,18,19,20,21,22,23,3,6,7,8,9,10,11,12,24,25,26,3,6,7,8,9,10,11,12,3,6,7,8,9,10,11,12,3,6,7,8,9,10,11,12],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[2,[1]]]],4],5],[[[6,[[2,[1]]]],4],5],[[[7,[[2,[1]]]],4],5],[[[8,[[2,[1]]]],4],5],[[[9,[[2,[1]]]],4],5],[[[10,[[2,[1]]]],4],5],[[[11,[[2,[1]]]],4],5],[[[12,[[2,[1]]]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15]],"c":[],"p":[[15,"str"],[8,"AsRef"],[3,"AsKebabCase"],[3,"Formatter"],[6,"Result"],[3,"AsLowerCamelCase"],[3,"AsShoutyKebabCase"],[3,"AsShoutySnakeCase"],[3,"AsSnakeCase"],[3,"AsTitleCase"],[3,"AsTrainCase"],[3,"AsUpperCamelCase"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"ToShoutySnekCase"],[8,"ToKebabCase"],[8,"ToLowerCamelCase"],[8,"ToPascalCase"],[8,"ToShoutyKebabCase"],[8,"ToShoutySnakeCase"],[8,"ToSnakeCase"],[8,"ToSnekCase"],[8,"ToTitleCase"],[8,"ToTrainCase"],[8,"ToUpperCamelCase"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","t":"ICCDLLLLLKLLLLLLOOLALALLLLLDEDDDDDDQDINDDNDQDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Equivalent","IndexMap","IndexSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","indexmap","indexset","into","map","provide","set","to_owned","to_string","try_from","try_into","type_id","Drain","Entry","IndexMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Key","Keys","MutableKeys","Occupied","OccupiedEntry","Slice","Vacant","VacantEntry","Value","Values","ValuesMut","and_modify","as_mut_slice","as_mut_slice","as_slice","as_slice","as_slice","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","collect","collect","collect","collect","collect","collect","compare","contains_key","count","count","count","count","count","count","count","count","count","default","default","default","default","default","default","default","default","default","default","default","drain","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","first_mut","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_full","get_full_mut","get_full_mut2","get_full_mut2","get_index","get_index","get_index_mut","get_index_mut","get_index_mut2","get_index_mut2","get_index_of","get_key_value","get_mut","get_mut","get_range","get_range","get_range_mut","get_range_mut","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","insert","insert","insert_full","into","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_keys","into_keys","into_mut","into_slice","into_values","into_values","is_empty","is_empty","iter","iter","iter_mut","iter_mut","key","key","key","keys","keys","last","last","last","last","last","last","last","last","last","last","last","last_mut","last_mut","len","len","len","len","len","len","len","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","or_default","or_insert","or_insert_with","or_insert_with_key","partial_cmp","pop","remove","remove","remove_entry","remove_entry","reserve","reserve_exact","retain","retain2","retain2","reverse","shift_remove","shift_remove","shift_remove_entry","shift_remove_entry","shift_remove_full","shift_remove_index","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort_by","sort_by_cached_key","sort_keys","sort_unstable_by","sort_unstable_keys","sorted_by","sorted_unstable_by","split_at","split_at_mut","split_first","split_first_mut","split_last","split_last_mut","split_off","swap_indices","swap_remove","swap_remove","swap_remove_entry","swap_remove_entry","swap_remove_full","swap_remove_index","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values","values_mut","values_mut","with_capacity","with_capacity_and_hasher","with_hasher","Difference","Drain","IndexSet","Intersection","IntoIter","Iter","Slice","SymmetricDifference","Union","as_slice","as_slice","as_slice","as_slice","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","compare","contains","count","count","count","default","default","default","default","difference","drain","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","from","from","from","from_iter","get","get_full","get_index","get_index","get_index_of","get_range","get_range","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","insert","insert_full","intersection","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_empty","is_subset","is_superset","iter","iter","last","last","last","last","last","len","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth_back","nth_back","nth_back","partial_cmp","pop","remove","replace","replace_full","reserve","reserve_exact","retain","reverse","rfold","rfold","shift_remove","shift_remove_full","shift_remove_index","shift_take","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort","sort_by","sort_by_cached_key","sort_unstable","sort_unstable_by","sorted_by","sorted_unstable_by","split_at","split_first","split_last","split_off","sub","swap_indices","swap_remove","swap_remove_full","swap_remove_index","swap_take","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_hasher"],"q":[[0,"indexmap"],[27,"indexmap::map"],[449,"indexmap::set"]],"d":["Key equivalence trait.","","","The error type for <code>try_reserve</code> methods.","","","","","","Compare self to <code>key</code> and return <code>true</code> if they are equal.","","","","","","Returns the argument unchanged.","Create an <code>IndexMap</code> from a list of key-value pairs","Create an <code>IndexSet</code> from a list of values","Calls <code>U::from(self)</code>.","<code>IndexMap</code> is a hash table where the iteration order of the …","","A hash set implemented using <code>IndexMap</code>","","","","","","A draining iterator over the entries of a <code>IndexMap</code>.","Entry for an existing key-value pair or a vacant location …","A hash table where the iteration order of the key-value …","An owning iterator over the entries of a <code>IndexMap</code>.","An owning iterator over the keys of a <code>IndexMap</code>.","An owning iterator over the values of a <code>IndexMap</code>.","An iterator over the entries of a <code>IndexMap</code>.","A mutable iterator over the entries of a <code>IndexMap</code>.","","An iterator over the keys of a <code>IndexMap</code>.","Opt-in mutable access to keys.","Existing slot with equivalent key.","A view into an occupied entry in a <code>IndexMap</code>. It is part of …","A dynamically-sized slice of key-value pairs in an <code>IndexMap</code>…","Vacant slot (no equivalent key in the map).","A view into a vacant entry in a <code>IndexMap</code>. It is part of …","","An iterator over the values of a <code>IndexMap</code>.","A mutable iterator over the values of a <code>IndexMap</code>.","Modifies the entry if it is occupied.","Returns a mutable slice of the remaining entries in the …","Returns a mutable slice of all the key-value pairs in the …","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the key-value pairs in the map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of elements the map can hold without …","Remove all key-value pairs in the map, while preserving …","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.","","","","","","","","","","","","","","","","","","","","Return an empty <code>IndexMap</code>","Clears the <code>IndexMap</code> in the given index range, returning …","Get the given key’s corresponding entry in the map for …","","","","","","","","","Extend the map with all key-value pairs in the iterable.","Extend the map with all key-value pairs in the iterable.","Get the first key-value pair.","Get the first key-value pair","Get the first key-value pair, with mutable access to the …","Get the first key-value pair, with mutable access to the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Create an <code>IndexMap</code> from the sequence of key-value pairs in …","Gets a reference to the entry’s value in the map.","Return a reference to the value stored for <code>key</code>, if it is …","Return item index, key and value","","Return item index, mutable reference to key and value","","Get a key-value pair by index.","Get a key-value pair by index","Get a key-value pair by index, with mutable access to the …","Get a key-value pair by index","Return mutable reference to key and value at an index.","","Return item index, if it exists in the map","Return references to the key-value pair stored for <code>key</code>, if …","Gets a mutable reference to the entry’s value in the map.","","Returns a slice of key-value pairs in the given range of …","Returns a slice of key-value pairs in the given range of …","Returns a mutable slice of key-value pairs in the given …","Returns a mutable slice of key-value pairs in the given …","","Return a reference to the map’s <code>BuildHasher</code>.","Return the index of the key-value pair","Return the index where the key-value pair exists or will …","Return the index where the key-value pair will be inserted.","","","","","","","","","","","Returns a reference to the value corresponding to the …","Returns a reference to the value at the supplied <code>index</code>.","","","","","","","","","","","","","","Returns a mutable reference to the value at the supplied …","","","","","Returns a mutable reference to the value corresponding to …","","","","Sets the value of the entry to <code>value</code>, and returns the entry…","Inserts the entry’s key and the given value into the …","Insert a key-value pair in the map.","Insert a key-value pair in the map, and get their index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the key-value pairs in …","","","","","","","","","","","","","","","Takes ownership of the key, leaving the entry vacant.","Return an owning iterator over the keys of the map slice.","Return an owning iterator over the keys of the map, in …","Converts into a mutable reference to the entry’s value …","Returns a mutable slice of the remaining entries in the …","Return an owning iterator over the values of the map slice.","Return an owning iterator over the values of the map, in …","Returns true if the map slice contains no elements.","Returns true if the map contains no elements.","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Gets a reference to the entry’s key in the map.","Gets a reference to the entry’s key, either within the …","Gets a reference to the key that was used to find the …","Return an iterator over the keys of the map slice.","Return an iterator over the keys of the map, in their order","","","","","","","","","","Get the last key-value pair.","Get the last key-value pair","Get the last key-value pair, with mutable access to the …","Get the last key-value pair, with mutable access to the …","","","","","","","","","","Return the number of key-value pairs in the map slice.","Return the number of key-value pairs in the map.","Moves the position of a key-value pair from one index to …","Create a new map. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts a default-constructed value in the entry if it is …","Inserts the given default value in the entry if it is …","Inserts the result of the <code>call</code> function in the entry if it …","Inserts the result of the <code>call</code> function with a reference …","","Remove the last key-value pair","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Reserve capacity for <code>additional</code> more key-value pairs.","Reserve capacity for <code>additional</code> more key-value pairs, …","Scan through each key-value pair in the map and keep those …","Scan through each key-value pair in the map and keep those …","","Reverses the order of the map’s key-value pairs in place.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","Shrink the capacity of the map with a lower limit.","Shrink the capacity of the map as much as possible.","","","","","","","","","","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs in place using a sort-key …","Sort the map’s key-value pairs by the default ordering …","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs by the default ordering …","Sort the key-value pairs of the map and return a by-value …","Sort the key-value pairs of the map and return a by-value …","Divides one slice into two at an index.","Divides one mutable slice into two at an index.","Returns the first key-value pair and the rest of the slice,","Returns the first key-value pair and the rest of the slice,","Returns the last key-value pair and the rest of the slice, …","Returns the last key-value pair and the rest of the slice, …","Splits the collection into two at the given index.","Swaps the position of two key-value pairs in the map.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","","","","","Shortens the map, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more key-value …","Try to reserve capacity for <code>additional</code> more key-value …","","","","","","","","","","","","","","","Return an iterator over the values of the map slice.","Return an iterator over the values of the map, in their …","Return an iterator over mutable references to the the …","Return an iterator over mutable references to the values …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with <code>hash_builder</code>.","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>IndexSet</code>.","A hash set where the iteration order of the values is …","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>IndexSet</code>.","An iterator over the items of a <code>IndexSet</code>.","A dynamically-sized slice of values in an <code>IndexSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>IndexSet</code>…","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the values in the set.","Returns the set intersection, cloned into a new set.","Returns the set union, cloned into a new set.","Returns the set symmetric-difference, cloned into a new …","","","","","","","","","","","","","","","","","","","Return the number of elements the set can hold without …","Remove all elements in the set, while preserving its …","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.","","","","","","","Return an empty <code>IndexSet</code>","Return an iterator over the values that are in <code>self</code> but …","Clears the <code>IndexSet</code> in the given index range, returning …","","","","","","","","","","","Get the first value.","Get the first value","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","","Return a reference to the value stored in the set, if it …","Return item index and value","Get a value by index.","Get a value by index","Return item index, if it exists in the set","Returns a slice of values in the given range of indices.","Returns a slice of values in the given range of indices.","","Return a reference to the set’s <code>BuildHasher</code>.","","","","","","","","","Returns a reference to the value at the supplied <code>index</code>.","","","","","","","","Insert the value into the set.","Insert the value into the set, and get its index.","Return an iterator over the values that are in both <code>self</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the values in the set.","","","","","","","","","","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","Returns true if the set slice contains no elements.","Returns true if the set contains no elements.","Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>…","Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>…","Return an iterator over the values of the set slice.","Return an iterator over the values of the set, in their …","","","","Get the last value.","Get the last value","","","","Return the number of elements in the set slice.","Return the number of elements in the set.","Moves the position of a value from one index to another by …","Create a new set. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","Remove the last value","Remove the value from the set, and return <code>true</code> if it was …","Adds a value to the set, replacing the existing value, if …","Adds a value to the set, replacing the existing value, if …","Reserve capacity for <code>additional</code> more values.","Reserve capacity for <code>additional</code> more values, without …","Scan through each value in the set and keep those where the","Reverses the order of the set’s values in place.","","","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Shrink the capacity of the set with a lower limit.","Shrink the capacity of the set as much as possible.","","","","","","","","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the set’s values in place using a key extraction …","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the values of the set and return a by-value iterator …","Sort the values of the set and return a by-value iterator …","Divides one slice into two at an index.","Returns the first value and the rest of the slice, or <code>None</code> …","Returns the last value and the rest of the slice, or <code>None</code> …","Splits the collection into two at the given index.","Returns the set difference, cloned into a new set.","Swaps the position of two values in the set.","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Return an iterator over the values that are in <code>self</code> or …","Removes and returns the value in the set, if any, that is …","","","","","","","Shortens the set, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more values.","Try to reserve capacity for <code>additional</code> more values, …","","","","","","","","","","Return an iterator over all values that are in <code>self</code> or …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with <code>hash_builder</code>."],"i":[0,0,0,0,1,1,1,1,1,30,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,62,0,0,9,0,0,9,0,62,0,0,9,11,13,14,15,11,16,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,13,13,14,18,19,13,13,14,18,19,13,12,14,15,11,16,18,24,19,25,26,12,13,14,15,11,16,18,24,19,25,26,14,15,11,18,24,19,25,26,12,12,13,13,13,12,13,12,12,12,13,13,13,13,13,12,13,12,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,39,9,40,14,15,11,16,18,24,19,25,26,13,13,13,39,13,13,13,62,13,12,13,12,13,62,13,13,13,39,13,12,13,12,13,12,13,39,9,40,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,39,40,13,13,39,9,40,14,15,11,16,18,24,19,25,26,13,13,14,15,11,16,18,24,19,25,26,12,12,13,13,13,40,12,13,39,15,12,13,12,13,12,13,12,13,39,9,40,12,13,14,15,11,16,18,24,19,25,26,12,13,12,13,14,15,11,16,18,24,19,25,26,12,13,13,13,14,15,11,16,18,24,19,25,26,14,15,11,16,18,24,19,25,26,14,15,11,16,18,24,19,25,26,14,15,11,16,18,24,19,25,26,9,9,9,9,12,13,39,13,39,13,13,13,13,62,13,13,39,13,39,13,13,13,13,13,14,15,11,16,18,24,19,25,26,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,39,13,39,13,13,13,14,18,19,13,13,39,9,40,14,15,11,16,18,24,19,25,26,13,39,9,40,14,15,11,16,18,24,19,25,26,13,13,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,12,13,12,13,13,13,13,0,0,0,0,0,0,0,0,0,53,55,56,57,57,57,57,53,55,56,58,59,60,61,54,57,53,55,56,58,59,60,61,54,57,57,57,53,58,59,60,61,57,57,53,58,59,60,61,57,54,53,55,56,54,57,53,55,56,53,55,54,57,57,57,54,57,54,54,54,57,57,57,57,57,54,57,53,55,56,58,59,60,61,54,57,60,61,53,55,56,58,59,60,61,57,57,57,57,57,54,57,57,54,57,54,57,54,54,54,54,54,54,54,54,57,57,57,57,57,57,57,57,57,57,57,53,55,56,58,59,60,61,57,57,53,55,56,58,59,60,61,54,57,57,57,54,57,57,57,54,57,53,55,56,54,57,53,55,56,54,57,57,57,53,55,56,58,59,60,61,53,55,56,58,59,60,61,53,55,56,53,55,56,54,57,57,57,57,57,57,57,57,60,61,57,57,57,57,57,57,53,55,56,58,59,60,61,57,57,57,57,57,57,57,54,54,54,57,57,57,57,57,57,57,57,57,53,58,59,60,61,57,57,53,55,56,58,59,60,61,57,53,55,56,58,59,60,61,57,57,57,53,55,56,58,59,60,61,54,57,57,57,57,57],"f":[0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[],2],[[],2],[[1,3],4],[[1,3],4],[[]],0,0,[[]],0,[5],0,[[]],[[],6],[[],7],[[],7],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,10],9],[11,12],[13,12],[14,12],[15,12],[11,12],[16,12],[13,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,17],[13],[14,14],[18,18],[19,19],[[[13,[20,20,20]]],[[13,[20,20,20]]]],[[[13,[20,20,20]],[13,[20,20,20]]]],[[]],[[]],[[]],[[]],[[[12,[21,21]],[12,[21,21]]],22],[14,23],[15,23],[11,23],[16,23],[18,23],[24,23],[19,23],[25,23],[26,23],[[],22],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[14,17],[15,17],[11,17],[16,17],[18,17],[24,17],[19,17],[25,17],[26,17],[[],14],[[],15],[[],11],[[],18],[[],24],[[],19],[[],25],[[],26],[[],12],[[],12],[[],[[13,[32]]]],[[13,[33,[17]]],16],[[[13,[[0,[27,28]],29]],[0,[27,28]]],[[9,[[0,[27,28]]]]]],[[[12,[34,34]],[12,[34,34]]],2],[[[13,[[0,[27,28]],34,29]],[13,[[0,[27,28]],29]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[13,[[0,[27,28,35]],35,29]],36]],[[[13,[[0,[27,28]],29]],36]],[12,37],[13,37],[12,37],[13,37],[[[39,[38,38]],3],4],[[[9,[38,38]],3],4],[[[40,[38]],3],4],[[[14,[38,38]],3],4],[[[15,[38,38]],3],4],[[[11,[38,38]],3],4],[[[16,[38,38]],3],4],[[[18,[38]],3],4],[[[24,[38]],3],4],[[[19,[38]],3],4],[[[25,[38]],3],4],[[[26,[38]],3],4],[[[12,[38,38]],3],4],[[[13,[38,38]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,[[13,[[0,[27,28]],42]]]],[[]],[36,[[13,[[0,[27,28]],[0,[29,32]]]]]],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[0,[27,30,31]]],37],[[[13,[[0,[28,27]],29]],[0,[27,[30,[[0,[28,27]]]],31]]],37],[[12,17],37],[[13,17],37],[[12,17],37],[[13,17],37],[17,37],[[[13,[[0,[28,27]],29]],17],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[17]]]],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[12,[33,[17]]],[[37,[12]]]],[[13,[33,[17]]],[[37,[12]]]],[[12,[33,[17]]],[[37,[12]]]],[[13,[33,[17]]],[[37,[12]]]],[[[12,[27,27]],43]],[13],[39,17],[9,17],[40,17],[[12,[44,[17]]],12],[[12,17]],[[12,[45,[17]]],12],[12,12],[[12,46],12],[[12,[47,[17]]],12],[[12,[48,[17]]],12],[[12,[49,[17]]],12],[[13,[45,[17]]]],[[13,46]],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]]],[[13,17]],[[13,[44,[17]]]],[[13,[49,[17]]]],[[13,[48,[17]]]],[[13,[47,[17]]]],[13],[[12,[48,[17]]],12],[12,12],[[12,17]],[[12,[45,[17]]],12],[[12,[44,[17]]],12],[[12,46],12],[[12,[47,[17]]],12],[[12,[49,[17]]],12],[[13,17]],[[13,46]],[[13,[48,[17]]]],[13],[[13,[45,[17]]]],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]]],[[13,[44,[17]]]],[[13,[47,[17]]]],[[13,[49,[17]]]],[39],[40],[[[13,[[0,[27,28]],29]],[0,[27,28]]],37],[[[13,[[0,[27,28]],29]],[0,[27,28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[50,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[13],[13],[13],[40],[[[50,[12]]],24],[13,24],[39],[15,12],[[[50,[12]]],26],[13,26],[12,2],[13,2],[12,14],[13,14],[12,15],[13,15],[39],[9],[40],[12,18],[13,18],[14,37],[15,37],[11,37],[16,37],[18,37],[24,37],[19,37],[25,37],[26,37],[12,37],[13,37],[12,37],[13,37],[14,17],[15,17],[11,17],[16,17],[18,17],[24,17],[19,17],[25,17],[26,17],[12,17],[13,17],[[13,17,17]],[[],13],[14,37],[15,37],[11,37],[16,37],[18,37],[24,37],[19,37],[25,37],[26,37],[14,37],[15,37],[11,37],[16,37],[18,37],[24,37],[19,37],[25,37],[26,37],[[14,17],37],[[15,17],37],[[11,17],37],[[16,17],37],[[18,17],37],[[24,17],37],[[19,17],37],[[25,17],37],[[26,17],37],[[14,17],37],[[15,17],37],[[11,17],37],[[16,17],37],[[18,17],37],[[24,17],37],[[19,17],37],[[25,17],37],[[26,17],37],[[[9,[32]]],32],[9],[[9,10]],[[9,10]],[[[12,[51,51]],[12,[51,51]]],[[37,[22]]]],[[[13,[[0,[27,28]],29]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],17]],[[[13,[[0,[27,28]],29]],17]],[[[13,[[0,[27,28]],29]],52]],[52],[[[13,[[0,[28,27]],29]],52]],[[[13,[[0,[27,28]],29]]]],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[13,17],37],[[[13,[[0,[27,28]],29]],17]],[[[13,[[0,[27,28]],29]]]],[14],[15],[11],[16],[18],[24],[19],[25],[26],[[[13,[[0,[27,28]],29]],52]],[[[13,[[0,[27,28]],29]],52]],[[[13,[21,[0,[27,28]],29]]]],[[[13,[[0,[27,28]],29]],52]],[[[13,[21,[0,[27,28]],29]]]],[[[13,[[0,[27,28]],29]],52],[[11,[[0,[27,28]]]]]],[[[13,[[0,[27,28]],29]],52],[[11,[[0,[27,28]]]]]],[[12,17]],[[12,17]],[12,37],[12,37],[12,37],[12,37],[[[13,[20]],17],[[13,[20]]]],[[13,17,17]],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[13,17],37],[[]],[[]],[[]],[[]],[[13,17]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[13,[[0,[27,28]],29]],17],[[7,[1]]]],[[[13,[[0,[27,28]],29]],17],[[7,[1]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[12,19],[13,19],[12,25],[13,25],[17,13],[17,13],[[],13],0,0,0,0,0,0,0,0,0,[53,54],[55,54],[56,54],[57,54],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,17],[57],[53,53],[58,58],[59,59],[60,60],[61,61],[[[57,[20,20]]],[[57,[20,20]]]],[[[57,[20,20]],[57,[20,20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[21]],[54,[21]]],22],[53,23],[55,23],[56,23],[[],22],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[53,17],[55,17],[56,17],[[],53],[[],55],[[],54],[[],[[57,[32]]]],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[58,[[0,[27,28]],29]]]],[[57,[33,[17]]],56],[[[54,[34]],[54,[34]]],2],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[57,[[0,[27,28]],29]],36]],[[[57,[[0,[27,28,35]],29]],36]],[54,37],[57,37],[[[53,[38]],3],4],[[[55,[38]],3],4],[[[56,[38]],3],4],[[[58,[[0,[38,28,27]],29]],3],4],[[[59,[[0,[38,28,27]],29]],3],4],[[[60,[[0,[38,28,27]],29,29]],3],4],[[[61,[[0,[38,28,27]],29]],3],4],[[[54,[38]],3],4],[[[57,[38]],3],4],[[[60,[[0,[28,27]],29,29]],52]],[[[61,[[0,[28,27]],29]],52]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[[0,[28,27]]]]],[[57,[[0,[28,27]],42]]]],[36,[[57,[[0,[27,28]],[0,[29,32]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[54,17],37],[[57,17],37],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[17]]]],[[54,[33,[17]]],[[37,[54]]]],[[57,[33,[17]]],[[37,[54]]]],[[[54,[27]],43]],[57],[54],[[54,46]],[[54,[48,[17]]]],[[54,[49,[17]]]],[[54,[45,[17]]]],[[54,[47,[17]]]],[[54,[44,[17]]]],[[54,17]],[[57,17]],[[57,[48,[17]]]],[57],[[57,[44,[17]]]],[[57,[49,[17]]]],[[57,[45,[17]]]],[[57,[47,[17]]]],[[57,46]],[[[57,[[0,[27,28]],29]],[0,[27,28]]],2],[[[57,[[0,[27,28]],29]],[0,[27,28]]]],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[59,[[0,[27,28]],29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,[[50,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54],[57],[57],[[[57,[[0,[28,27]],29]],[57,[[0,[28,27]],29]]],2],[54,2],[57,2],[[[57,[[0,[28,27]],29]],[57,[[0,[28,27]],29]]],2],[[[57,[[0,[28,27]],29]],[57,[[0,[28,27]],29]]],2],[54,53],[57,53],[53,37],[55,37],[56,37],[54,37],[57,37],[53,17],[55,17],[56,17],[54,17],[57,17],[[57,17,17]],[[],57],[53,37],[55,37],[56,37],[[[58,[[0,[28,27]],29]]],37],[[[59,[[0,[28,27]],29]]],37],[[[60,[[0,[28,27]],29,29]]],37],[[[61,[[0,[28,27]],29]]],37],[53,37],[55,37],[56,37],[[[58,[[0,[28,27]],29]]],37],[[[59,[[0,[28,27]],29]]],37],[[[60,[[0,[28,27]],29,29]]],37],[[[61,[[0,[28,27]],29]]],37],[[53,17],37],[[55,17],37],[[56,17],37],[[53,17],37],[[55,17],37],[[56,17],37],[[[54,[51]],[54,[51]]],[[37,[22]]]],[[[57,[[0,[27,28]],29]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[[[57,[[0,[27,28]],29]],[0,[27,28]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,28]]]],[[[57,[[0,[27,28]],29]],17]],[[[57,[[0,[27,28]],29]],17]],[[[57,[[0,[27,28]],29]],52]],[[[57,[[0,[27,28]],29]]]],[[[60,[[0,[28,27]],29,29]],52]],[[[61,[[0,[28,27]],29]],52]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[57,17],37],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],17]],[[[57,[[0,[27,28]],29]]]],[53],[55],[56],[[[58,[[0,[28,27]],29]]]],[[[59,[[0,[28,27]],29]]]],[[[60,[[0,[28,27]],29,29]]]],[[[61,[[0,[28,27]],29]]]],[[[57,[21,[0,[27,28]],29]]]],[[[57,[[0,[27,28]],29]],52]],[[[57,[[0,[27,28]],29]],52]],[[[57,[21,[0,[27,28]],29]]]],[[[57,[[0,[27,28]],29]],52]],[[[57,[[0,[27,28]],29]],52],[[55,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],52],[[55,[[0,[27,28]]]]]],[[54,17]],[54,37],[54,37],[[[57,[20]],17],[[57,[20]]]],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[57,17,17]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[57,17],37],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[60,[[0,[27,28]],29,29]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,17]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[57,[[0,[27,28]],29]],17],[[7,[1]]]],[[[57,[[0,[27,28]],29]],17],[[7,[1]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[61,[[0,[27,28]],29]]]],[17,57],[17,57],[[],57]],"c":[],"p":[[3,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Entry"],[8,"FnOnce"],[3,"IntoIter"],[3,"Slice"],[3,"IndexMap"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[15,"usize"],[3,"Keys"],[3,"Values"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[8,"FromIterator"],[3,"IntoKeys"],[3,"ValuesMut"],[3,"IntoValues"],[8,"Hash"],[8,"Eq"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Sized"],[8,"Default"],[8,"RangeBounds"],[8,"PartialEq"],[8,"Copy"],[8,"IntoIterator"],[4,"Option"],[8,"Debug"],[3,"OccupiedEntry"],[3,"VacantEntry"],[15,"array"],[3,"RandomState"],[8,"Hasher"],[3,"Range"],[3,"RangeToInclusive"],[3,"RangeFull"],[3,"RangeInclusive"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Box"],[8,"PartialOrd"],[8,"FnMut"],[3,"Iter"],[3,"Slice"],[3,"IntoIter"],[3,"Drain"],[3,"IndexSet"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[8,"MutableKeys"]]},\
"is_terminal":{"doc":"is-terminal is a simple utility that answers one question:","t":"IFK","n":["IsTerminal","is_terminal","is_terminal"],"q":[[0,"is_terminal"]],"d":["Extension trait to check whether something is a terminal.","Returns <code>true</code> if <code>this</code> is a terminal.","Returns true if this is a terminal."],"i":[0,0,1],"f":[0,[1,2],[[],2]],"c":[],"p":[[8,"IsTerminal"],[15,"bool"]]},\
"itoa":{"doc":"github crates-io docs-rs","t":"DILLLLLLLLLLL","n":["Buffer","Integer","borrow","borrow_mut","clone","default","format","from","into","new","try_from","try_into","type_id"],"q":[[0,"itoa"]],"d":["A correctly sized stack allocation for the formatted …","An integer that can be written into an <code>itoa::Buffer</code>.","","","","","Print an integer into this buffer and return a reference …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","This is a cheap operation; you don’t need to worry about …","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[[]],[[]],[1,1],[[],1],[[1,2],3],[[]],[[]],[[],1],[[],4],[[],4],[[],5]],"c":[],"p":[[3,"Buffer"],[8,"Integer"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"linux_raw_sys":{"doc":"","t":"AAAAAALLGGGGGGGGGGGGGELLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNNNNNSRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGMMMMGGGGGDDGGGGGDGGGGGGGGDGDDGGGGGGDGGGGGDGGGGGGGDMMGMMMMMMMMMGGGGGTDDDDDTDDDDDGGGMMGGGGGMDDGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGGGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLDLMMMMMMMMMMMMLLMMMMMMMMMMMDLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDMMMMMMMMMMDDDMMDMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMEDDDTDDTDDDDDMMMMMMDMDLLLLLLMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDMMMMMMMMDDDDMMMMDMMMMMMMMMMMMMMMMLDMMLMMMMMMMEEMMMMMMMMDMLLLMMMMMDMMLMMMMMMMMDMMDMMMMMMMMLMMMMMMMMMMMMMMMMMMMDDDDMMMMMMMMMMMMMMMMMDMMMMMMMMLLLLLLLLLLMMLMMMMDDMMMDTDGDTDGGTGMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGMMMDDDMMMDDMMMMMMMMMMMMMMMMMMMMMMGDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDTDTDDDDDDDDDDDLMDMMMMMMMMMDDDDMDMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFRF","n":["ctypes","errno","general","ioctl","select_macros","signal_macros","borrow","borrow_mut","c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","fmt","from","into","try_from","try_into","type_id","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","AAFS_MAGIC","ADDRB","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_FS_MAGIC","AFS_SUPER_MAGIC","ANON_INODE_FS_MAGIC","ARCH_SET_FS","ARG_MAX","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_MINSIGSTKSZ","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_RSEQ_ALIGN","AT_RSEQ_FEATURE_SIZE","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AT_VECTOR_SIZE_ARCH","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BDEVFS_MAGIC","BINDERFS_SUPER_MAGIC","BINFMTFS_MAGIC","BLOCK_SIZE","BLOCK_SIZE_BITS","BMAP_IOCTL","BOTHER","BPF_FS_MAGIC","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BTRFS_TEST_MAGIC","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CAP_AUDIT_CONTROL","CAP_AUDIT_READ","CAP_AUDIT_WRITE","CAP_BLOCK_SUSPEND","CAP_BPF","CAP_CHECKPOINT_RESTORE","CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_DAC_READ_SEARCH","CAP_FOWNER","CAP_FSETID","CAP_IPC_LOCK","CAP_IPC_OWNER","CAP_KILL","CAP_LAST_CAP","CAP_LEASE","CAP_LINUX_IMMUTABLE","CAP_MAC_ADMIN","CAP_MAC_OVERRIDE","CAP_MKNOD","CAP_NET_ADMIN","CAP_NET_BIND_SERVICE","CAP_NET_BROADCAST","CAP_NET_RAW","CAP_PERFMON","CAP_SETFCAP","CAP_SETGID","CAP_SETPCAP","CAP_SETUID","CAP_SYSLOG","CAP_SYS_ADMIN","CAP_SYS_BOOT","CAP_SYS_CHROOT","CAP_SYS_MODULE","CAP_SYS_NICE","CAP_SYS_PACCT","CAP_SYS_PTRACE","CAP_SYS_RAWIO","CAP_SYS_RESOURCE","CAP_SYS_TIME","CAP_SYS_TTY_CONFIG","CAP_WAKE_ALARM","CBAUD","CBAUDEX","CEPH_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CIFS_SUPER_MAGIC","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCKS_MASK","CLOCKS_MONO","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_SGI_CYCLE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_ARGS_SIZE_VER0","CLONE_ARGS_SIZE_VER1","CLONE_ARGS_SIZE_VER2","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_CLEAR_SIGHAND","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_INTO_CGROUP","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CMSPAR","CODA_SUPER_MAGIC","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRAMFS_MAGIC_WEND","CRDLY","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIGNAL","CSIZE","CSTOPB","DAXFS_MAGIC","DEBUGFS_MAGIC","DEVMEM_MAGIC","DEVPTS_SUPER_MAGIC","DMA_BUF_MAGIC","DN_ACCESS","DN_ATTRIB","DN_CREATE","DN_DELETE","DN_MODIFY","DN_MULTISHOT","DN_RENAME","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECRYPTFS_SUPER_MAGIC","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFIVARFS_MAGIC","EFS_SUPER_MAGIC","EMT_TAGOVF","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EROFS_SUPER_MAGIC_V1","EXFAT_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_NO_HIDE_STALE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FASYNC","FD_CLOEXEC","FF0","FF1","FFDLY","FILE_DEDUPE_RANGE_DIFFERS","FILE_DEDUPE_RANGE_SAME","FLUSHO","FPE_CONDTRAP","FPE_FLTDIV","FPE_FLTINV","FPE_FLTOVF","FPE_FLTRES","FPE_FLTSUB","FPE_FLTUND","FPE_FLTUNK","FPE_INTDIV","FPE_INTOVF","FSCONFIG_CMD_CREATE","FSCONFIG_CMD_RECONFIGURE","FSCONFIG_SET_BINARY","FSCONFIG_SET_FD","FSCONFIG_SET_FLAG","FSCONFIG_SET_PATH","FSCONFIG_SET_PATH_EMPTY","FSCONFIG_SET_STRING","FSCRYPT_KEY_DESCRIPTOR_SIZE","FSCRYPT_KEY_DESC_PREFIX","FSCRYPT_KEY_DESC_PREFIX_SIZE","FSCRYPT_KEY_IDENTIFIER_SIZE","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS","FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR","FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER","FSCRYPT_KEY_STATUS_ABSENT","FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF","FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED","FSCRYPT_KEY_STATUS_PRESENT","FSCRYPT_MAX_KEY_SIZE","FSCRYPT_MODE_ADIANTUM","FSCRYPT_MODE_AES_128_CBC","FSCRYPT_MODE_AES_128_CTS","FSCRYPT_MODE_AES_256_CTS","FSCRYPT_MODE_AES_256_HCTR2","FSCRYPT_MODE_AES_256_XTS","FSCRYPT_MODE_SM4_CTS","FSCRYPT_MODE_SM4_XTS","FSCRYPT_POLICY_FLAGS_PAD_16","FSCRYPT_POLICY_FLAGS_PAD_32","FSCRYPT_POLICY_FLAGS_PAD_4","FSCRYPT_POLICY_FLAGS_PAD_8","FSCRYPT_POLICY_FLAGS_PAD_MASK","FSCRYPT_POLICY_FLAG_DIRECT_KEY","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_32","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_64","FSCRYPT_POLICY_V1","FSCRYPT_POLICY_V2","FSLABEL_MAX","FSMOUNT_CLOEXEC","FSOPEN_CLOEXEC","FSPICK_CLOEXEC","FSPICK_EMPTY_PATH","FSPICK_NO_AUTOMOUNT","FSPICK_SYMLINK_NOFOLLOW","FS_APPEND_FL","FS_BTREE_FL","FS_CASEFOLD_FL","FS_COMPRBLK_FL","FS_COMPR_FL","FS_DAX_FL","FS_DIRSYNC_FL","FS_DIRTY_FL","FS_EA_INODE_FL","FS_ENCRYPTION_MODE_ADIANTUM","FS_ENCRYPTION_MODE_AES_128_CBC","FS_ENCRYPTION_MODE_AES_128_CTS","FS_ENCRYPTION_MODE_AES_256_CBC","FS_ENCRYPTION_MODE_AES_256_CTS","FS_ENCRYPTION_MODE_AES_256_GCM","FS_ENCRYPTION_MODE_AES_256_XTS","FS_ENCRYPTION_MODE_INVALID","FS_ENCRYPT_FL","FS_EOFBLOCKS_FL","FS_EXTENT_FL","FS_FL_USER_MODIFIABLE","FS_FL_USER_VISIBLE","FS_HUGE_FILE_FL","FS_IMAGIC_FL","FS_IMMUTABLE_FL","FS_INDEX_FL","FS_INLINE_DATA_FL","FS_JOURNAL_DATA_FL","FS_KEY_DESCRIPTOR_SIZE","FS_KEY_DESC_PREFIX","FS_KEY_DESC_PREFIX_SIZE","FS_MAX_KEY_SIZE","FS_NOATIME_FL","FS_NOCOMP_FL","FS_NOCOW_FL","FS_NODUMP_FL","FS_NOTAIL_FL","FS_POLICY_FLAGS_PAD_16","FS_POLICY_FLAGS_PAD_32","FS_POLICY_FLAGS_PAD_4","FS_POLICY_FLAGS_PAD_8","FS_POLICY_FLAGS_PAD_MASK","FS_POLICY_FLAGS_VALID","FS_POLICY_FLAG_DIRECT_KEY","FS_PROJINHERIT_FL","FS_RESERVED_FL","FS_SECRM_FL","FS_SYNC_FL","FS_TOPDIR_FL","FS_UNRM_FL","FS_VERITY_FL","FS_XFLAG_APPEND","FS_XFLAG_COWEXTSIZE","FS_XFLAG_DAX","FS_XFLAG_EXTSIZE","FS_XFLAG_EXTSZINHERIT","FS_XFLAG_FILESTREAM","FS_XFLAG_HASATTR","FS_XFLAG_IMMUTABLE","FS_XFLAG_NOATIME","FS_XFLAG_NODEFRAG","FS_XFLAG_NODUMP","FS_XFLAG_NOSYMLINKS","FS_XFLAG_PREALLOC","FS_XFLAG_PROJINHERIT","FS_XFLAG_REALTIME","FS_XFLAG_RTINHERIT","FS_XFLAG_SYNC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_32","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_CMP_REQUEUE_PI_PRIVATE","FUTEX_CMP_REQUEUE_PRIVATE","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_LOCK_PI2_PRIVATE","FUTEX_LOCK_PI_PRIVATE","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_OWNER_DIED","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_REQUEUE_PRIVATE","FUTEX_TID_MASK","FUTEX_TRYLOCK_PI","FUTEX_TRYLOCK_PI_PRIVATE","FUTEX_UNLOCK_PI","FUTEX_UNLOCK_PI_PRIVATE","FUTEX_WAIT","FUTEX_WAITERS","FUTEX_WAITV_MAX","FUTEX_WAIT_BITSET","FUTEX_WAIT_BITSET_PRIVATE","FUTEX_WAIT_PRIVATE","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAIT_REQUEUE_PI_PRIVATE","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_BITSET_PRIVATE","FUTEX_WAKE_OP","FUTEX_WAKE_OP_PRIVATE","FUTEX_WAKE_PRIVATE","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_EXLCK","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETOWNER_UIDS","F_GETOWN_EX","F_GETPIPE_SZ","F_GETSIG","F_GET_FILE_RW_HINT","F_GET_RW_HINT","F_GET_SEALS","F_LINUX_SPECIFIC_BASE","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_OWNER_PGRP","F_OWNER_PID","F_OWNER_TID","F_RDLCK","F_SEAL_EXEC","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETOWN_EX","F_SETPIPE_SZ","F_SETSIG","F_SET_FILE_RW_HINT","F_SET_RW_HINT","F_SHLCK","F_UNLCK","F_WRLCK","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16KB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","IBSHIFT","ICANON","ICRNL","IEXTEN","IGNBRK","IGNCR","IGNPAR","ILL_BADIADDR","ILL_BADSTK","ILL_COPROC","ILL_ILLADR","ILL_ILLOPC","ILL_ILLOPN","ILL_ILLTRP","ILL_PRVOPC","ILL_PRVREG","IMAXBEL","INLCR","INPCK","INR_OPEN_CUR","INR_OPEN_MAX","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUCLC","IUTF8","IXANY","IXOFF","IXON","JFFS2_SUPER_MAGIC","LINK_MAX","LINUX_VERSION_CODE","LINUX_VERSION_MAJOR","LINUX_VERSION_PATCHLEVEL","LINUX_VERSION_SUBLEVEL","LOCK_EX","LOCK_MAND","LOCK_NB","LOCK_READ","LOCK_RW","LOCK_SH","LOCK_UN","LOCK_WRITE","MADV_COLD","MADV_COLLAPSE","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16KB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAP_UNINITIALIZED","MAX_CANON","MAX_CLOCKS","MAX_INPUT","MCL_CURRENT","MCL_FUTURE","MCL_ONFAULT","MEMBARRIER_CMD_FLAG_CPU","MEMBARRIER_CMD_GET_REGISTRATIONS","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_SHARED","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_EXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MFD_NOEXEC_SEAL","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_LIMIT","MLOCK_ONFAULT","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MOUNT_ATTR_IDMAP","MOUNT_ATTR_NOATIME","MOUNT_ATTR_NODEV","MOUNT_ATTR_NODIRATIME","MOUNT_ATTR_NOEXEC","MOUNT_ATTR_NOSUID","MOUNT_ATTR_NOSYMFOLLOW","MOUNT_ATTR_RDONLY","MOUNT_ATTR_RELATIME","MOUNT_ATTR_SIZE_VER0","MOUNT_ATTR_STRICTATIME","MOUNT_ATTR__ATIME","MOVE_MOUNT_F_AUTOMOUNTS","MOVE_MOUNT_F_EMPTY_PATH","MOVE_MOUNT_F_SYMLINKS","MOVE_MOUNT_SET_GROUP","MOVE_MOUNT_T_AUTOMOUNTS","MOVE_MOUNT_T_EMPTY_PATH","MOVE_MOUNT_T_SYMLINKS","MOVE_MOUNT__MASK","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSDOS_SUPER_MAGIC","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_BORN","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOREMOTELOCK","MS_NOSEC","MS_NOSUID","MS_NOSYMFOLLOW","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SUBMOUNT","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","MS_VERBOSE","MTD_INODE_FS_MAGIC","NAME_MAX","NCC","NCCS","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NGROUPS_MAX","NILFS_SUPER_MAGIC","NL0","NL1","NLDLY","NOFLSH","NR_FILE","NR_OPEN","NSFS_MAGIC","NSIG","NSIGBUS","NSIGCHLD","NSIGEMT","NSIGFPE","NSIGILL","NSIGPOLL","NSIGSEGV","NSIGSYS","NSIGTRAP","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","OVERCOMMIT_ALWAYS","OVERCOMMIT_GUESS","OVERCOMMIT_NEVER","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_SYNC","O_TMPFILE","O_TMPFILE_MASK","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PIPEFS_MAGIC","PIPE_BUF","PKEY_ACCESS_MASK","PKEY_DISABLE_ACCESS","PKEY_DISABLE_WRITE","POLLERR","POLLHUP","POLLIN","POLLMSG","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLREMOVE","POLLWRBAND","POLLWRNORM","POLL_ERR","POLL_HUP","POLL_IN","POLL_MSG","POLL_OUT","POLL_PRI","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_SEM","PROT_WRITE","PSTOREFS_MAGIC","P_ALL","P_PGID","P_PID","P_PIDFD","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RAMFS_MAGIC","RDTGROUP_SUPER_MAGIC","REISER2FS_JR_SUPER_MAGIC_STRING","REISER2FS_SUPER_MAGIC_STRING","REISERFS_SUPER_MAGIC","REISERFS_SUPER_MAGIC_STRING","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","ROBUST_LIST_LIMIT","RTSIG_MAX","RUSAGE_BOTH","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","RWF_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_EXTREME","RWH_WRITE_LIFE_LONG","RWH_WRITE_LIFE_MEDIUM","RWH_WRITE_LIFE_NONE","RWH_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_SHORT","R_OK","SA_EXPOSE_TAGBITS","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_NOMASK","SA_ONESHOT","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_RESTORER","SA_SIGINFO","SA_UNSUPPORTED","SCHED_BATCH","SCHED_DEADLINE","SCHED_FIFO","SCHED_FLAG_ALL","SCHED_FLAG_DL_OVERRUN","SCHED_FLAG_KEEP_ALL","SCHED_FLAG_KEEP_PARAMS","SCHED_FLAG_KEEP_POLICY","SCHED_FLAG_RECLAIM","SCHED_FLAG_RESET_ON_FORK","SCHED_FLAG_UTIL_CLAMP","SCHED_FLAG_UTIL_CLAMP_MAX","SCHED_FLAG_UTIL_CLAMP_MIN","SCHED_IDLE","SCHED_NORMAL","SCHED_RESET_ON_FORK","SCHED_RR","SECRETMEM_MAGIC","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_MAX","SEEK_SET","SEGV_ACCADI","SEGV_ACCERR","SEGV_ADIDERR","SEGV_ADIPERR","SEGV_BNDERR","SEGV_MAPERR","SEGV_MTEAERR","SEGV_MTESERR","SEGV_PKUERR","SELINUX_MAGIC","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_MAX_SIZE","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SI_ASYNCIO","SI_ASYNCNL","SI_DETHREAD","SI_KERNEL","SI_MAX_SIZE","SI_MESGQ","SI_QUEUE","SI_SIGIO","SI_TIMER","SI_TKILL","SI_USER","SMACK_MAGIC","SMB2_SUPER_MAGIC","SMB_SUPER_MAGIC","SOCKFS_MAGIC","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SQUASHFS_MAGIC","SS_AUTODISARM","SS_DISABLE","SS_FLAG_BITS","SS_ONSTACK","STACK_END_MAGIC","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STAT_HAVE_NSEC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYNC_FILE_RANGE_WRITE_AND_WAIT","SYSFS_MAGIC","SYS_SECCOMP","SYS_USER_DISPATCH","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCSADRAIN","TCSAFLUSH","TCSANOW","TFD_CLOEXEC","TFD_CREATE_FLAGS","TFD_NONBLOCK","TFD_SETTIME_FLAGS","TFD_SHARED_FCNTL_FLAGS","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","TIMER_ABSTIME","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_LOOP","TIOCM_OUT1","TIOCM_OUT2","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCSER_TEMT","TMPFS_MAGIC","TOSTOP","TRACEFS_MAGIC","TRAP_BRANCH","TRAP_BRKPT","TRAP_HWBKPT","TRAP_PERF","TRAP_PERF_FLAG_ASYNC","TRAP_TRACE","TRAP_UNK","UDF_SUPER_MAGIC","UFFDIO","UFFDIO_COPY_MODE_DONTWAKE","UFFDIO_COPY_MODE_WP","UFFDIO_REGISTER_MODE_MINOR","UFFDIO_REGISTER_MODE_MISSING","UFFDIO_REGISTER_MODE_WP","UFFDIO_ZEROPAGE_MODE_DONTWAKE","UFFD_API","UFFD_EVENT_FORK","UFFD_EVENT_PAGEFAULT","UFFD_EVENT_REMAP","UFFD_EVENT_REMOVE","UFFD_EVENT_UNMAP","UFFD_FEATURE_EVENT_FORK","UFFD_FEATURE_EVENT_REMAP","UFFD_FEATURE_EVENT_REMOVE","UFFD_FEATURE_EVENT_UNMAP","UFFD_FEATURE_EXACT_ADDRESS","UFFD_FEATURE_MINOR_HUGETLBFS","UFFD_FEATURE_MINOR_SHMEM","UFFD_FEATURE_MISSING_HUGETLBFS","UFFD_FEATURE_MISSING_SHMEM","UFFD_FEATURE_PAGEFAULT_FLAG_WP","UFFD_FEATURE_SIGBUS","UFFD_FEATURE_THREAD_ID","UFFD_FEATURE_WP_HUGETLBFS_SHMEM","UFFD_PAGEFAULT_FLAG_MINOR","UFFD_PAGEFAULT_FLAG_WP","UFFD_PAGEFAULT_FLAG_WRITE","UFFD_USER_MODE_ONLY","UIO_FASTIOV","UIO_MAXIOV","UMOUNT_NOFOLLOW","UMOUNT_UNUSED","USBDEVICE_SUPER_MAGIC","USERFAULTFD_IOC","UTIME_NOW","UTIME_OMIT","V9FS_MAGIC","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VFS_CAP_FLAGS_EFFECTIVE","VFS_CAP_FLAGS_MASK","VFS_CAP_REVISION","VFS_CAP_REVISION_1","VFS_CAP_REVISION_2","VFS_CAP_REVISION_3","VFS_CAP_REVISION_MASK","VFS_CAP_REVISION_SHIFT","VFS_CAP_U32","VFS_CAP_U32_1","VFS_CAP_U32_2","VFS_CAP_U32_3","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WEXITED","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","W_OK","XATTR_APPARMOR_SUFFIX","XATTR_BTRFS_PREFIX","XATTR_CAPS_SUFFIX","XATTR_CREATE","XATTR_EVM_SUFFIX","XATTR_HURD_PREFIX","XATTR_IMA_SUFFIX","XATTR_LIST_MAX","XATTR_MAC_OSX_PREFIX","XATTR_NAME_APPARMOR","XATTR_NAME_CAPS","XATTR_NAME_EVM","XATTR_NAME_IMA","XATTR_NAME_MAX","XATTR_NAME_POSIX_ACL_ACCESS","XATTR_NAME_POSIX_ACL_DEFAULT","XATTR_NAME_SELINUX","XATTR_NAME_SMACK","XATTR_NAME_SMACKEXEC","XATTR_NAME_SMACKIPIN","XATTR_NAME_SMACKIPOUT","XATTR_NAME_SMACKMMAP","XATTR_NAME_SMACKTRANSMUTE","XATTR_OS2_PREFIX","XATTR_POSIX_ACL_ACCESS","XATTR_POSIX_ACL_DEFAULT","XATTR_REPLACE","XATTR_SECURITY_PREFIX","XATTR_SELINUX_SUFFIX","XATTR_SIZE_MAX","XATTR_SMACK_EXEC","XATTR_SMACK_IPIN","XATTR_SMACK_IPOUT","XATTR_SMACK_MMAP","XATTR_SMACK_SUFFIX","XATTR_SMACK_TRANSMUTE","XATTR_SYSTEM_PREFIX","XATTR_TRUSTED_PREFIX","XATTR_USER_PREFIX","XCASE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","ZONEFS_MAGIC","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","_LINUX_CAPABILITY_U32S","_LINUX_CAPABILITY_U32S_1","_LINUX_CAPABILITY_U32S_2","_LINUX_CAPABILITY_U32S_3","_LINUX_CAPABILITY_VERSION","_LINUX_CAPABILITY_VERSION_1","_LINUX_CAPABILITY_VERSION_2","_LINUX_CAPABILITY_VERSION_3","_NSIG","_STK_LIM","_UFFDIO_API","_UFFDIO_CONTINUE","_UFFDIO_COPY","_UFFDIO_REGISTER","_UFFDIO_UNREGISTER","_UFFDIO_WAKE","_UFFDIO_WRITEPROTECT","_UFFDIO_ZEROPAGE","__BindgenBitfieldUnit","__FD_SETSIZE","__FPE_DECDIV","__FPE_DECERR","__FPE_DECOVF","__FPE_INVASC","__FPE_INVDEC","__ILL_BNDMOD","__ILL_BREAK","__IncompleteArrayField","__NR__sysctl","__NR_accept","__NR_accept4","__NR_access","__NR_acct","__NR_add_key","__NR_adjtimex","__NR_afs_syscall","__NR_alarm","__NR_arch_prctl","__NR_bind","__NR_bpf","__NR_brk","__NR_capget","__NR_capset","__NR_chdir","__NR_chmod","__NR_chown","__NR_chroot","__NR_clock_adjtime","__NR_clock_getres","__NR_clock_gettime","__NR_clock_nanosleep","__NR_clock_settime","__NR_clone","__NR_clone3","__NR_close","__NR_close_range","__NR_connect","__NR_copy_file_range","__NR_creat","__NR_create_module","__NR_delete_module","__NR_dup","__NR_dup2","__NR_dup3","__NR_epoll_create","__NR_epoll_create1","__NR_epoll_ctl","__NR_epoll_ctl_old","__NR_epoll_pwait","__NR_epoll_pwait2","__NR_epoll_wait","__NR_epoll_wait_old","__NR_eventfd","__NR_eventfd2","__NR_execve","__NR_execveat","__NR_exit","__NR_exit_group","__NR_faccessat","__NR_faccessat2","__NR_fadvise64","__NR_fallocate","__NR_fanotify_init","__NR_fanotify_mark","__NR_fchdir","__NR_fchmod","__NR_fchmodat","__NR_fchown","__NR_fchownat","__NR_fcntl","__NR_fdatasync","__NR_fgetxattr","__NR_finit_module","__NR_flistxattr","__NR_flock","__NR_fork","__NR_fremovexattr","__NR_fsconfig","__NR_fsetxattr","__NR_fsmount","__NR_fsopen","__NR_fspick","__NR_fstat","__NR_fstatfs","__NR_fsync","__NR_ftruncate","__NR_futex","__NR_futex_waitv","__NR_futimesat","__NR_get_kernel_syms","__NR_get_mempolicy","__NR_get_robust_list","__NR_get_thread_area","__NR_getcpu","__NR_getcwd","__NR_getdents","__NR_getdents64","__NR_getegid","__NR_geteuid","__NR_getgid","__NR_getgroups","__NR_getitimer","__NR_getpeername","__NR_getpgid","__NR_getpgrp","__NR_getpid","__NR_getpmsg","__NR_getppid","__NR_getpriority","__NR_getrandom","__NR_getresgid","__NR_getresuid","__NR_getrlimit","__NR_getrusage","__NR_getsid","__NR_getsockname","__NR_getsockopt","__NR_gettid","__NR_gettimeofday","__NR_getuid","__NR_getxattr","__NR_init_module","__NR_inotify_add_watch","__NR_inotify_init","__NR_inotify_init1","__NR_inotify_rm_watch","__NR_io_cancel","__NR_io_destroy","__NR_io_getevents","__NR_io_pgetevents","__NR_io_setup","__NR_io_submit","__NR_io_uring_enter","__NR_io_uring_register","__NR_io_uring_setup","__NR_ioctl","__NR_ioperm","__NR_iopl","__NR_ioprio_get","__NR_ioprio_set","__NR_kcmp","__NR_kexec_file_load","__NR_kexec_load","__NR_keyctl","__NR_kill","__NR_landlock_add_rule","__NR_landlock_create_ruleset","__NR_landlock_restrict_self","__NR_lchown","__NR_lgetxattr","__NR_link","__NR_linkat","__NR_listen","__NR_listxattr","__NR_llistxattr","__NR_lookup_dcookie","__NR_lremovexattr","__NR_lseek","__NR_lsetxattr","__NR_lstat","__NR_madvise","__NR_mbind","__NR_membarrier","__NR_memfd_create","__NR_memfd_secret","__NR_migrate_pages","__NR_mincore","__NR_mkdir","__NR_mkdirat","__NR_mknod","__NR_mknodat","__NR_mlock","__NR_mlock2","__NR_mlockall","__NR_mmap","__NR_modify_ldt","__NR_mount","__NR_mount_setattr","__NR_move_mount","__NR_move_pages","__NR_mprotect","__NR_mq_getsetattr","__NR_mq_notify","__NR_mq_open","__NR_mq_timedreceive","__NR_mq_timedsend","__NR_mq_unlink","__NR_mremap","__NR_msgctl","__NR_msgget","__NR_msgrcv","__NR_msgsnd","__NR_msync","__NR_munlock","__NR_munlockall","__NR_munmap","__NR_name_to_handle_at","__NR_nanosleep","__NR_newfstatat","__NR_nfsservctl","__NR_open","__NR_open_by_handle_at","__NR_open_tree","__NR_openat","__NR_openat2","__NR_pause","__NR_perf_event_open","__NR_personality","__NR_pidfd_getfd","__NR_pidfd_open","__NR_pidfd_send_signal","__NR_pipe","__NR_pipe2","__NR_pivot_root","__NR_pkey_alloc","__NR_pkey_free","__NR_pkey_mprotect","__NR_poll","__NR_ppoll","__NR_prctl","__NR_pread64","__NR_preadv","__NR_preadv2","__NR_prlimit64","__NR_process_madvise","__NR_process_mrelease","__NR_process_vm_readv","__NR_process_vm_writev","__NR_pselect6","__NR_ptrace","__NR_putpmsg","__NR_pwrite64","__NR_pwritev","__NR_pwritev2","__NR_query_module","__NR_quotactl","__NR_quotactl_fd","__NR_read","__NR_readahead","__NR_readlink","__NR_readlinkat","__NR_readv","__NR_reboot","__NR_recvfrom","__NR_recvmmsg","__NR_recvmsg","__NR_remap_file_pages","__NR_removexattr","__NR_rename","__NR_renameat","__NR_renameat2","__NR_request_key","__NR_restart_syscall","__NR_rmdir","__NR_rseq","__NR_rt_sigaction","__NR_rt_sigpending","__NR_rt_sigprocmask","__NR_rt_sigqueueinfo","__NR_rt_sigreturn","__NR_rt_sigsuspend","__NR_rt_sigtimedwait","__NR_rt_tgsigqueueinfo","__NR_sched_get_priority_max","__NR_sched_get_priority_min","__NR_sched_getaffinity","__NR_sched_getattr","__NR_sched_getparam","__NR_sched_getscheduler","__NR_sched_rr_get_interval","__NR_sched_setaffinity","__NR_sched_setattr","__NR_sched_setparam","__NR_sched_setscheduler","__NR_sched_yield","__NR_seccomp","__NR_security","__NR_select","__NR_semctl","__NR_semget","__NR_semop","__NR_semtimedop","__NR_sendfile","__NR_sendmmsg","__NR_sendmsg","__NR_sendto","__NR_set_mempolicy","__NR_set_mempolicy_home_node","__NR_set_robust_list","__NR_set_thread_area","__NR_set_tid_address","__NR_setdomainname","__NR_setfsgid","__NR_setfsuid","__NR_setgid","__NR_setgroups","__NR_sethostname","__NR_setitimer","__NR_setns","__NR_setpgid","__NR_setpriority","__NR_setregid","__NR_setresgid","__NR_setresuid","__NR_setreuid","__NR_setrlimit","__NR_setsid","__NR_setsockopt","__NR_settimeofday","__NR_setuid","__NR_setxattr","__NR_shmat","__NR_shmctl","__NR_shmdt","__NR_shmget","__NR_shutdown","__NR_sigaltstack","__NR_signalfd","__NR_signalfd4","__NR_socket","__NR_socketpair","__NR_splice","__NR_stat","__NR_statfs","__NR_statx","__NR_swapoff","__NR_swapon","__NR_symlink","__NR_symlinkat","__NR_sync","__NR_sync_file_range","__NR_syncfs","__NR_sysfs","__NR_sysinfo","__NR_syslog","__NR_tee","__NR_tgkill","__NR_time","__NR_timer_create","__NR_timer_delete","__NR_timer_getoverrun","__NR_timer_gettime","__NR_timer_settime","__NR_timerfd_create","__NR_timerfd_gettime","__NR_timerfd_settime","__NR_times","__NR_tkill","__NR_truncate","__NR_tuxcall","__NR_umask","__NR_umount2","__NR_uname","__NR_unlink","__NR_unlinkat","__NR_unshare","__NR_uselib","__NR_userfaultfd","__NR_ustat","__NR_utime","__NR_utimensat","__NR_utimes","__NR_vfork","__NR_vhangup","__NR_vmsplice","__NR_vserver","__NR_wait4","__NR_waitid","__NR_write","__NR_writev","__O_SYNC","__O_TMPFILE","__WALL","__WCLONE","__WNOTHREAD","__X32_SYSCALL_BIT","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_padding_0","__fsword_t","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_itimerspec","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_itimerval","__kernel_old_time_t","__kernel_old_timespec","__kernel_old_timeval","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_rwf_t","__kernel_sighandler_t","__kernel_size_t","__kernel_sock_timeval","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_timespec","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__old_kernel_stat","__out_reserved","__pad0","__poll_t","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__restorefn_t","__s16","__s32","__s64","__s8","__sifields","__sifields__bindgen_ty_1","__sifields__bindgen_ty_2","__sifields__bindgen_ty_3","__sifields__bindgen_ty_4","__sifields__bindgen_ty_5","__sifields__bindgen_ty_5__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3","__sifields__bindgen_ty_6","__sifields__bindgen_ty_7","__sighandler_t","__signalfn_t","__sigrestore_t","__spare0","__spare3","__sum16","__u16","__u32","__u64","__u8","__unused","__user_cap_data_struct","__user_cap_header_struct","__wsum","_addr","_addr_bnd","_addr_lsb","_addr_pkey","_arch","_attribute","_band","_bitfield_1","_bitfield_align_1","_call_addr","_data","_dummy_bnd","_dummy_pkey","_fd","_flags","_function","_kill","_lower","_overrun","_pad","_perf","_pid","_pid","_pid","_pkey","_rt","_si_pad","_sifields","_sigchld","_sigev_thread","_sigev_un","_sigfault","_sigpoll","_sigsys","_sigval","_sigval","_status","_stime","_sys_private","_syscall","_tid","_tid","_timer","_trapno","_type","_uid","_uid","_uid","_upper","_utime","address","api","arg","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attr_clr","attr_set","base_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf_size","bytes_deduped","c_cc","c_cc","c_cc","c_cc","c_cflag","c_cflag","c_cflag","c_cflag","c_iflag","c_iflag","c_iflag","c_iflag","c_ispeed","c_ispeed","c_lflag","c_lflag","c_lflag","c_lflag","c_line","c_line","c_line","c_line","c_oflag","c_oflag","c_oflag","c_oflag","c_ospeed","c_ospeed","cap_user_data_t","cap_user_header_t","cc_t","cgroup","child_tid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","cmp","compat_statfs64","contents","contents_encryption_mode","contents_encryption_mode","cookie","copy","d_ino","d_name","d_off","d_reclen","d_type","data","data","data","default","default","descriptor","dest_count","dest_fd","dest_offset","dest_offset","dst","dummy","effective","end","entropy_count","entry_number","epoll_event","eq","eq","eq","eq","eq","event","events","events","exit_signal","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_flags","f_flags","f_flags","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namelen","f_owner_ex","f_spare","f_spare","f_spare","f_type","f_type","f_type","fd","fds_bits","feat","features","file_clone_range","file_dedupe_range","file_dedupe_range_info","filenames_encryption_mode","filenames_encryption_mode","files_stat_struct","flags","flags","flags","flags","flags","flags","flock","flock64","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsconfig_command","fscrypt_add_key_arg","fscrypt_get_key_status_arg","fscrypt_get_policy_ex_arg","fscrypt_get_policy_ex_arg__bindgen_ty_1","fscrypt_key","fscrypt_key_specifier","fscrypt_key_specifier__bindgen_ty_1","fscrypt_policy_v1","fscrypt_policy_v2","fscrypt_provisioning_key_payload","fscrypt_remove_key_arg","fstrim_range","fsx_cowextsize","fsx_extsize","fsx_nextents","fsx_pad","fsx_projid","fsx_xflags","fsxattr","futex_offset","futex_waitv","get","get_bit","hash","hash","hash","hash","identifier","info","inheritable","inheritable","inheritable","inodes_stat_t","inotify_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioctls","ioctls","iov_base","iov_len","iovec","it_interval","it_interval","it_interval","it_interval","it_value","it_value","it_value","it_value","itimerspec","itimerval","kernel_sigaction","kernel_sigset_t","key_id","key_spec","key_spec","key_spec","ktermios","l_len","l_len","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","len","len","len","len","len","limit","limit_in_pages","linux_dirent64","list","list_op_pending","lm","magic_etc","magic_etc","mapped","mask","master_key_descriptor","master_key_identifier","max_files","membarrier_cmd","membarrier_cmd_flag","minlen","mode","mode","mode","mode","mode","mode","mode","mount_attr","name","new","new","new_bitfield_1","next","nr_files","nr_free_files","nr_inodes","nr_unused","open_how","pagefault","parent_tid","partial_cmp","permitted","permitted","permitted","pid","pid","pidfd","policy","policy_size","pollfd","propagation","ptid","rand_pool_info","range","range","range","range","raw","raw","raw","raw_size","read_exec_only","remap","removal_status_flags","remove","reserved","reserved","reserved1","reserved1","reserved1","reserved2","reserved2","reserved2","reserved3","reserved3","resolve","revents","rlim_cur","rlim_cur","rlim_max","rlim_max","rlimit","rlimit64","robust_list","robust_list_head","rootid","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","sa_flags","sa_flags","sa_handler","sa_handler_kernel","sa_mask","sa_mask","sa_restorer","sa_restorer","seg_32bit","seg_not_present","set","set_bit","set_contents","set_limit_in_pages","set_lm","set_read_exec_only","set_seg_32bit","set_seg_not_present","set_tid","set_tid_size","set_useable","si_code","si_errno","si_signo","sig","sigaction","sigaltstack","sigev_notify","sigev_signo","sigev_value","sigevent","sigevent__bindgen_ty_1","sigevent__bindgen_ty_1__bindgen_ty_1","sigevent_t","siginfo","siginfo__bindgen_ty_1","siginfo__bindgen_ty_1__bindgen_ty_1","siginfo_t","sigset_t","sigval","sigval_t","sival_int","sival_ptr","size","speed_t","src","src_fd","src_length","src_length","src_offset","src_offset","ss_flags","ss_size","ss_sp","st_atime","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_nlink","st_nlink","st_rdev","st_rdev","st_size","st_size","st_uid","st_uid","stack","stack_size","stack_t","start","start","start","stat","statfs","statfs64","status","status","status_flags","statx","statx_timestamp","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","tcflag_t","termio","termios","termios2","timespec","timeval","timezone","tls","to","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_nsec","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tv_usec","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","tz_dsttime","tz_minuteswest","u","uaddr","ufd","uffd_msg","uffd_msg__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_2","uffd_msg__bindgen_ty_1__bindgen_ty_3","uffd_msg__bindgen_ty_1__bindgen_ty_4","uffd_msg__bindgen_ty_1__bindgen_ty_5","uffdio_api","uffdio_continue","uffdio_copy","uffdio_range","uffdio_register","uffdio_writeprotect","uffdio_zeropage","useable","user_count","user_desc","userns_fd","v1","v2","val","val","version","version","version","version","vfs_cap_data","vfs_cap_data__bindgen_ty_1","vfs_ns_cap_data","vfs_ns_cap_data__bindgen_ty_1","wd","winsize","ws_col","ws_row","ws_xpixel","ws_ypixel","zeropage","ACRN_IOCTL_ASSIGN_PCIDEV","ACRN_IOCTL_ATTACH_IOREQ_CLIENT","ACRN_IOCTL_CLEAR_VM_IOREQ","ACRN_IOCTL_CREATE_IOREQ_CLIENT","ACRN_IOCTL_CREATE_VM","ACRN_IOCTL_DEASSIGN_PCIDEV","ACRN_IOCTL_DESTROY_IOREQ_CLIENT","ACRN_IOCTL_DESTROY_VM","ACRN_IOCTL_INJECT_MSI","ACRN_IOCTL_IOEVENTFD","ACRN_IOCTL_IRQFD","ACRN_IOCTL_NOTIFY_REQUEST_FINISH","ACRN_IOCTL_PAUSE_VM","ACRN_IOCTL_PM_GET_CPU_STATE","ACRN_IOCTL_RESET_PTDEV_INTR","ACRN_IOCTL_RESET_VM","ACRN_IOCTL_SET_IRQLINE","ACRN_IOCTL_SET_MEMSEG","ACRN_IOCTL_SET_PTDEV_INTR","ACRN_IOCTL_SET_VCPU_REGS","ACRN_IOCTL_START_VM","ACRN_IOCTL_UNSET_MEMSEG","ACRN_IOCTL_VM_INTR_MONITOR","AGPIOC_ALLOCATE","APM_IOC_STANDBY","APM_IOC_SUSPEND","ASPEED_LPC_CTRL_IOCTL_GET_SIZE","ASPEED_LPC_CTRL_IOCTL_MAP","ASPEED_P2A_CTRL_IOCTL_GET_MEMORY_CONFIG","ASPEED_P2A_CTRL_IOCTL_SET_WINDOW","ATMARPD_CTRL","ATMARP_ENCAP","ATMARP_MKIP","ATMARP_SETENTRY","ATMLEC_CTRL","ATMLEC_DATA","ATMLEC_MCAST","ATMMPC_CTRL","ATMMPC_DATA","ATMSIGD_CTRL","ATMTCP_CREATE","ATMTCP_REMOVE","ATM_ADDADDR","ATM_ADDLECSADDR","ATM_ADDPARTY","ATM_DELADDR","ATM_DELLECSADDR","ATM_DROPPARTY","ATM_GETADDR","ATM_GETCIRANGE","ATM_GETESI","ATM_GETLECSADDR","ATM_GETLINKRATE","ATM_GETLOOP","ATM_GETNAMES","ATM_GETSTAT","ATM_GETSTATZ","ATM_GETTYPE","ATM_NEWBACKENDIF","ATM_QUERYLOOP","ATM_RSTADDR","ATM_SETBACKEND","ATM_SETCIRANGE","ATM_SETESI","ATM_SETESIF","ATM_SETLOOP","ATM_SETSC","AUTOFS_DEV_IOCTL_ASKUMOUNT","AUTOFS_DEV_IOCTL_CATATONIC","AUTOFS_DEV_IOCTL_CLOSEMOUNT","AUTOFS_DEV_IOCTL_EXPIRE","AUTOFS_DEV_IOCTL_FAIL","AUTOFS_DEV_IOCTL_ISMOUNTPOINT","AUTOFS_DEV_IOCTL_OPENMOUNT","AUTOFS_DEV_IOCTL_PROTOSUBVER","AUTOFS_DEV_IOCTL_PROTOVER","AUTOFS_DEV_IOCTL_READY","AUTOFS_DEV_IOCTL_REQUESTER","AUTOFS_DEV_IOCTL_SETPIPEFD","AUTOFS_DEV_IOCTL_TIMEOUT","AUTOFS_DEV_IOCTL_VERSION","AUTOFS_IOC_ASKUMOUNT","AUTOFS_IOC_CATATONIC","AUTOFS_IOC_EXPIRE","AUTOFS_IOC_EXPIRE_MULTI","AUTOFS_IOC_FAIL","AUTOFS_IOC_PROTOSUBVER","AUTOFS_IOC_PROTOVER","AUTOFS_IOC_READY","AUTOFS_IOC_SETTIMEOUT","BLKALIGNOFF","BLKBSZGET","BLKBSZSET","BLKCLOSEZONE","BLKDISCARD","BLKDISCARDZEROES","BLKFINISHZONE","BLKFLSBUF","BLKFRAGET","BLKFRASET","BLKGETDISKSEQ","BLKGETNRZONES","BLKGETSIZE","BLKGETSIZE64","BLKGETZONESZ","BLKIOMIN","BLKIOOPT","BLKOPENZONE","BLKPBSZGET","BLKPG","BLKRAGET","BLKRASET","BLKREPORTZONE","BLKRESETZONE","BLKROGET","BLKROSET","BLKROTATIONAL","BLKRRPART","BLKSECDISCARD","BLKSECTGET","BLKSECTSET","BLKSSZGET","BLKTRACESETUP","BLKTRACESTART","BLKTRACESTOP","BLKTRACETEARDOWN","BLKZEROOUT","BR2684_SETFILT","BTRFS_IOC_ADD_DEV","BTRFS_IOC_BALANCE","BTRFS_IOC_BALANCE_CTL","BTRFS_IOC_BALANCE_PROGRESS","BTRFS_IOC_BALANCE_V2","BTRFS_IOC_CLONE","BTRFS_IOC_CLONE_RANGE","BTRFS_IOC_DEFAULT_SUBVOL","BTRFS_IOC_DEFRAG","BTRFS_IOC_DEFRAG_RANGE","BTRFS_IOC_DEVICES_READY","BTRFS_IOC_DEV_INFO","BTRFS_IOC_DEV_REPLACE","BTRFS_IOC_FILE_EXTENT_SAME","BTRFS_IOC_FORGET_DEV","BTRFS_IOC_FS_INFO","BTRFS_IOC_GET_DEV_STATS","BTRFS_IOC_GET_FEATURES","BTRFS_IOC_GET_SUBVOL_INFO","BTRFS_IOC_GET_SUBVOL_ROOTREF","BTRFS_IOC_GET_SUPPORTED_FEATURES","BTRFS_IOC_INO_LOOKUP","BTRFS_IOC_INO_LOOKUP_USER","BTRFS_IOC_INO_PATHS","BTRFS_IOC_LOGICAL_INO","BTRFS_IOC_LOGICAL_INO_V2","BTRFS_IOC_QGROUP_ASSIGN","BTRFS_IOC_QGROUP_CREATE","BTRFS_IOC_QGROUP_LIMIT","BTRFS_IOC_QUOTA_CTL","BTRFS_IOC_QUOTA_RESCAN","BTRFS_IOC_QUOTA_RESCAN_STATUS","BTRFS_IOC_QUOTA_RESCAN_WAIT","BTRFS_IOC_RESIZE","BTRFS_IOC_RM_DEV","BTRFS_IOC_RM_DEV_V2","BTRFS_IOC_SCAN_DEV","BTRFS_IOC_SCRUB","BTRFS_IOC_SCRUB_CANCEL","BTRFS_IOC_SCRUB_PROGRESS","BTRFS_IOC_SEND","BTRFS_IOC_SET_FEATURES","BTRFS_IOC_SET_RECEIVED_SUBVOL","BTRFS_IOC_SNAP_CREATE","BTRFS_IOC_SNAP_CREATE_V2","BTRFS_IOC_SNAP_DESTROY","BTRFS_IOC_SNAP_DESTROY_V2","BTRFS_IOC_SPACE_INFO","BTRFS_IOC_START_SYNC","BTRFS_IOC_SUBVOL_CREATE","BTRFS_IOC_SUBVOL_CREATE_V2","BTRFS_IOC_SUBVOL_GETFLAGS","BTRFS_IOC_SUBVOL_SETFLAGS","BTRFS_IOC_SYNC","BTRFS_IOC_TRANS_END","BTRFS_IOC_TRANS_START","BTRFS_IOC_TREE_SEARCH","BTRFS_IOC_TREE_SEARCH_V2","BTRFS_IOC_WAIT_SYNC","BT_BMC_IOCTL_SMS_ATN","CAPI_CLR_FLAGS","CAPI_GET_ERRCODE","CAPI_GET_FLAGS","CAPI_GET_MANUFACTURER","CAPI_GET_PROFILE","CAPI_GET_SERIAL","CAPI_GET_VERSION","CAPI_INSTALLED","CAPI_MANUFACTURER_CMD","CAPI_NCCI_GETUNIT","CAPI_NCCI_OPENCOUNT","CAPI_REGISTER","CAPI_SET_FLAGS","CCISS_BIG_PASSTHRU","CCISS_DEREGDISK","CCISS_GETBUSTYPES","CCISS_GETDRIVVER","CCISS_GETFIRMVER","CCISS_GETHEARTBEAT","CCISS_GETINTINFO","CCISS_GETLUNINFO","CCISS_GETNODENAME","CCISS_GETPCIINFO","CCISS_PASSTHRU","CCISS_REGNEWD","CCISS_REGNEWDISK","CCISS_RESCANDISK","CCISS_REVALIDVOLS","CCISS_SETINTINFO","CCISS_SETNODENAME","CEC_ADAP_G_CAPS","CEC_ADAP_G_CONNECTOR_INFO","CEC_ADAP_G_LOG_ADDRS","CEC_ADAP_G_PHYS_ADDR","CEC_ADAP_S_LOG_ADDRS","CEC_ADAP_S_PHYS_ADDR","CEC_DQEVENT","CEC_G_MODE","CEC_RECEIVE","CEC_S_MODE","CEC_TRANSMIT","CHIOEXCHANGE","CHIOGELEM","CHIOGPARAMS","CHIOGPICKER","CHIOGSTATUS","CHIOGVPARAMS","CHIOINITELEM","CHIOMOVE","CHIOPOSITION","CHIOSPICKER","CHIOSVOLTAG","CIOC_KERNEL_VERSION","CM_IOCGATR","CM_IOSDBGLVL","CXL_MEM_QUERY_COMMANDS","CXL_MEM_SEND_COMMAND","DELL_WMI_SMBIOS_CMD","DFL_FPGA_CHECK_EXTENSION","DFL_FPGA_FME_ERR_GET_IRQ_NUM","DFL_FPGA_FME_ERR_SET_IRQ","DFL_FPGA_FME_PORT_ASSIGN","DFL_FPGA_FME_PORT_PR","DFL_FPGA_FME_PORT_RELEASE","DFL_FPGA_GET_API_VERSION","DFL_FPGA_PORT_DMA_MAP","DFL_FPGA_PORT_DMA_UNMAP","DFL_FPGA_PORT_ERR_GET_IRQ_NUM","DFL_FPGA_PORT_ERR_SET_IRQ","DFL_FPGA_PORT_GET_INFO","DFL_FPGA_PORT_GET_REGION_INFO","DFL_FPGA_PORT_RESET","DFL_FPGA_PORT_UINT_GET_IRQ_NUM","DFL_FPGA_PORT_UINT_SET_IRQ","DMA_BUF_IOCTL_SYNC","DMA_BUF_SET_NAME","DMA_BUF_SET_NAME_A","DMA_BUF_SET_NAME_B","DMA_HEAP_IOCTL_ALLOC","DM_DEV_ARM_POLL","DM_DEV_CREATE","DM_DEV_REMOVE","DM_DEV_RENAME","DM_DEV_SET_GEOMETRY","DM_DEV_STATUS","DM_DEV_SUSPEND","DM_DEV_WAIT","DM_GET_TARGET_VERSION","DM_LIST_DEVICES","DM_LIST_VERSIONS","DM_REMOVE_ALL","DM_TABLE_CLEAR","DM_TABLE_DEPS","DM_TABLE_LOAD","DM_TABLE_STATUS","DM_TARGET_MSG","DM_VERSION","ENI_MEMDUMP","ENI_SETMULT","EVIOCGEFFECTS","EVIOCGID","EVIOCGKEYCODE","EVIOCGKEYCODE_V2","EVIOCGMASK","EVIOCGRAB","EVIOCGREP","EVIOCGVERSION","EVIOCREVOKE","EVIOCRMFF","EVIOCSCLOCKID","EVIOCSFF","EVIOCSKEYCODE","EVIOCSKEYCODE_V2","EVIOCSMASK","EVIOCSREP","EXT4_IOC32_GETRSVSZ","EXT4_IOC32_GETVERSION","EXT4_IOC32_GETVERSION_OLD","EXT4_IOC32_GROUP_EXTEND","EXT4_IOC32_SETRSVSZ","EXT4_IOC32_SETVERSION","EXT4_IOC32_SETVERSION_OLD","EXT4_IOC_ALLOC_DA_BLKS","EXT4_IOC_CHECKPOINT","EXT4_IOC_CLEAR_ES_CACHE","EXT4_IOC_GETRSVSZ","EXT4_IOC_GETSTATE","EXT4_IOC_GETVERSION","EXT4_IOC_GETVERSION_OLD","EXT4_IOC_GET_ES_CACHE","EXT4_IOC_GROUP_EXTEND","EXT4_IOC_MIGRATE","EXT4_IOC_PRECACHE_EXTENTS","EXT4_IOC_RESIZE_FS","EXT4_IOC_SETRSVSZ","EXT4_IOC_SETVERSION","EXT4_IOC_SETVERSION_OLD","EXT4_IOC_SHUTDOWN","EXT4_IOC_SWAP_BOOT","F2FS_IOC_COMMIT_ATOMIC_WRITE","F2FS_IOC_COMPRESS_FILE","F2FS_IOC_DECOMPRESS_FILE","F2FS_IOC_DEFRAGMENT","F2FS_IOC_FLUSH_DEVICE","F2FS_IOC_GARBAGE_COLLECT","F2FS_IOC_GARBAGE_COLLECT_RANGE","F2FS_IOC_GET_COMPRESS_BLOCKS","F2FS_IOC_GET_COMPRESS_OPTION","F2FS_IOC_GET_FEATURES","F2FS_IOC_GET_PIN_FILE","F2FS_IOC_MOVE_RANGE","F2FS_IOC_PRECACHE_EXTENTS","F2FS_IOC_RELEASE_COMPRESS_BLOCKS","F2FS_IOC_RELEASE_VOLATILE_WRITE","F2FS_IOC_RESERVE_COMPRESS_BLOCKS","F2FS_IOC_RESIZE_FS","F2FS_IOC_SEC_TRIM_FILE","F2FS_IOC_SET_COMPRESS_OPTION","F2FS_IOC_SET_PIN_FILE","F2FS_IOC_SHUTDOWN","F2FS_IOC_START_ATOMIC_WRITE","F2FS_IOC_START_VOLATILE_WRITE","F2FS_IOC_WRITE_CHECKPOINT","FAT_IOCTL_GET_ATTRIBUTES","FAT_IOCTL_GET_VOLUME_ID","FAT_IOCTL_SET_ATTRIBUTES","FBIOGET_VBLANK","FBIO_CURSOR","FBIO_GETCONTROL2","FBIO_RADEON_GET_MIRROR","FBIO_RADEON_SET_MIRROR","FBIO_WAITEVENT","FBIO_WAITFORVSYNC","FDCLRPRM","FDDEFPRM","FDEJECT","FDFLUSH","FDFMTBEG","FDFMTEND","FDFMTTRK","FDGETDRVPRM","FDGETDRVSTAT","FDGETDRVTYP","FDGETFDCSTAT","FDGETMAXERRS","FDGETPRM","FDMSGOFF","FDMSGON","FDPOLLDRVSTAT","FDRAWCMD","FDRESET","FDSETDRVPRM","FDSETEMSGTRESH","FDSETMAXERRS","FDSETPRM","FDTWADDLE","FDWERRORCLR","FDWERRORGET","FIBMAP","FICLONE","FICLONERANGE","FIDEDUPERANGE","FIFREEZE","FIGETBSZ","FIOASYNC","FIOCLEX","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FIOSETOWN","FITHAW","FITRIM","FSI_SCOM_CHECK","FSI_SCOM_READ","FSI_SCOM_RESET","FSI_SCOM_WRITE","FSL_HV_IOCTL_DOORBELL","FSL_HV_IOCTL_GETPROP","FSL_HV_IOCTL_MEMCPY","FSL_HV_IOCTL_PARTITION_GET_STATUS","FSL_HV_IOCTL_PARTITION_RESTART","FSL_HV_IOCTL_PARTITION_START","FSL_HV_IOCTL_PARTITION_STOP","FSL_HV_IOCTL_SETPROP","FSL_MC_SEND_MC_COMMAND","FS_IOC32_GETFLAGS","FS_IOC32_GETVERSION","FS_IOC32_SETFLAGS","FS_IOC32_SETVERSION","FS_IOC_ADD_ENCRYPTION_KEY","FS_IOC_ENABLE_VERITY","FS_IOC_FIEMAP","FS_IOC_FSGETXATTR","FS_IOC_FSSETXATTR","FS_IOC_GETFLAGS","FS_IOC_GETFSLABEL","FS_IOC_GETFSMAP","FS_IOC_GETVERSION","FS_IOC_GET_ENCRYPTION_KEY_STATUS","FS_IOC_GET_ENCRYPTION_NONCE","FS_IOC_GET_ENCRYPTION_POLICY","FS_IOC_GET_ENCRYPTION_POLICY_EX","FS_IOC_GET_ENCRYPTION_PWSALT","FS_IOC_MEASURE_VERITY","FS_IOC_READ_VERITY_METADATA","FS_IOC_REMOVE_ENCRYPTION_KEY","FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS","FS_IOC_SETFLAGS","FS_IOC_SETFSLABEL","FS_IOC_SETVERSION","FS_IOC_SET_ENCRYPTION_POLICY","FUSE_DEV_IOC_CLONE","FW_CDEV_IOC_ADD_DESCRIPTOR","FW_CDEV_IOC_ALLOCATE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_CREATE_ISO_CONTEXT","FW_CDEV_IOC_DEALLOCATE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_FLUSH_ISO","FW_CDEV_IOC_GET_CYCLE_TIMER","FW_CDEV_IOC_GET_CYCLE_TIMER2","FW_CDEV_IOC_GET_INFO","FW_CDEV_IOC_GET_SPEED","FW_CDEV_IOC_INITIATE_BUS_RESET","FW_CDEV_IOC_QUEUE_ISO","FW_CDEV_IOC_RECEIVE_PHY_PACKETS","FW_CDEV_IOC_REMOVE_DESCRIPTOR","FW_CDEV_IOC_SEND_BROADCAST_REQUEST","FW_CDEV_IOC_SEND_PHY_PACKET","FW_CDEV_IOC_SEND_REQUEST","FW_CDEV_IOC_SEND_RESPONSE","FW_CDEV_IOC_SEND_STREAM_PACKET","FW_CDEV_IOC_SET_ISO_CHANNELS","FW_CDEV_IOC_START_ISO","FW_CDEV_IOC_STOP_ISO","GIO_CMAP","GIO_FONT","GIO_FONTX","GIO_SCRNMAP","GIO_UNIMAP","GIO_UNISCRNMAP","GPIOHANDLE_GET_LINE_VALUES_IOCTL","GPIOHANDLE_SET_CONFIG_IOCTL","GPIOHANDLE_SET_LINE_VALUES_IOCTL","GPIO_GET_CHIPINFO_IOCTL","GPIO_GET_LINEEVENT_IOCTL","GPIO_GET_LINEHANDLE_IOCTL","GPIO_GET_LINEINFO_IOCTL","GPIO_GET_LINEINFO_UNWATCH_IOCTL","GPIO_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINEINFO_IOCTL","GPIO_V2_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINE_IOCTL","GPIO_V2_LINE_GET_VALUES_IOCTL","GPIO_V2_LINE_SET_CONFIG_IOCTL","GPIO_V2_LINE_SET_VALUES_IOCTL","GSMIOC_DISABLE_NET","GSMIOC_ENABLE_NET","GSMIOC_GETCONF","GSMIOC_GETFIRST","GSMIOC_SETCONF","HE_GET_REG","HIDIOCAPPLICATION","HIDIOCGCOLLECTIONINDEX","HIDIOCGCOLLECTIONINFO","HIDIOCGDEVINFO","HIDIOCGFIELDINFO","HIDIOCGFLAG","HIDIOCGRAWINFO","HIDIOCGRDESC","HIDIOCGRDESCSIZE","HIDIOCGREPORT","HIDIOCGREPORTINFO","HIDIOCGSTRING","HIDIOCGUCODE","HIDIOCGUSAGE","HIDIOCGUSAGES","HIDIOCGVERSION","HIDIOCINITREPORT","HIDIOCSFLAG","HIDIOCSREPORT","HIDIOCSUSAGE","HIDIOCSUSAGES","HPET_DPI","HPET_EPI","HPET_IE_OFF","HPET_IE_ON","HPET_INFO","HPET_IRQFREQ","I2OEVTGET","I2OEVTREG","I2OGETIOPS","I2OHRTGET","I2OHTML","I2OLCTGET","I2OPARMGET","I2OPARMSET","I2OPASSTHRU","I2OPASSTHRU32","I2OSWDEL","I2OSWDL","I2OSWUL","I2OVALIDATE","I8K_GET_FAN","I8K_GET_SPEED","I8K_SET_FAN","IDT77105_GETSTAT","IDT77105_GETSTATZ","INOTIFY_IOC_SETNEXTWD","IOCTL_MEI_CONNECT_CLIENT","IOCTL_MEI_CONNECT_CLIENT_VTAG","IOCTL_MEI_NOTIFY_GET","IOCTL_MEI_NOTIFY_SET","IOCTL_VM_SOCKETS_GET_LOCAL_CID","IOC_OPAL_ACTIVATE_LSP","IOC_OPAL_ACTIVATE_USR","IOC_OPAL_ADD_USR_TO_LR","IOC_OPAL_ENABLE_DISABLE_MBR","IOC_OPAL_ERASE_LR","IOC_OPAL_GENERIC_TABLE_RW","IOC_OPAL_LOCK_UNLOCK","IOC_OPAL_LR_SETUP","IOC_OPAL_MBR_DONE","IOC_OPAL_PSID_REVERT_TPR","IOC_OPAL_REVERT_TPR","IOC_OPAL_SAVE","IOC_OPAL_SECURE_ERASE_LR","IOC_OPAL_SET_PW","IOC_OPAL_TAKE_OWNERSHIP","IOC_OPAL_WRITE_SHADOW_MBR","IOC_PR_CLEAR","IOC_PR_PREEMPT","IOC_PR_PREEMPT_ABORT","IOC_PR_REGISTER","IOC_PR_RELEASE","IOC_PR_RESERVE","IOC_WATCH_QUEUE_SET_FILTER","IOC_WATCH_QUEUE_SET_SIZE","IPMICTL_GET_MAINTENANCE_MODE_CMD","IPMICTL_GET_MY_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_LUN_CMD","IPMICTL_GET_MY_LUN_CMD","IPMICTL_GET_TIMING_PARMS_CMD","IPMICTL_RECEIVE_MSG","IPMICTL_RECEIVE_MSG_TRUNC","IPMICTL_REGISTER_FOR_CMD","IPMICTL_REGISTER_FOR_CMD_CHANS","IPMICTL_SEND_COMMAND","IPMICTL_SEND_COMMAND_SETTIME","IPMICTL_SET_GETS_EVENTS_CMD","IPMICTL_SET_MAINTENANCE_MODE_CMD","IPMICTL_SET_MY_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_LUN_CMD","IPMICTL_SET_MY_LUN_CMD","IPMICTL_SET_TIMING_PARMS_CMD","IPMICTL_UNREGISTER_FOR_CMD","IPMICTL_UNREGISTER_FOR_CMD_CHANS","IPMI_BMC_IOCTL_CLEAR_SMS_ATN","IPMI_BMC_IOCTL_FORCE_ABORT","IPMI_BMC_IOCTL_SET_SMS_ATN","ISST_IF_GET_PHY_ID","ISST_IF_GET_PLATFORM_INFO","ISST_IF_IO_CMD","ISST_IF_MBOX_COMMAND","ISST_IF_MSR_COMMAND","IVTVFB_IOC_DMA_FRAME","JSIOCGAXES","JSIOCGAXMAP","JSIOCGBTNMAP","JSIOCGBUTTONS","JSIOCGCORR","JSIOCGVERSION","JSIOCSAXMAP","JSIOCSBTNMAP","JSIOCSCORR","KCOV_DISABLE","KCOV_ENABLE","KCOV_INIT_TRACE","KCOV_REMOTE_ENABLE","KDADDIO","KDDELIO","KDDISABIO","KDENABIO","KDGETKEYCODE","KDGETLED","KDGETMODE","KDGKBDIACR","KDGKBENT","KDGKBLED","KDGKBMETA","KDGKBMODE","KDGKBSENT","KDGKBTYPE","KDMKTONE","KDSETKEYCODE","KDSETLED","KDSETMODE","KDSIGACCEPT","KDSKBENT","KDSKBLED","KDSKBMETA","KDSKBMODE","KDSKBSENT","KIOCSOUND","KVM_ARM_SET_DEVICE_ADDR","KVM_ARM_VCPU_FINALIZE","KVM_ASSIGN_DEV_IRQ","KVM_ASSIGN_PCI_DEVICE","KVM_ASSIGN_SET_INTX_MASK","KVM_ASSIGN_SET_MSIX_ENTRY","KVM_ASSIGN_SET_MSIX_NR","KVM_CHECK_EXTENSION","KVM_CLEAR_DIRTY_LOG","KVM_CREATE_DEVICE","KVM_CREATE_IRQCHIP","KVM_CREATE_PIT","KVM_CREATE_PIT2","KVM_CREATE_VCPU","KVM_CREATE_VM","KVM_DEASSIGN_DEV_IRQ","KVM_DEASSIGN_PCI_DEVICE","KVM_DIRTY_TLB","KVM_ENABLE_CAP","KVM_GET_API_VERSION","KVM_GET_CLOCK","KVM_GET_DEVICE_ATTR","KVM_GET_DIRTY_LOG","KVM_GET_FPU","KVM_GET_IRQCHIP","KVM_GET_MP_STATE","KVM_GET_NR_MMU_PAGES","KVM_GET_ONE_REG","KVM_GET_REGS","KVM_GET_REG_LIST","KVM_GET_SREGS","KVM_GET_STATS_FD","KVM_GET_TSC_KHZ","KVM_GET_VCPU_MMAP_SIZE","KVM_HAS_DEVICE_ATTR","KVM_HYPERV_EVENTFD","KVM_INTERRUPT","KVM_IOEVENTFD","KVM_IRQFD","KVM_IRQ_LINE","KVM_IRQ_LINE_STATUS","KVM_KVMCLOCK_CTRL","KVM_MEMORY_ENCRYPT_OP","KVM_MEMORY_ENCRYPT_REG_REGION","KVM_MEMORY_ENCRYPT_UNREG_REGION","KVM_NMI","KVM_PPC_ALLOCATE_HTAB","KVM_PPC_GET_PVINFO","KVM_PPC_GET_SMMU_INFO","KVM_PPC_RESIZE_HPT_COMMIT","KVM_PPC_RESIZE_HPT_PREPARE","KVM_PPC_SVM_OFF","KVM_REGISTER_COALESCED_MMIO","KVM_REINJECT_CONTROL","KVM_RESET_DIRTY_RINGS","KVM_RUN","KVM_S390_CLEAR_RESET","KVM_S390_ENABLE_SIE","KVM_S390_GET_CMMA_BITS","KVM_S390_GET_IRQ_STATE","KVM_S390_GET_SKEYS","KVM_S390_INITIAL_RESET","KVM_S390_INTERRUPT","KVM_S390_IRQ","KVM_S390_MEM_OP","KVM_S390_NORMAL_RESET","KVM_S390_PV_COMMAND","KVM_S390_SET_CMMA_BITS","KVM_S390_SET_INITIAL_PSW","KVM_S390_SET_IRQ_STATE","KVM_S390_SET_SKEYS","KVM_S390_STORE_STATUS","KVM_S390_UCAS_MAP","KVM_S390_UCAS_UNMAP","KVM_S390_VCPU_FAULT","KVM_SET_BOOT_CPU_ID","KVM_SET_CLOCK","KVM_SET_DEVICE_ATTR","KVM_SET_FPU","KVM_SET_GSI_ROUTING","KVM_SET_GUEST_DEBUG","KVM_SET_IDENTITY_MAP_ADDR","KVM_SET_IRQCHIP","KVM_SET_MP_STATE","KVM_SET_NR_MMU_PAGES","KVM_SET_ONE_REG","KVM_SET_REGS","KVM_SET_SIGNAL_MASK","KVM_SET_SREGS","KVM_SET_TSC_KHZ","KVM_SET_TSS_ADDR","KVM_SET_USER_MEMORY_REGION","KVM_SET_VAPIC_ADDR","KVM_SIGNAL_MSI","KVM_SMI","KVM_TPR_ACCESS_REPORTING","KVM_TRANSLATE","KVM_UNREGISTER_COALESCED_MMIO","KVM_X86_GET_MCE_CAP_SUPPORTED","KVM_X86_SETUP_MCE","KVM_XEN_HVM_GET_ATTR","KVM_XEN_HVM_SET_ATTR","KVM_XEN_VCPU_GET_ATTR","KVM_XEN_VCPU_SET_ATTR","LIRC_GET_FEATURES","LIRC_GET_LENGTH","LIRC_GET_MAX_TIMEOUT","LIRC_GET_MIN_TIMEOUT","LIRC_GET_REC_MODE","LIRC_GET_REC_RESOLUTION","LIRC_GET_REC_TIMEOUT","LIRC_GET_SEND_MODE","LIRC_SET_MEASURE_CARRIER_MODE","LIRC_SET_REC_CARRIER","LIRC_SET_REC_CARRIER_RANGE","LIRC_SET_REC_MODE","LIRC_SET_REC_TIMEOUT","LIRC_SET_REC_TIMEOUT_REPORTS","LIRC_SET_SEND_CARRIER","LIRC_SET_SEND_DUTY_CYCLE","LIRC_SET_SEND_MODE","LIRC_SET_TRANSMITTER_MASK","LIRC_SET_WIDEBAND_RECEIVER","LPSETTIMEOUT_NEW","MATROXFB_GET_ALL_OUTPUTS","MATROXFB_GET_AVAILABLE_OUTPUTS","MATROXFB_GET_OUTPUT_CONNECTION","MATROXFB_GET_OUTPUT_MODE","MATROXFB_SET_OUTPUT_CONNECTION","MATROXFB_SET_OUTPUT_MODE","MEDIA_IOC_DEVICE_INFO","MEDIA_IOC_ENUM_ENTITIES","MEDIA_IOC_ENUM_LINKS","MEDIA_IOC_G_TOPOLOGY","MEDIA_IOC_SETUP_LINK","MEDIA_REQUEST_IOC_QUEUE","MEDIA_REQUEST_IOC_REINIT","MEYEIOC_SYNC","MGSL_IOCCLRMODCOUNT","MGSL_IOCGGPIO","MGSL_IOCGIF","MGSL_IOCGPARAMS","MGSL_IOCGSTATS","MGSL_IOCGTXIDLE","MGSL_IOCGXCTRL","MGSL_IOCGXSYNC","MGSL_IOCLOOPTXDONE","MGSL_IOCRXENABLE","MGSL_IOCSGPIO","MGSL_IOCSIF","MGSL_IOCSPARAMS","MGSL_IOCSTXIDLE","MGSL_IOCSXCTRL","MGSL_IOCSXSYNC","MGSL_IOCTXABORT","MGSL_IOCTXENABLE","MGSL_IOCWAITEVENT","MGSL_IOCWAITGPIO","MMTIMER_GETBITS","MMTIMER_GETCOUNTER","MMTIMER_GETFREQ","MMTIMER_GETOFFSET","MMTIMER_GETRES","MMTIMER_MMAPAVAIL","MTIOCGET","MTIOCPOS","MTIOCTOP","NBD_CLEAR_QUE","NBD_CLEAR_SOCK","NBD_DISCONNECT","NBD_DO_IT","NBD_PRINT_DEBUG","NBD_SET_BLKSIZE","NBD_SET_FLAGS","NBD_SET_SIZE","NBD_SET_SIZE_BLOCKS","NBD_SET_SOCK","NBD_SET_TIMEOUT","ND_IOCTL_ARS_CAP","ND_IOCTL_ARS_START","ND_IOCTL_ARS_STATUS","ND_IOCTL_CALL","ND_IOCTL_CLEAR_ERROR","ND_IOCTL_DIMM_FLAGS","ND_IOCTL_GET_CONFIG_DATA","ND_IOCTL_GET_CONFIG_SIZE","ND_IOCTL_SET_CONFIG_DATA","ND_IOCTL_VENDOR","NE_ADD_VCPU","NE_CREATE_VM","NE_GET_IMAGE_LOAD_INFO","NE_SET_USER_MEMORY_REGION","NE_START_ENCLAVE","NILFS_IOCTL_CHANGE_CPMODE","NILFS_IOCTL_CLEAN_SEGMENTS","NILFS_IOCTL_DELETE_CHECKPOINT","NILFS_IOCTL_GET_BDESCS","NILFS_IOCTL_GET_CPINFO","NILFS_IOCTL_GET_CPSTAT","NILFS_IOCTL_GET_SUINFO","NILFS_IOCTL_GET_SUSTAT","NILFS_IOCTL_GET_VINFO","NILFS_IOCTL_RESIZE","NILFS_IOCTL_SET_ALLOC_RANGE","NILFS_IOCTL_SET_SUINFO","NILFS_IOCTL_SYNC","NS_ADJBUFLEV","NS_GETPSTAT","NS_GET_NSTYPE","NS_GET_OWNER_UID","NS_GET_PARENT","NS_GET_USERNS","NS_SETBUFLEV","NVME_IOCTL_ADMIN64_CMD","NVME_IOCTL_ADMIN_CMD","NVME_IOCTL_ID","NVME_IOCTL_IO64_CMD","NVME_IOCTL_IO_CMD","NVME_IOCTL_RESCAN","NVME_IOCTL_RESET","NVME_IOCTL_SUBMIT_IO","NVME_IOCTL_SUBSYS_RESET","NVRAM_INIT","NVRAM_SETCKS","PACKET_CTRL_CMD","PCITEST_BAR","PCITEST_CLEAR_IRQ","PCITEST_COPY","PCITEST_GET_IRQTYPE","PCITEST_LEGACY_IRQ","PCITEST_MSI","PCITEST_MSIX","PCITEST_READ","PCITEST_SET_IRQTYPE","PCITEST_WRITE","PERF_EVENT_IOC_ID","PERF_EVENT_IOC_MODIFY_ATTRIBUTES","PERF_EVENT_IOC_PAUSE_OUTPUT","PERF_EVENT_IOC_PERIOD","PERF_EVENT_IOC_QUERY_BPF","PERF_EVENT_IOC_SET_BPF","PERF_EVENT_IOC_SET_FILTER","PHN_GETREG","PHN_GETREGS","PHN_GET_REG","PHN_GET_REGS","PHN_NOT_OH","PHN_SETREG","PHN_SETREGS","PHN_SET_REG","PHN_SET_REGS","PIO_CMAP","PIO_FONT","PIO_FONTRESET","PIO_FONTX","PIO_SCRNMAP","PIO_UNIMAP","PIO_UNIMAPCLR","PIO_UNISCRNMAP","PMU_IOC_CAN_SLEEP","PMU_IOC_GET_BACKLIGHT","PMU_IOC_GET_MODEL","PMU_IOC_GRAB_BACKLIGHT","PMU_IOC_HAS_ADB","PMU_IOC_SET_BACKLIGHT","PMU_IOC_SLEEP","PPCLAIM","PPCLRIRQ","PPDATADIR","PPEXCL","PPFCONTROL","PPGETFLAGS","PPGETMODE","PPGETMODES","PPGETPHASE","PPGETTIME","PPNEGOT","PPPIOCATTACH","PPPIOCATTCHAN","PPPIOCBRIDGECHAN","PPPIOCCONNECT","PPPIOCDETACH","PPPIOCDISCONN","PPPIOCGASYNCMAP","PPPIOCGCHAN","PPPIOCGDEBUG","PPPIOCGFLAGS","PPPIOCGIDLE","PPPIOCGIDLE32","PPPIOCGIDLE64","PPPIOCGL2TPSTATS","PPPIOCGMRU","PPPIOCGNPMODE","PPPIOCGRASYNCMAP","PPPIOCGUNIT","PPPIOCGXASYNCMAP","PPPIOCNEWUNIT","PPPIOCSACTIVE","PPPIOCSASYNCMAP","PPPIOCSCOMPRESS","PPPIOCSDEBUG","PPPIOCSFLAGS","PPPIOCSMAXCID","PPPIOCSMRRU","PPPIOCSMRU","PPPIOCSNPMODE","PPPIOCSPASS","PPPIOCSRASYNCMAP","PPPIOCSXASYNCMAP","PPPIOCUNBRIDGECHAN","PPPIOCXFERUNIT","PPPOEIOCDFWD","PPPOEIOCSFWD","PPRCONTROL","PPRDATA","PPRELEASE","PPRSTATUS","PPSETFLAGS","PPSETMODE","PPSETPHASE","PPSETTIME","PPS_FETCH","PPS_GETCAP","PPS_GETPARAMS","PPS_KC_BIND","PPS_SETPARAMS","PPWCONTROL","PPWCTLONIRQ","PPWDATA","PPYIELD","PTP_CLOCK_GETCAPS","PTP_CLOCK_GETCAPS2","PTP_ENABLE_PPS","PTP_ENABLE_PPS2","PTP_EXTTS_REQUEST","PTP_EXTTS_REQUEST2","PTP_PEROUT_REQUEST","PTP_PEROUT_REQUEST2","PTP_PIN_GETFUNC","PTP_PIN_GETFUNC2","PTP_PIN_SETFUNC","PTP_PIN_SETFUNC2","PTP_SYS_OFFSET","PTP_SYS_OFFSET2","PTP_SYS_OFFSET_EXTENDED","PTP_SYS_OFFSET_EXTENDED2","PTP_SYS_OFFSET_PRECISE","PTP_SYS_OFFSET_PRECISE2","REISERFS_IOC_UNPACK","RFKILL_IOCTL_NOINPUT","RIO_ALLOC_DMA","RIO_CM_CHAN_ACCEPT","RIO_CM_CHAN_BIND","RIO_CM_CHAN_CLOSE","RIO_CM_CHAN_CONNECT","RIO_CM_CHAN_CREATE","RIO_CM_CHAN_LISTEN","RIO_CM_CHAN_RECEIVE","RIO_CM_CHAN_SEND","RIO_CM_EP_GET_LIST","RIO_CM_EP_GET_LIST_SIZE","RIO_CM_MPORT_GET_LIST","RIO_DEV_ADD","RIO_DEV_DEL","RIO_DISABLE_DOORBELL_RANGE","RIO_DISABLE_PORTWRITE_RANGE","RIO_ENABLE_DOORBELL_RANGE","RIO_ENABLE_PORTWRITE_RANGE","RIO_FREE_DMA","RIO_GET_EVENT_MASK","RIO_MAP_INBOUND","RIO_MAP_OUTBOUND","RIO_MPORT_GET_PROPERTIES","RIO_MPORT_MAINT_COMPTAG_SET","RIO_MPORT_MAINT_HDID_SET","RIO_MPORT_MAINT_PORT_IDX_GET","RIO_MPORT_MAINT_READ_LOCAL","RIO_MPORT_MAINT_READ_REMOTE","RIO_MPORT_MAINT_WRITE_LOCAL","RIO_MPORT_MAINT_WRITE_REMOTE","RIO_SET_EVENT_MASK","RIO_TRANSFER","RIO_UNMAP_INBOUND","RIO_UNMAP_OUTBOUND","RIO_WAIT_FOR_ASYNC","RNDADDENTROPY","RNDADDTOENTCNT","RNDCLEARPOOL","RNDGETENTCNT","RNDGETPOOL","RNDRESEEDCRNG","RNDZAPENTCNT","RPMSG_CREATE_EPT_IOCTL","RPMSG_DESTROY_EPT_IOCTL","RPROC_GET_SHUTDOWN_ON_RELEASE","RPROC_SET_SHUTDOWN_ON_RELEASE","RTC_AIE_OFF","RTC_AIE_ON","RTC_ALM_READ","RTC_ALM_SET","RTC_EPOCH_READ","RTC_EPOCH_SET","RTC_IRQP_READ","RTC_IRQP_SET","RTC_PIE_OFF","RTC_PIE_ON","RTC_PLL_GET","RTC_PLL_SET","RTC_RD_TIME","RTC_SET_TIME","RTC_UIE_OFF","RTC_UIE_ON","RTC_VL_CLR","RTC_VL_READ","RTC_WIE_OFF","RTC_WIE_ON","RTC_WKALM_RD","RTC_WKALM_SET","SCIF_ACCEPTREG","SCIF_ACCEPTREQ","SCIF_BIND","SCIF_CONNECT","SCIF_FENCE_MARK","SCIF_FENCE_SIGNAL","SCIF_FENCE_WAIT","SCIF_GET_NODEIDS","SCIF_LISTEN","SCIF_READFROM","SCIF_RECV","SCIF_REG","SCIF_SEND","SCIF_UNREG","SCIF_VREADFROM","SCIF_VWRITETO","SCIF_WRITETO","SEV_ISSUE_CMD","SIOCADDDLCI","SIOCADDMULTI","SIOCADDRT","SIOCATMARK","SIOCDARP","SIOCDELDLCI","SIOCDELMULTI","SIOCDELRT","SIOCDEVPRIVATE","SIOCDIFADDR","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGPGRP","SIOCGRARP","SIOCGSTAMP","SIOCGSTAMPNS_NEW","SIOCGSTAMP_NEW","SIOCMKCLIP","SIOCPROTOPRIVATE","SIOCRTMSG","SIOCSARP","SIOCSIFADDR","SIOCSIFATMTCP","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSPGRP","SIOCSRARP","SIOGIFINDEX","SNAPSHOT_ALLOC_SWAP_PAGE","SNAPSHOT_ATOMIC_RESTORE","SNAPSHOT_AVAIL_SWAP_SIZE","SNAPSHOT_CREATE_IMAGE","SNAPSHOT_FREE","SNAPSHOT_FREEZE","SNAPSHOT_FREE_SWAP_PAGES","SNAPSHOT_GET_IMAGE_SIZE","SNAPSHOT_PLATFORM_SUPPORT","SNAPSHOT_POWER_OFF","SNAPSHOT_PREF_IMAGE_SIZE","SNAPSHOT_S2RAM","SNAPSHOT_SET_SWAP_AREA","SNAPSHOT_UNFREEZE","SONET_CLRDIAG","SONET_GETDIAG","SONET_GETFRAMING","SONET_GETFRSENSE","SONET_GETSTAT","SONET_GETSTATZ","SONET_SETDIAG","SONET_SETFRAMING","SONYPI_IOCGBAT1CAP","SONYPI_IOCGBAT1REM","SONYPI_IOCGBAT2CAP","SONYPI_IOCGBAT2REM","SONYPI_IOCGBATFLAGS","SONYPI_IOCGBLUE","SONYPI_IOCGBRT","SONYPI_IOCGFAN","SONYPI_IOCGTEMP","SONYPI_IOCSBLUE","SONYPI_IOCSBRT","SONYPI_IOCSFAN","SPIOCSTYPE","STP_POLICY_ID_GET","STP_POLICY_ID_SET","STP_SET_OPTIONS","SWITCHTEC_IOCTL_EVENT_CTL","SWITCHTEC_IOCTL_EVENT_SUMMARY","SWITCHTEC_IOCTL_EVENT_SUMMARY_LEGACY","SWITCHTEC_IOCTL_FLASH_INFO","SWITCHTEC_IOCTL_FLASH_PART_INFO","SWITCHTEC_IOCTL_PFF_TO_PORT","SWITCHTEC_IOCTL_PORT_TO_PFF","SYNC_IOC_FILE_INFO","SYNC_IOC_MERGE","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TEE_IOC_CANCEL","TEE_IOC_CLOSE_SESSION","TEE_IOC_INVOKE","TEE_IOC_OPEN_SESSION","TEE_IOC_SHM_ALLOC","TEE_IOC_SHM_REGISTER","TEE_IOC_SUPPL_RECV","TEE_IOC_SUPPL_SEND","TEE_IOC_VERSION","TFD_IOC_SET_TICKS","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TOSHIBA_ACPI_SCI","TOSH_SMM","TUNATTACHFILTER","TUNDETACHFILTER","TUNGETDEVNETNS","TUNGETFEATURES","TUNGETFILTER","TUNGETIFF","TUNGETSNDBUF","TUNGETVNETBE","TUNGETVNETHDRSZ","TUNGETVNETLE","TUNSETCARRIER","TUNSETDEBUG","TUNSETFILTEREBPF","TUNSETGROUP","TUNSETIFF","TUNSETIFINDEX","TUNSETLINK","TUNSETNOCSUM","TUNSETOFFLOAD","TUNSETOWNER","TUNSETPERSIST","TUNSETQUEUE","TUNSETSNDBUF","TUNSETSTEERINGEBPF","TUNSETTXFILTER","TUNSETVNETBE","TUNSETVNETHDRSZ","TUNSETVNETLE","UDF_GETEABLOCK","UDF_GETEASIZE","UDF_GETVOLIDENT","UDF_RELOCATE_BLOCKS","UDMABUF_CREATE","UDMABUF_CREATE_LIST","UFFDIO_API","UFFDIO_CONTINUE","UFFDIO_COPY","UFFDIO_REGISTER","UFFDIO_UNREGISTER","UFFDIO_WAKE","UFFDIO_WRITEPROTECT","UFFDIO_ZEROPAGE","UI_ABS_SETUP","UI_BEGIN_FF_ERASE","UI_BEGIN_FF_UPLOAD","UI_DEV_CREATE","UI_DEV_DESTROY","UI_DEV_SETUP","UI_END_FF_ERASE","UI_END_FF_UPLOAD","UI_GET_VERSION","UI_SET_ABSBIT","UI_SET_EVBIT","UI_SET_FFBIT","UI_SET_KEYBIT","UI_SET_LEDBIT","UI_SET_MSCBIT","UI_SET_PHYS","UI_SET_PROPBIT","UI_SET_RELBIT","UI_SET_SNDBIT","UI_SET_SWBIT","USBDEVFS_ALLOC_STREAMS","USBDEVFS_ALLOW_SUSPEND","USBDEVFS_BULK","USBDEVFS_CLAIMINTERFACE","USBDEVFS_CLAIM_PORT","USBDEVFS_CLEAR_HALT","USBDEVFS_CONNECT","USBDEVFS_CONNECTINFO","USBDEVFS_CONTROL","USBDEVFS_DISCARDURB","USBDEVFS_DISCONNECT","USBDEVFS_DISCONNECT_CLAIM","USBDEVFS_DISCSIGNAL","USBDEVFS_DROP_PRIVILEGES","USBDEVFS_FORBID_SUSPEND","USBDEVFS_FREE_STREAMS","USBDEVFS_GETDRIVER","USBDEVFS_GET_CAPABILITIES","USBDEVFS_GET_SPEED","USBDEVFS_HUB_PORTINFO","USBDEVFS_IOCTL","USBDEVFS_REAPURB","USBDEVFS_REAPURB32","USBDEVFS_REAPURBNDELAY","USBDEVFS_REAPURBNDELAY32","USBDEVFS_RELEASEINTERFACE","USBDEVFS_RELEASE_PORT","USBDEVFS_RESET","USBDEVFS_RESETEP","USBDEVFS_SETCONFIGURATION","USBDEVFS_SETINTERFACE","USBDEVFS_SUBMITURB","USBDEVFS_WAIT_FOR_RESUME","UVCIOC_CTRL_MAP","UVCIOC_CTRL_QUERY","VBG_IOCTL_ACQUIRE_GUEST_CAPABILITIES","VBG_IOCTL_CHANGE_FILTER_MASK","VBG_IOCTL_CHANGE_GUEST_CAPABILITIES","VBG_IOCTL_CHECK_BALLOON","VBG_IOCTL_DRIVER_VERSION_INFO","VBG_IOCTL_HGCM_CONNECT","VBG_IOCTL_HGCM_DISCONNECT","VBG_IOCTL_INTERRUPT_ALL_WAIT_FOR_EVENTS","VBG_IOCTL_VMMDEV_REQUEST_BIG","VBG_IOCTL_WAIT_FOR_EVENTS","VBG_IOCTL_WRITE_CORE_DUMP","VDUSE_CREATE_DEV","VDUSE_DESTROY_DEV","VDUSE_DEV_GET_FEATURES","VDUSE_DEV_INJECT_CONFIG_IRQ","VDUSE_DEV_SET_CONFIG","VDUSE_GET_API_VERSION","VDUSE_IOTLB_GET_FD","VDUSE_SET_API_VERSION","VDUSE_VQ_GET_INFO","VDUSE_VQ_INJECT_IRQ","VDUSE_VQ_SETUP","VDUSE_VQ_SETUP_KICKFD","VFAT_IOCTL_READDIR_BOTH","VFAT_IOCTL_READDIR_SHORT","VFIO_CHECK_EXTENSION","VFIO_DEVICE_FEATURE","VFIO_DEVICE_GET_GFX_DMABUF","VFIO_DEVICE_GET_INFO","VFIO_DEVICE_GET_IRQ_INFO","VFIO_DEVICE_GET_PCI_HOT_RESET_INFO","VFIO_DEVICE_GET_REGION_INFO","VFIO_DEVICE_IOEVENTFD","VFIO_DEVICE_PCI_HOT_RESET","VFIO_DEVICE_QUERY_GFX_PLANE","VFIO_DEVICE_RESET","VFIO_DEVICE_SET_IRQS","VFIO_EEH_PE_OP","VFIO_GET_API_VERSION","VFIO_GROUP_GET_DEVICE_FD","VFIO_GROUP_GET_STATUS","VFIO_GROUP_SET_CONTAINER","VFIO_GROUP_UNSET_CONTAINER","VFIO_IOMMU_DIRTY_PAGES","VFIO_IOMMU_DISABLE","VFIO_IOMMU_ENABLE","VFIO_IOMMU_GET_INFO","VFIO_IOMMU_MAP_DMA","VFIO_IOMMU_SPAPR_REGISTER_MEMORY","VFIO_IOMMU_SPAPR_TCE_CREATE","VFIO_IOMMU_SPAPR_TCE_GET_INFO","VFIO_IOMMU_SPAPR_TCE_REMOVE","VFIO_IOMMU_SPAPR_UNREGISTER_MEMORY","VFIO_IOMMU_UNMAP_DMA","VFIO_SET_IOMMU","VHOST_GET_BACKEND_FEATURES","VHOST_GET_FEATURES","VHOST_GET_VRING_BASE","VHOST_GET_VRING_BUSYLOOP_TIMEOUT","VHOST_GET_VRING_ENDIAN","VHOST_NET_SET_BACKEND","VHOST_RESET_OWNER","VHOST_SCSI_CLEAR_ENDPOINT","VHOST_SCSI_GET_ABI_VERSION","VHOST_SCSI_GET_EVENTS_MISSED","VHOST_SCSI_SET_ENDPOINT","VHOST_SCSI_SET_EVENTS_MISSED","VHOST_SET_BACKEND_FEATURES","VHOST_SET_FEATURES","VHOST_SET_LOG_BASE","VHOST_SET_LOG_FD","VHOST_SET_MEM_TABLE","VHOST_SET_OWNER","VHOST_SET_VRING_ADDR","VHOST_SET_VRING_BASE","VHOST_SET_VRING_BUSYLOOP_TIMEOUT","VHOST_SET_VRING_CALL","VHOST_SET_VRING_ENDIAN","VHOST_SET_VRING_ERR","VHOST_SET_VRING_KICK","VHOST_SET_VRING_NUM","VHOST_VDPA_GET_CONFIG","VHOST_VDPA_GET_DEVICE_ID","VHOST_VDPA_GET_IOVA_RANGE","VHOST_VDPA_GET_STATUS","VHOST_VDPA_GET_VRING_NUM","VHOST_VDPA_SET_CONFIG","VHOST_VDPA_SET_CONFIG_CALL","VHOST_VDPA_SET_STATUS","VHOST_VDPA_SET_VRING_ENABLE","VHOST_VSOCK_SET_GUEST_CID","VHOST_VSOCK_SET_RUNNING","VIDIOC_AM437X_CCDC_CFG","VIDIOC_CREATE_BUFS","VIDIOC_CROPCAP","VIDIOC_DBG_G_CHIP_INFO","VIDIOC_DBG_G_REGISTER","VIDIOC_DBG_S_REGISTER","VIDIOC_DECODER_CMD","VIDIOC_DQBUF","VIDIOC_DQEVENT","VIDIOC_DV_TIMINGS_CAP","VIDIOC_ENCODER_CMD","VIDIOC_ENUMAUDIO","VIDIOC_ENUMAUDOUT","VIDIOC_ENUMINPUT","VIDIOC_ENUMOUTPUT","VIDIOC_ENUMSTD","VIDIOC_ENUM_DV_TIMINGS","VIDIOC_ENUM_FMT","VIDIOC_ENUM_FRAMEINTERVALS","VIDIOC_ENUM_FRAMESIZES","VIDIOC_ENUM_FREQ_BANDS","VIDIOC_EXPBUF","VIDIOC_G_AUDIO","VIDIOC_G_AUDOUT","VIDIOC_G_CROP","VIDIOC_G_CTRL","VIDIOC_G_DV_TIMINGS","VIDIOC_G_EDID","VIDIOC_G_ENC_INDEX","VIDIOC_G_EXT_CTRLS","VIDIOC_G_FBUF","VIDIOC_G_FMT","VIDIOC_G_FREQUENCY","VIDIOC_G_INPUT","VIDIOC_G_JPEGCOMP","VIDIOC_G_MODULATOR","VIDIOC_G_OUTPUT","VIDIOC_G_PARM","VIDIOC_G_PRIORITY","VIDIOC_G_SELECTION","VIDIOC_G_SLICED_VBI_CAP","VIDIOC_G_STD","VIDIOC_G_TUNER","VIDIOC_LOG_STATUS","VIDIOC_OMAP3ISP_AEWB_CFG","VIDIOC_OMAP3ISP_AF_CFG","VIDIOC_OMAP3ISP_CCDC_CFG","VIDIOC_OMAP3ISP_HIST_CFG","VIDIOC_OMAP3ISP_PRV_CFG","VIDIOC_OMAP3ISP_STAT_EN","VIDIOC_OMAP3ISP_STAT_REQ","VIDIOC_OVERLAY","VIDIOC_PREPARE_BUF","VIDIOC_QBUF","VIDIOC_QUERYBUF","VIDIOC_QUERYCAP","VIDIOC_QUERYCTRL","VIDIOC_QUERYMENU","VIDIOC_QUERYSTD","VIDIOC_QUERY_DV_TIMINGS","VIDIOC_QUERY_EXT_CTRL","VIDIOC_REQBUFS","VIDIOC_STREAMOFF","VIDIOC_STREAMON","VIDIOC_SUBDEV_DV_TIMINGS_CAP","VIDIOC_SUBDEV_ENUMSTD","VIDIOC_SUBDEV_ENUM_DV_TIMINGS","VIDIOC_SUBDEV_ENUM_FRAME_INTERVAL","VIDIOC_SUBDEV_ENUM_FRAME_SIZE","VIDIOC_SUBDEV_ENUM_MBUS_CODE","VIDIOC_SUBDEV_G_CROP","VIDIOC_SUBDEV_G_DV_TIMINGS","VIDIOC_SUBDEV_G_EDID","VIDIOC_SUBDEV_G_FMT","VIDIOC_SUBDEV_G_FRAME_INTERVAL","VIDIOC_SUBDEV_G_SELECTION","VIDIOC_SUBDEV_G_STD","VIDIOC_SUBDEV_QUERYCAP","VIDIOC_SUBDEV_QUERYSTD","VIDIOC_SUBDEV_QUERY_DV_TIMINGS","VIDIOC_SUBDEV_S_CROP","VIDIOC_SUBDEV_S_DV_TIMINGS","VIDIOC_SUBDEV_S_EDID","VIDIOC_SUBDEV_S_FMT","VIDIOC_SUBDEV_S_FRAME_INTERVAL","VIDIOC_SUBDEV_S_SELECTION","VIDIOC_SUBDEV_S_STD","VIDIOC_SUBSCRIBE_EVENT","VIDIOC_S_AUDIO","VIDIOC_S_AUDOUT","VIDIOC_S_CROP","VIDIOC_S_CTRL","VIDIOC_S_DV_TIMINGS","VIDIOC_S_EDID","VIDIOC_S_EXT_CTRLS","VIDIOC_S_FBUF","VIDIOC_S_FMT","VIDIOC_S_FREQUENCY","VIDIOC_S_HW_FREQ_SEEK","VIDIOC_S_INPUT","VIDIOC_S_JPEGCOMP","VIDIOC_S_MODULATOR","VIDIOC_S_OUTPUT","VIDIOC_S_PARM","VIDIOC_S_PRIORITY","VIDIOC_S_SELECTION","VIDIOC_S_STD","VIDIOC_S_TUNER","VIDIOC_TRY_DECODER_CMD","VIDIOC_TRY_ENCODER_CMD","VIDIOC_TRY_EXT_CTRLS","VIDIOC_TRY_FMT","VIDIOC_UNSUBSCRIBE_EVENT","VTPM_PROXY_IOC_NEW_DEV","VT_ACTIVATE","VT_DISALLOCATE","VT_GETMODE","VT_GETSTATE","VT_OPENQRY","VT_RELDISP","VT_RESIZE","VT_RESIZEX","VT_SETMODE","VT_WAITACTIVE","WDIOC_GETBOOTSTATUS","WDIOC_GETPRETIMEOUT","WDIOC_GETSTATUS","WDIOC_GETSUPPORT","WDIOC_GETTEMP","WDIOC_GETTIMELEFT","WDIOC_GETTIMEOUT","WDIOC_KEEPALIVE","WDIOC_SETOPTIONS","WDIOC_SETPRETIMEOUT","WDIOC_SETTIMEOUT","ZATM_GETPOOL","ZATM_GETPOOLZ","ZATM_SETPOOL","FD_CLR","FD_ISSET","FD_SET","FD_ZERO","SIG_DFL","sig_ign"],"q":[[0,"linux_raw_sys"],[6,"linux_raw_sys::ctypes"],[28,"linux_raw_sys::errno"],[161,"linux_raw_sys::general"],[3502,"linux_raw_sys::ioctl"],[5093,"linux_raw_sys::select_macros"],[5097,"linux_raw_sys::signal_macros"]],"d":["","","","","","","","","","","","","","","","","","","","","","Equivalent to C’s <code>void</code> type when used as a pointer.","","Returns the argument unchanged.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeust doesn’t currently permit us to use <code>transmute</code> to …"],"i":[0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,102,102,102,102,102,102,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,69,110,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,94,0,138,26,28,122,29,30,38,73,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,0,0,0,0,0,94,0,0,0,63,109,109,109,68,72,67,99,99,68,66,64,65,67,66,72,108,64,60,111,109,59,61,62,65,108,110,70,108,111,71,108,108,108,60,61,62,62,60,68,60,111,108,109,66,59,61,62,64,62,82,87,81,6,6,6,6,31,31,99,138,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,122,29,30,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,138,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,122,29,30,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,125,125,34,75,76,77,79,75,76,77,79,75,76,77,79,76,77,75,76,77,79,75,76,77,79,75,76,77,79,76,77,0,0,0,56,56,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,0,10,0,99,24,26,124,90,126,126,126,126,126,15,17,23,10,6,106,123,34,32,34,90,36,14,85,125,99,0,10,42,102,103,104,81,23,41,56,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,0,96,97,98,96,97,98,41,11,82,87,0,0,0,24,26,0,22,24,26,38,56,82,0,0,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,122,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,64,65,66,67,68,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,112,138,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,122,29,30,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,84,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,37,0,40,0,10,10,10,102,103,104,106,123,14,16,18,0,0,138,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,122,29,30,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,87,89,80,80,0,43,46,50,51,43,46,50,51,0,0,0,0,138,138,29,30,0,20,21,20,21,20,21,20,21,20,21,33,124,84,88,90,99,99,0,40,40,99,15,17,93,124,24,26,35,0,0,33,22,25,89,90,91,92,93,0,124,10,6,99,39,35,35,36,36,0,112,56,10,14,16,18,13,19,56,27,27,0,31,113,0,89,91,92,93,138,25,122,138,99,112,29,112,34,112,123,81,86,123,81,86,81,86,22,41,54,55,54,55,0,0,0,0,17,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,57,101,57,101,57,101,57,101,99,99,10,10,99,99,99,99,99,99,56,56,99,70,70,70,100,0,0,71,71,71,0,0,0,0,0,0,0,0,0,0,0,107,107,25,0,90,32,32,123,32,123,58,58,58,94,95,94,94,94,94,95,94,94,95,94,95,94,95,94,95,94,95,94,94,95,94,95,94,95,94,95,56,56,0,33,85,88,0,0,0,30,34,30,0,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,0,0,0,0,56,84,138,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,122,29,30,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,138,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,122,29,30,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,42,45,48,73,42,44,45,47,48,49,73,44,47,49,19,28,122,138,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,122,29,30,31,32,33,34,123,35,36,37,38,39,40,124,41,125,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,126,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,52,52,28,38,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,30,0,31,105,105,12,38,13,24,26,105,0,0,0,0,124,0,78,78,78,78,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[]],[[]],[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6],[[6,7],8],[6],[[6,7],8],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[10,[9]]],[[10,[9]]]],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],0,[[[10,[114]],[10,[114]]],115],0,[99,116],0,0,0,0,0,0,0,0,0,0,0,0,[[],[[10,[117]]]],[[],[[6,[117]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[10,[118]],[10,[118]]],119],[[42,42],119],[[102,102],119],[[103,103],119],[[104,104],119],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[10,[120]],2],121],[[6,2],121],[[11,2],121],[[12,2],121],[[13,2],121],[[14,2],121],[[15,2],121],[[16,2],121],[[17,2],121],[[18,2],121],[[19,2],121],[[20,2],121],[[21,2],121],[[22,2],121],[[23,2],121],[[24,2],121],[[25,2],121],[[26,2],121],[[122,2],121],[[31,2],121],[[32,2],121],[[33,2],121],[[34,2],121],[[123,2],121],[[35,2],121],[[36,2],121],[[37,2],121],[[38,2],121],[[39,2],121],[[40,2],121],[[124,2],121],[[41,2],121],[[125,2],121],[[42,2],121],[[43,2],121],[[44,2],121],[[45,2],121],[[46,2],121],[[47,2],121],[[48,2],121],[[49,2],121],[[50,2],121],[[51,2],121],[[52,2],121],[[53,2],121],[[54,2],121],[[55,2],121],[[56,2],121],[[57,2],121],[[58,2],121],[[59,2],121],[[62,2],121],[[64,2],121],[[65,2],121],[[66,2],121],[[67,2],121],[[68,2],121],[[72,2],121],[[73,2],121],[[74,2],121],[[75,2],121],[[76,2],121],[[77,2],121],[[78,2],121],[[79,2],121],[[80,2],121],[[83,2],121],[[84,2],121],[[85,2],121],[[86,2],121],[[87,2],121],[[88,2],121],[[89,2],121],[[90,2],121],[[91,2],121],[[92,2],121],[[93,2],121],[[126,2],121],[[94,2],121],[[95,2],121],[[96,2],121],[[97,2],121],[[98,2],121],[[99,2],121],[[100,2],121],[[101,2],121],[[102,2],121],[[103,2],121],[[104,2],121],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[10,[[0,[[128,[[8,[127]]]],[129,[[8,[127]]]]]]]],7,127],130],[[[10,[[0,[[128,[[8,[127]]]],[129,[[8,[127]]]]]]]],7],119],[[[10,[131]],132]],[[102,132]],[[103,132]],[[104,132]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[99,116],0,0,0,[99,116],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],6],[[116,116,116,116,116,116,116],[[10,[[133,[127]]]]]],0,0,0,0,0,0,0,0,[[[10,[134]],[10,[134]]],[[135,[115]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[99,116],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[99,116],[99,116],[[[10,[[0,[[128,[[8,[127]]]],[129,[[8,[127]]]]]]]],7,127,130]],[[[10,[[0,[[128,[[8,[127]]]],[129,[[8,[127]]]]]]]],7,119]],[[99,116]],[[99,116]],[[99,116]],[[99,116]],[[99,116]],[[99,116]],0,0,[[99,116]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[99,116],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[136,11]],[[136,11],119],[[136,11]],[11],0,[[],137]],"c":[],"p":[[4,"c_void"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"TypeId"],[3,"__IncompleteArrayField"],[15,"usize"],[15,"slice"],[8,"Clone"],[3,"__BindgenBitfieldUnit"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"__user_cap_header_struct"],[3,"__user_cap_data_struct"],[3,"vfs_cap_data"],[3,"vfs_cap_data__bindgen_ty_1"],[3,"vfs_ns_cap_data"],[3,"vfs_ns_cap_data__bindgen_ty_1"],[3,"f_owner_ex"],[3,"flock"],[3,"flock64"],[3,"open_how"],[3,"epoll_event"],[3,"fscrypt_policy_v1"],[3,"fscrypt_key"],[3,"fscrypt_policy_v2"],[3,"fscrypt_get_policy_ex_arg"],[3,"fscrypt_key_specifier"],[3,"fscrypt_remove_key_arg"],[3,"fscrypt_get_key_status_arg"],[3,"mount_attr"],[3,"file_clone_range"],[3,"fstrim_range"],[3,"file_dedupe_range_info"],[3,"files_stat_struct"],[3,"inodes_stat_t"],[3,"fsxattr"],[3,"futex_waitv"],[3,"robust_list"],[3,"robust_list_head"],[3,"pollfd"],[3,"__kernel_timespec"],[3,"__kernel_itimerspec"],[3,"__kernel_old_timeval"],[3,"__kernel_old_timespec"],[3,"__kernel_old_itimerval"],[3,"__kernel_sock_timeval"],[3,"timespec"],[3,"timeval"],[3,"itimerspec"],[3,"itimerval"],[3,"timezone"],[3,"rusage"],[3,"rlimit"],[3,"rlimit64"],[3,"clone_args"],[3,"sigaction"],[3,"sigaltstack"],[3,"__sifields__bindgen_ty_1"],[3,"__sifields__bindgen_ty_2"],[3,"__sifields__bindgen_ty_3"],[3,"__sifields__bindgen_ty_4"],[3,"__sifields__bindgen_ty_5"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],[3,"__sifields__bindgen_ty_6"],[3,"__sifields__bindgen_ty_7"],[3,"siginfo"],[3,"siginfo__bindgen_ty_1__bindgen_ty_1"],[3,"sigevent"],[3,"sigevent__bindgen_ty_1__bindgen_ty_1"],[3,"statx_timestamp"],[3,"statx"],[3,"termios"],[3,"termios2"],[3,"ktermios"],[3,"winsize"],[3,"termio"],[3,"iovec"],[3,"uffd_msg"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_1"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_2"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_3"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_4"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_5"],[3,"uffdio_api"],[3,"uffdio_range"],[3,"uffdio_register"],[3,"uffdio_copy"],[3,"uffdio_zeropage"],[3,"uffdio_writeprotect"],[3,"uffdio_continue"],[3,"stat"],[3,"__old_kernel_stat"],[3,"statfs"],[3,"statfs64"],[3,"compat_statfs64"],[3,"user_desc"],[3,"kernel_sigset_t"],[3,"kernel_sigaction"],[4,"fsconfig_command"],[4,"membarrier_cmd"],[4,"membarrier_cmd_flag"],[19,"fscrypt_get_policy_ex_arg__bindgen_ty_1"],[19,"fscrypt_key_specifier__bindgen_ty_1"],[19,"sigval"],[19,"__sifields"],[19,"__sifields__bindgen_ty_5__bindgen_ty_1"],[19,"siginfo__bindgen_ty_1"],[19,"sigevent__bindgen_ty_1"],[19,"uffd_msg__bindgen_ty_1"],[19,"uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],[8,"Ord"],[4,"Ordering"],[6,"c_uint"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[6,"Result"],[3,"fscrypt_provisioning_key_payload"],[3,"file_dedupe_range"],[3,"inotify_event"],[3,"rand_pool_info"],[3,"linux_dirent64"],[15,"u8"],[8,"AsRef"],[8,"AsMut"],[15,"u64"],[8,"Hash"],[8,"Hasher"],[15,"array"],[8,"PartialOrd"],[4,"Option"],[6,"c_int"],[6,"__kernel_sighandler_t"],[3,"fscrypt_add_key_arg"]]},\
"once_cell":{"doc":"Overview","t":"AAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[3,"once_cell::race"],[64,"once_cell::sync"],[112,"once_cell::unsync"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15,15,0,0,21,22,21,22,21,21,21,21,22,22,22,21,21,21,22,22,22,21,21,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,21,21,21,22,21,21,22,21,22,21],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[[1,10]],[[2,10]],[[3,10],8],[[4,10],9],[[1,10],11],[[2,10],11],[[3,10],[[11,[8]]]],[[4,10],[[11,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,11],[[2,12],[[11,[12]]]],[[3,8],11],[[4,9],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[15,[14]],[15,[14]]]],[[]],[[],15],[[],[[17,[16]]]],[[[17,[10]]]],[[[17,[10]]]],[[[15,[18]],[15,[18]]],9],[[],9],[[[15,[19]],5],6],[[[17,[19]],5],6],[[[17,[10]]]],[[[17,[10]]]],[[],15],[20],[[]],[[]],[15,7],[[[17,[10]]],7],[15,7],[[[17,[10]]],7],[[15,10]],[[15,10],11],[15],[[]],[[]],[15,7],[17,11],[[],15],[[],17],[15,11],[15,7],[[]],[[],11],[[],11],[15,11],[[],11],[[],11],[[],13],[[],13],[15],[[],15],0,0,[[]],[[]],[[]],[[]],[[[21,[14]]],[[21,[14]]]],[[[21,[14]],[21,[14]]]],[[]],[[],21],[[],[[22,[16]]]],[[[22,[10]]]],[[[22,[10]]]],[[[21,[18]],[21,[18]]],9],[[],9],[[[21,[19]],5],6],[[[22,[19]],5],6],[[[22,[10]]]],[[[22,[10]]]],[[],21],[[]],[20],[[]],[21,7],[[[22,[10]]],7],[21,7],[[[22,[10]]],7],[[21,10]],[[21,10],11],[[]],[[]],[21,7],[22,11],[[],21],[[],22],[21,11],[21,7],[[]],[[],11],[[],11],[21,11],[[],11],[[],11],[[],13],[[],13],[[],21]],"c":[],"p":[[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OnceCell"],[3,"Lazy"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[232,"proc_macro2::extra"],[247,"proc_macro2::token_stream"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,22,22,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,22,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,22,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,22,6,8,9,1,12,5,6,1,22,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,22,7,8,9,1,12,5,0,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],13],[[],7],[9,14],[9,10],[[10,10],15],[[11,11],15],[[12,[0,[16,[18,[17]]]]],15],[[12,12],15],[[],15],[[],15],[[],15],[[7,19]],[[7,19]],0,[20,5],[20,5],[21,5],[21,5],[[22,23],24],[[22,23],24],[[7,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[8,23],24],[[9,23],24],[[9,23],24],[[10,23],24],[[1,23],24],[[1,23],24],[[11,23],24],[[12,23],24],[[12,23],24],[[5,23],24],[[5,23],24],[[]],[8,7],[[]],[25,7],[[]],[26,6],[5,8],[12,8],[[]],[1,8],[9,8],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],[17,[[27,[7,22]]]],[17,[[27,[5,22]]]],[[12,28]],[29,5],[29,5],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,34],[7,15],[35,5],[35,5],[[6,6],[[36,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[17,6],12],[[17,6],12],[[12,12],[[36,[13]]]],[37],[[6,6],6],[[8,6]],[[9,6]],[[1,6]],[[12,6]],[[5,6]],[6,[[36,[38]]]],[1,11],[22,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[17,5],[[5,[40,[39]]],[[36,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[45,5],[45,5],[3,5],[3,5],[6,26],[39,5],[39,5],0,[[]],[[]],[14,14],[[]],[14,6],[[14,23],24],[[]],[[]],[14,6],[14,6],[[]],[[],27],[[],27],[[],41],0,0,[[]],[[]],[34,34],[[]],[[34,23],24],[[]],[[]],[[]],[34,[[36,[8]]]],[34],[[]],[[],27],[[],27],[[],41]],"c":[],"p":[[3,"Punct"],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"Sized"],[15,"str"],[8,"AsRef"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Result"],[8,"Hasher"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,11,11,11,11,12,0,4,4,0,0,12,12,4,4,4],"f":[0,0,0,[[[2,[1]]]],[3],[[3,4]],[[3,4]],[5,6],0,[7,8],[7,8],0,0,[[],[[10,[9]]]],[[],[[10,[9]]]],[[],8],[[],8],[8]],"c":[],"p":[[4,"TokenTree"],[8,"Into"],[8,"IntoIterator"],[8,"ToTokens"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"]]},\
"rustix":{"doc":"<code>rustix</code> provides efficient memory-safe and I/O-safe …","t":"OAAAAIIDIIDGKLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDSDSSDSSSSSSSSSSSSSDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDGSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFFFLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLFFFLFFFLFFLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFESSSSSSSSSSSSSSSSSSSDNSSSSSSSSSSSSNSSSSNSSSSSSNNNSSSSSSSDDSSSSNSSSNSSSSNNSEDSSSSEDDSSSSSSDSSSSSSSSSSSSSSSSSSSSGSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLFLLLLLLLLMMLLLLLMLLLLLLLLLLLLMALLLLLLLLLLLLFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR","n":["cstr","fd","ffi","io","termios","AsFd","AsRawFd","BorrowedFd","FromRawFd","IntoRawFd","OwnedFd","RawFd","as_fd","as_fd","as_fd","as_raw_fd","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","borrow_raw","clone","clone_into","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","is_terminal","is_terminal","to_owned","try_clone","try_clone_to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CStr","CString","FromBytesWithNulError","NulError","as_bytes","as_bytes_with_nul","as_c_str","as_ptr","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_char","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","deref","description","description","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_until_nul","from_bytes_with_nul","from_bytes_with_nul_unchecked","from_ptr","from_raw","from_vec_unchecked","from_vec_with_nul","from_vec_with_nul_unchecked","hash","hash","index","index","into","into","into","into_boxed_c_str","into_bytes","into_bytes_with_nul","into_c_string","into_raw","into_string","into_vec","is_empty","new","nul_position","partial_cmp","partial_cmp","provide","provide","to_bytes","to_bytes_with_nul","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string_lossy","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ACCESS","ADDRINUSE","ADDRNOTAVAIL","ADV","AFNOSUPPORT","AGAIN","ALREADY","APPEND","BADE","BADF","BADFD","BADMSG","BADR","BADRQC","BADSLT","BFONT","BUSY","CANCELED","CHILD","CHRNG","CLOEXEC","CLOEXEC","COMM","CONNABORTED","CONNREFUSED","CONNRESET","DEADLK","DEADLOCK","DESTADDRREQ","DOM","DOTDOT","DQUOT","DSYNC","DupFlags","EXIST","Errno","FAULT","FBIG","FdFlags","HIPRI","HOSTDOWN","HOSTUNREACH","HWPOISON","IDRM","ILSEQ","INPROGRESS","INTR","INVAL","IO","ISCONN","ISDIR","ISNAM","IoSlice","IoSliceMut","KEYEXPIRED","KEYREJECTED","KEYREVOKED","L2HLT","L2NSYNC","L3HLT","L3RST","LIBACC","LIBBAD","LIBEXEC","LIBMAX","LIBSCN","LNRNG","LOOP","MEDIUMTYPE","MFILE","MLINK","MSGSIZE","MULTIHOP","NAMETOOLONG","NAVAIL","NETDOWN","NETRESET","NETUNREACH","NFILE","NOANO","NOBUFS","NOCSI","NODATA","NODEV","NOENT","NOEXEC","NOKEY","NOLCK","NOLINK","NOMEDIUM","NOMEM","NOMSG","NONET","NOPKG","NOPROTOOPT","NOSPC","NOSR","NOSTR","NOSYS","NOTBLK","NOTCONN","NOTDIR","NOTEMPTY","NOTNAM","NOTRECOVERABLE","NOTSOCK","NOTSUP","NOTTY","NOTUNIQ","NOWAIT","NXIO","OPNOTSUPP","OVERFLOW","OWNERDEAD","PERM","PFNOSUPPORT","PIPE","PROTO","PROTONOSUPPORT","PROTOTYPE","RANGE","REMCHG","REMOTE","REMOTEIO","RESTART","RFKILL","ROFS","ReadWriteFlags","Result","SHUTDOWN","SOCKTNOSUPPORT","SPIPE","SRCH","SRMNT","STALE","STRPIPE","SYNC","TIME","TIMEDOUT","TOOBIG","TOOMANYREFS","TXTBSY","UCLEAN","UNATCH","USERS","WOULDBLOCK","XDEV","XFULL","advance","advance","advance_slices","advance_slices","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","complement","complement","complement","contains","contains","contains","deref","deref","deref_mut","difference","difference","difference","dup","dup2","dup3","empty","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","fcntl_dupfd_cloexec","fcntl_getfd","fcntl_setfd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_io_error","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_raw_os_error","hash","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into_iter","into_iter","into_iter","ioctl_fionbio","ioctl_fionread","is_all","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","iter_names","kind","new","new","not","not","not","pread","preadv","preadv2","provide","pwrite","pwritev","pwritev2","raw_os_error","read","readv","remove","remove","remove","retry_on_intr","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","write","writev","Action","BRKINT","BS0","BS1","BSDLY","CLOCAL","CMSPAR","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","ControlModes","Drain","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","EXTPROC","FF0","FF1","FFDLY","FLUSHO","Flush","HUPCL","ICANON","ICRNL","IEXTEN","IFlush","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INLCR","INPCK","IOFlush","IOff","IOn","ISIG","ISTRIP","IUCLC","IUTF8","IXANY","IXOFF","IXON","InputModes","LocalModes","NL0","NL1","NLDLY","NOFLSH","Now","OCRNL","OFDEL","OFILL","OFlush","OLCUC","ONLCR","ONLRET","ONOCR","OOff","OOn","OPOST","OptionalActions","OutputModes","PARENB","PARMRK","PARODD","PENDIN","QueueSelector","SpecialCodeIndex","SpecialCodes","TAB0","TAB1","TAB2","TAB3","TABDLY","TOSTOP","Termios","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","Winsize","XCASE","XTABS","all","all","all","all","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","contains","contains","contains","contains","control_modes","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","hash","hash","hash","hash","hash","hash","hash","index","index_mut","input_modes","input_speed","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","ioctl_tiocexcl","ioctl_tiocnxcl","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","isatty","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","line_discipline","local_modes","make_raw","not","not","not","not","output_modes","output_speed","remove","remove","remove","remove","set","set","set","set","set_input_speed","set_output_speed","set_speed","special_codes","speed","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tcdrain","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcgetwinsize","tcsendbreak","tcsetattr","tcsetpgrp","tcsetwinsize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600"],"q":[[0,"rustix"],[5,"rustix::fd"],[58,"rustix::ffi"],[163,"rustix::io"],[542,"rustix::termios"],[971,"rustix::termios::speed"]],"d":["A macro for <code>CStr</code> literals.","Export the <code>*Fd</code> types and traits that are used in rustix’…","Utilities related to FFI bindings.","I/O operations.","Terminal I/O stream operations.","A trait to borrow the file descriptor from an underlying …","A trait to extract the raw file descriptor from an …","A borrowed file descriptor.","A trait to express the ability to construct an object from …","A trait to express the ability to consume an object and …","An owned file descriptor.","Raw file descriptors.","Borrows the file descriptor.","","","Extracts the raw file descriptor.","","","","","","","Return a <code>BorrowedFd</code> holding the given raw file descriptor.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Constructs a new instance of <code>Self</code> from the given raw file …","Constructs a new instance of <code>Self</code> from the given raw file …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this object, returning the raw underlying file …","","","","","Creates a new <code>OwnedFd</code> instance that shares the same …","Creates a new <code>OwnedFd</code> instance that shares the same …","","","","","","","Representation of a borrowed C string.","A type representing an owned, C-compatible, nul-terminated …","An error indicating that a nul byte was not in the …","An error indicating that an interior nul byte was found.","Returns the contents of this <code>CString</code> as a slice of bytes.","Equivalent to <code>CString::as_bytes()</code> except that the returned …","Extracts a <code>CStr</code> slice containing the entire string.","Returns the inner pointer to this C string.","","","","","","","","","","","","Equivalent to C’s <code>char</code> type.","","","","","","","","","","Creates an empty <code>CString</code>.","","","","","","","","","","","","","","","","","","","","Converts a Vec&lt;NonZeroU8&gt; into a <code>CString</code> without copying …","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …","Returns the argument unchanged.","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a C string wrapper from a byte slice.","Creates a C string wrapper from a byte slice.","Unsafely creates a C string wrapper from a byte slice.","Wraps a raw C string with a safe C string wrapper.","Retakes ownership of a <code>CString</code> that was transferred to C …","Creates a C-compatible string by consuming a byte vector, …","Attempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.","Converts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>CString</code> into a boxed <code>CStr</code>.","Consumes the <code>CString</code> and returns the underlying byte …","Equivalent to <code>CString::into_bytes()</code> except that the …","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Consumes the <code>CString</code> and transfers ownership of the string …","Converts the <code>CString</code> into a <code>String</code> if it contains valid …","Consumes this error, returning the underlying vector of …","Returns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.","Creates a new C-compatible string from a container of …","Returns the position of the nul byte in the slice that …","","","","","Converts this C string to a byte slice.","Converts this C string to a byte slice containing the …","","","","","Yields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.","","","Converts a <code>CStr</code> into a Cow&lt;str&gt;.","","","","","","","","","","","<code>EACCES</code>","<code>EADDRINUSE</code>","<code>EADDRNOTAVAIL</code>","<code>EADV</code>","<code>EAFNOSUPPORT</code>","<code>EAGAIN</code>","<code>EALREADY</code>","<code>RWF_APPEND</code> (since Linux 4.16)","<code>EBADE</code>","<code>EBADF</code>","<code>EBADFD</code>","<code>EBADMSG</code>","<code>EBADR</code>","<code>EBADRQC</code>","<code>EBADSLT</code>","<code>EBFONT</code>","<code>EBUSY</code>","<code>ECANCELED</code>","<code>ECHILD</code>","<code>ECHRNG</code>","<code>FD_CLOEXEC</code>","<code>O_CLOEXEC</code>","<code>ECOMM</code>","<code>ECONNABORTED</code>","<code>ECONNREFUSED</code>","<code>ECONNRESET</code>","<code>EDEADLK</code>","<code>EDEADLOCK</code>","<code>EDESTADDRREQ</code>","<code>EDOM</code>","<code>EDOTDOT</code>","<code>EDQUOT</code>","<code>RWF_DSYNC</code> (since Linux 4.7)","<code>O_*</code> constants for use with <code>dup2</code>.","<code>EEXIST</code>","<code>errno</code>—An error code.","<code>EFAULT</code>","<code>EFBIG</code>","<code>FD_*</code> constants for use with <code>fcntl_getfd</code> and <code>fcntl_setfd</code>.","<code>RWF_HIPRI</code> (since Linux 4.6)","<code>EHOSTDOWN</code>","<code>EHOSTUNREACH</code>","<code>EHWPOISON</code>","<code>EIDRM</code>","<code>EILSEQ</code>","<code>EINPROGRESS</code>","<code>EINTR</code>.","<code>EINVAL</code>","<code>EIO</code>","<code>EISCONN</code>","<code>EISDIR</code>","<code>EISNAM</code>","A buffer type used with <code>Write::write_vectored</code>.","A buffer type used with <code>Read::read_vectored</code>.","<code>EKEYEXPIRED</code>","<code>EKEYREJECTED</code>","<code>EKEYREVOKED</code>","<code>EL2HLT</code>","<code>EL2NSYNC</code>","<code>EL3HLT</code>","<code>EL3RST</code>","<code>ELIBACC</code>","<code>ELIBBAD</code>","<code>ELIBEXEC</code>","<code>ELIBMAX</code>","<code>ELIBSCN</code>","<code>ELNRNG</code>","<code>ELOOP</code>","<code>EMEDIUMTYPE</code>","<code>EMFILE</code>","<code>EMLINK</code>","<code>EMSGSIZE</code>","<code>EMULTIHOP</code>","<code>ENAMETOOLONG</code>","<code>ENAVAIL</code>","<code>ENETDOWN</code>","<code>ENETRESET</code>","<code>ENETUNREACH</code>","<code>ENFILE</code>","<code>ENOANO</code>","<code>ENOBUFS</code>","<code>ENOCSI</code>","<code>ENODATA</code>","<code>ENODEV</code>","<code>ENOENT</code>","<code>ENOEXEC</code>","<code>ENOKEY</code>","<code>ENOLCK</code>","<code>ENOLINK</code>","<code>ENOMEDIUM</code>","<code>ENOMEM</code>","<code>ENOMSG</code>","<code>ENONET</code>","<code>ENOPKG</code>","<code>ENOPROTOOPT</code>","<code>ENOSPC</code>","<code>ENOSR</code>","<code>ENOSTR</code>","<code>ENOSYS</code>","<code>ENOTBLK</code>","<code>ENOTCONN</code>","<code>ENOTDIR</code>","<code>ENOTEMPTY</code>","<code>ENOTNAM</code>","<code>ENOTRECOVERABLE</code>","<code>ENOTSOCK</code>","<code>ENOTSUP</code>","<code>ENOTTY</code>","<code>ENOTUNIQ</code>","<code>RWF_NOWAIT</code> (since Linux 4.14)","<code>ENXIO</code>","<code>EOPNOTSUPP</code>","<code>EOVERFLOW</code>","<code>EOWNERDEAD</code>","<code>EPERM</code>","<code>EPFNOSUPPORT</code>","<code>EPIPE</code>","<code>EPROTO</code>","<code>EPROTONOSUPPORT</code>","<code>EPROTOTYPE</code>","<code>ERANGE</code>","<code>EREMCHG</code>","<code>EREMOTE</code>","<code>EREMOTEIO</code>","<code>ERESTART</code>","<code>ERFKILL</code>","<code>EROFS</code>","<code>RWF_*</code> constants for use with <code>preadv2</code> and <code>pwritev2</code>.","A specialized <code>Result</code> type for <code>rustix</code> APIs.","<code>ESHUTDOWN</code>","<code>ESOCKTNOSUPPORT</code>","<code>ESPIPE</code>","<code>ESRCH</code>","<code>ESRMNT</code>","<code>ESTALE</code>","<code>ESTRPIPE</code>","<code>RWF_SYNC</code> (since Linux 4.7)","<code>ETIME</code>","<code>ETIMEDOUT</code>","<code>E2BIG</code>","<code>ETOOMANYREFS</code>","<code>ETXTBSY</code>","<code>EUCLEAN</code>","<code>EUNATCH</code>","<code>EUSERS</code>","<code>EWOULDBLOCK</code>","<code>EXDEV</code>","<code>EXFULL</code>","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance a slice of slices.","Advance a slice of slices.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","","Returns the raw value of the flags currently stored.","","Returns the raw value of the flags currently stored.","","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","<code>close(raw_fd)</code>—Closes a <code>RawFd</code> directly.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","<code>dup(fd)</code>—Creates a new <code>OwnedFd</code> instance that shares the …","<code>dup2(fd, new)</code>—Changes the file description of a file …","<code>dup3(fd, new, flags)</code>—Changes the file description of a …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","<code>fcntl(fd, F_DUPFD_CLOEXEC)</code>—Creates a new <code>OwnedFd</code> …","<code>fcntl(fd, F_GETFD)</code>—Returns a file descriptor’s flags.","<code>fcntl(fd, F_SETFD, flags)</code>—Sets a file descriptor’s …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","Convert from underlying bit representation, preserving all …","","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Extract an <code>Errno</code> value from a <code>std::io::Error</code>.","","","","Get the value for a flag from its stringified name.","Get the value for a flag from its stringified name.","Get the value for a flag from its stringified name.","Construct an <code>Errno</code> from a raw OS error number.","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","<code>ioctl(fd, FIONBIO, &amp;value)</code>—Enables or disables …","<code>ioctl(fd, FIONREAD)</code>—Returns the number of bytes ready to …","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Iterate over enabled flag values.","Iterate over enabled flag values.","Iterate over enabled flag values.","Iterate over enabled flag values with their stringified …","Iterate over enabled flag values with their stringified …","Iterate over enabled flag values with their stringified …","Shorthand for <code>std::io::Error::from(self).kind()</code>.","Creates a new <code>IoSliceMut</code> wrapping a byte slice.","Creates a new <code>IoSlice</code> wrapping a byte slice.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","<code>pread(fd, buf, offset)</code>—Reads from a file at a given …","<code>preadv(fd, bufs, offset)</code>—Reads from a file at a given …","<code>preadv2(fd, bufs, offset, flags)</code>—Reads data, with …","","<code>pwrite(fd, bufs)</code>—Writes to a file at a given position.","<code>pwritev(fd, bufs, offset)</code>—Writes to a file at a given …","<code>pwritev2(fd, bufs, offset, flags)</code>—Writes data, with …","Extract the raw OS error number from this error.","<code>read(fd, buf)</code>—Reads from a stream.","<code>readv(fd, bufs)</code>—Reads from a stream into multiple …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Call <code>f</code> until it either succeeds or fails other than …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","<code>write(fd, buf)</code>—Writes to a stream.","<code>writev(fd, bufs)</code>—Writes to a stream from multiple …","<code>TC*</code> values for use with <code>tcflow</code>.","<code>BRKINT</code>","<code>BS0</code>","<code>BS1</code>","<code>BSDLY</code>","<code>CLOCAL</code>","<code>CMSPAR</code>","<code>CR0</code>","<code>CR1</code>","<code>CR2</code>","<code>CR3</code>","<code>CRDLY</code>","<code>CREAD</code>","<code>CRTSCTS</code>","<code>CS5</code>","<code>CS6</code>","<code>CS7</code>","<code>CS8</code>","<code>CSIZE</code>","<code>CSTOPB</code>","Flags controlling special terminal modes.","<code>TCSADRAIN</code>—Make the change after all output has been …","<code>ECHO</code>","<code>ECHOCTL</code>","<code>ECHOE</code>","<code>ECHOK</code>","<code>ECHOKE</code>","<code>ECHONL</code>","<code>ECHOPRT</code>","<code>EXTPROC</code>","<code>FF0</code>","<code>FF1</code>","<code>FFDLY</code>","<code>FLUSHO</code>","<code>TCSAFLUSH</code>—Discard any pending input and then make the …","<code>HUPCL</code>","<code>ICANON</code>—A flag for the <code>c_lflag</code> field of <code>Termios</code> indicating","<code>ICRNL</code>","<code>IEXTEN</code>","<code>TCIFLUSH</code>—Flush data received but not read.","<code>IGNBRK</code>","<code>IGNCR</code>","<code>IGNPAR</code>","<code>IMAXBEL</code>","<code>INLCR</code>","<code>INPCK</code>","<code>TCIOFLUSH</code>—<code>IFlush</code> and <code>OFlush</code> combined.","<code>TCIOFF</code>—Transmits a STOP byte.","<code>TCION</code>—Transmits a START byte.","<code>ISIG</code>","<code>ISTRIP</code>","<code>IUCLC</code>","<code>IUTF8</code>","<code>IXANY</code>","<code>IXOFF</code>","<code>IXON</code>","Flags controlling terminal input.","Flags controlling “local” terminal modes.","<code>NL0</code>","<code>NL1</code>","<code>NLDLY</code>","<code>NOFLSH</code>","<code>TCSANOW</code>—Make the change immediately.","<code>OCRNL</code>","<code>OFDEL</code>","<code>OFILL</code>","<code>TCOFLUSH</code>—Flush data written but not transmitted.","<code>OLCUC</code>","<code>ONLCR</code>","<code>ONLRET</code>","<code>ONOCR</code>","<code>TCOOFF</code>—Suspend output.","<code>TCOON</code>—Restart suspended output.","<code>OPOST</code>","<code>TCSA*</code> values for use with <code>tcsetattr</code>.","Flags controlling terminal output.","<code>PARENB</code>","<code>PARMRK</code>","<code>PARODD</code>","<code>PENDIN</code>","<code>TC*</code> values for use with <code>tcflush</code>.","Indices for use with <code>Termios::special_codes</code>.","An array indexed by <code>SpecialCodeIndex</code> indicating the …","<code>TAB0</code>","<code>TAB1</code>","<code>TAB2</code>","<code>TAB3</code>","<code>TABDLY</code>","<code>TOSTOP</code>","<code>struct termios</code> for use with <code>tcgetattr</code> and <code>tcsetattr</code>.","<code>VDISCARD</code>","<code>VEOF</code>","<code>VEOL</code>","<code>VEOL2</code>","<code>VERASE</code>","<code>VINTR</code>","<code>VKILL</code>","<code>VLNEXT</code>","<code>VMIN</code>","<code>VQUIT</code>","<code>VREPRINT</code>","<code>VSTART</code>","<code>VSTOP</code>","<code>VSUSP</code>","<code>VSWTC</code>","<code>VT0</code>","<code>VT1</code>","<code>VTDLY</code>","<code>VTIME</code>","<code>VWERASE</code>","<code>struct winsize</code> for use with <code>tcgetwinsize</code>.","<code>XCASE</code>","<code>XTABS</code>","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","Returns the raw value of the flags currently stored.","","","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Low-level configuration flags.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","","Convert from underlying bit representation, preserving all …","","Convert from underlying bit representation, preserving all …","","Convert from underlying bit representation, preserving all …","","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","","","","","Get the value for a flag from its stringified name.","Get the value for a flag from its stringified name.","Get the value for a flag from its stringified name.","Get the value for a flag from its stringified name.","","","","","","","","","","How is input interpreted?","Return the input communication speed.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>ioctl(fd, TIOCEXCL)</code>—Enables exclusive mode on a terminal.","<code>ioctl(fd, TIOCNXCL)</code>—Disables exclusive mode on a …","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","<code>isatty(fd)</code>—Tests whether a file descriptor refers to a …","Iterate over enabled flag values.","Iterate over enabled flag values.","Iterate over enabled flag values.","Iterate over enabled flag values.","Iterate over enabled flag values with their stringified …","Iterate over enabled flag values with their stringified …","Iterate over enabled flag values with their stringified …","Iterate over enabled flag values with their stringified …","Line discipline.","High-level configuration flags.","<code>cfmakeraw(self)</code>—Set a <code>Termios</code> value to the settings for …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","How is output translated?","Return the output communication speed.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the input communication speed.","Set the output communication speed.","Set the input and output communication speeds.","How are various special control codes handled?","Speeds for use with <code>Termios::set_input_speed</code> and …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","<code>tcdrain(fd, duration)</code>—Wait until all pending output has …","<code>tcflow(fd, action)</code>—Suspend or resume transmission or …","<code>tcflush(fd, queue_selector)</code>—Wait until all pending …","<code>tcgetattr(fd)</code>—Get terminal attributes.","<code>tcgetpgrp(fd)</code>—Get the terminal foreground process group.","<code>tcgetsid(fd)</code>—Return the session ID of the current …","<code>tcgetwinsize(fd)</code>—Get the current terminal window size.","<code>tcsendbreak(fd, 0)</code>—Transmit zero-valued bits.","<code>tcsetattr(fd)</code>—Set terminal attributes.","<code>tcsetpgrp(fd, pid)</code>—Set the terminal foreground process …","<code>tcsetwinsize(fd)</code>—Set the current terminal window size.","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","<code>B0</code>","<code>B1000000</code>","<code>B110</code>","<code>B115200</code>","<code>B1152000</code>","<code>B1200</code>","<code>B134</code>","<code>B150</code>","<code>B1500000</code>","<code>B1800</code>","<code>B19200</code>","<code>B200</code>","<code>B2000000</code>","<code>B230400</code>","<code>B2400</code>","<code>B2500000</code>","<code>B300</code>","<code>B3000000</code>","<code>B3500000</code>","<code>B38400</code>","<code>B4000000</code>","<code>B460800</code>","<code>B4800</code>","<code>B50</code>","<code>B500000</code>","<code>B57600</code>","<code>B576000</code>","<code>B600</code>","<code>B75</code>","<code>B921600</code>","<code>B9600</code>"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,55,2,1,77,2,1,2,1,2,1,1,1,1,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,1,78,2,2,1,79,2,2,1,1,2,1,2,1,2,1,2,1,0,0,0,0,21,21,21,24,21,24,21,21,26,24,27,21,26,24,27,0,21,26,27,21,26,24,27,21,24,21,24,21,26,27,21,21,26,24,27,21,26,24,27,21,26,26,24,27,27,21,21,21,21,21,26,27,24,24,24,24,21,21,21,21,21,24,21,24,21,26,27,21,21,21,24,21,21,26,24,21,26,21,24,26,27,24,24,21,26,24,27,24,26,27,24,21,26,27,21,26,27,21,26,24,27,53,53,53,53,53,53,53,50,53,53,53,53,53,53,53,53,53,53,53,53,49,51,53,53,53,53,53,53,53,53,53,53,50,0,53,0,53,53,0,50,53,53,53,53,53,53,53,53,53,53,53,53,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,50,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,53,53,53,53,53,53,53,50,53,53,53,53,53,53,53,53,53,53,53,47,48,47,48,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,49,50,50,51,51,49,50,51,49,50,51,53,49,50,51,47,48,53,49,50,51,47,48,53,49,50,51,48,53,49,50,51,48,0,49,50,51,49,50,51,47,48,47,49,50,51,0,0,0,49,50,51,53,49,50,51,53,49,50,51,49,50,51,0,0,0,53,53,49,49,49,49,49,50,50,50,50,50,51,51,51,51,51,47,48,53,49,50,51,47,48,49,50,51,49,49,50,50,51,51,49,50,51,53,49,50,51,49,50,51,53,53,49,50,51,49,50,51,49,50,51,49,50,51,53,49,50,51,47,48,49,50,51,0,0,49,50,51,49,50,51,49,50,51,49,50,51,53,47,48,49,50,51,0,0,0,53,0,0,0,53,0,0,49,50,51,0,49,50,51,49,50,51,49,50,51,49,50,51,53,49,50,51,48,53,49,50,51,53,49,50,51,47,48,53,49,50,51,47,48,53,49,50,51,47,48,49,50,51,0,0,0,64,65,65,65,66,66,65,65,65,65,65,66,66,66,66,66,66,66,66,0,71,67,67,67,67,67,67,67,67,65,65,65,67,71,66,67,64,67,72,64,64,64,64,64,64,72,73,73,67,64,64,64,64,64,64,0,0,65,65,65,67,71,65,65,65,72,65,65,65,65,73,73,65,0,0,66,64,66,67,0,0,0,65,65,65,65,65,67,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,65,65,65,74,74,0,67,65,64,65,66,67,64,65,66,67,64,65,66,67,64,65,66,67,64,65,66,67,64,64,65,65,66,66,67,67,64,65,66,67,64,65,66,67,74,69,64,65,66,67,70,71,72,73,74,69,64,65,66,67,70,71,72,73,69,64,65,66,67,70,71,72,73,69,64,65,66,67,70,71,72,73,64,65,66,67,64,65,66,67,69,64,65,66,67,64,65,66,67,64,65,66,67,71,72,73,64,65,66,67,71,72,73,64,65,66,67,69,64,64,64,64,64,65,65,65,65,65,66,66,66,66,66,67,67,67,67,67,70,71,72,73,74,69,64,65,66,67,70,71,72,73,64,65,66,67,64,64,65,65,66,66,67,67,64,65,66,67,64,65,66,67,64,65,66,67,64,65,66,67,71,72,73,70,70,69,69,64,65,66,67,64,65,66,67,64,65,66,67,74,69,64,65,66,67,70,71,72,73,64,65,66,67,0,0,64,65,66,67,64,65,66,67,0,64,65,66,67,64,65,66,67,69,69,69,64,65,66,67,69,69,64,65,66,67,64,65,66,67,69,69,69,69,0,64,65,66,67,64,65,66,67,64,65,66,67,0,0,0,0,0,0,0,0,0,0,0,69,64,65,66,67,70,71,72,73,64,65,66,67,74,69,64,65,66,67,70,71,72,73,74,69,64,65,66,67,70,71,72,73,74,69,64,65,66,67,70,71,72,73,64,65,66,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[1,1],[[],3],[2,3],[1,3],[[]],[[]],[[]],[[]],[3,1],[1,1],[[]],[2],[[2,4],[[6,[5]]]],[[1,4],[[6,[5]]]],[7,2],[[]],[8,2],[9,2],[10,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[[]],[3],[3,2],[[]],[[]],[[],3],[2,3],[2,18],[1,18],[[]],[2,[[6,[2,19]]]],[1,[[6,[2,19]]]],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],0,0,0,0,[21,[[23,[22]]]],[21,[[23,[22]]]],[21,24],[24,25],[21,24],[24,24],[[]],[21,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[21,21],[26,26],[27,27],[[]],[[]],[[24,21]],[[]],[[21,21],28],[[24,24],28],[[],21],[[],24],[21,24],[26,29],[27,29],[21],[[21,21],18],[[26,26],18],[[24,24],18],[[27,27],18],[[],18],[[],18],[[],18],[[],18],[[21,4],[[6,[5]]]],[[26,4],[[6,[5]]]],[[26,4],[[6,[5]]]],[[24,4],[[6,[5]]]],[[27,4],[[6,[5]]]],[[27,4],[[6,[5]]]],[[[32,[30,31]]],21],[[[33,[24]]],21],[[]],[[[34,[24,31]]],21],[24,21],[[]],[[]],[[[23,[22]]],[[6,[24,35]]]],[[[23,[22]]],[[6,[24,27]]]],[[[23,[22]]],24],[25,24],[25,21],[[[32,[22,31]]],21],[[[32,[22,31]]],[[6,[21,36]]]],[[[32,[22,31]]],21],[[21,37]],[[24,37]],[[21,38],24],[[24,[40,[39]]],24],[[]],[[]],[[]],[21,[[34,[24,31]]]],[21,[[32,[22,31]]]],[21,[[32,[22,31]]]],[[[34,[24,31]]],21],[21,25],[21,[[6,[41,42]]]],[26,[[32,[22,31]]]],[24,18],[[[43,[[32,[22,31]]]]],[[6,[21,26]]]],[26,39],[[21,21],[[44,[28]]]],[[24,24],[[44,[28]]]],[45],[45],[24,[[23,[22]]]],[24,[[23,[22]]]],[[]],[[]],[24,21],[[]],[24,[[6,[29,46]]]],[[],41],[[],41],[24,[[33,[29]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,39]],[[48,39]],[[[23,[47]],39]],[[[23,[48]],39]],[[],49],[[],50],[[],51],[[49,49],49],[[50,50],50],[[51,51],51],[[49,49]],[[50,50]],[[51,51]],[[49,49],49],[[50,50],50],[[51,51],51],[[49,49]],[[50,50]],[[51,51]],[49,52],[49,52],[50,52],[50,52],[51,52],[51,52],[[49,49],49],[[50,50],50],[[51,51],51],[[49,49]],[[50,50]],[[51,51]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,53],[49,49],[50,50],[51,51],[48,48],[[]],[[]],[[]],[[]],[[]],[54],[49,49],[50,50],[51,51],[[49,49],18],[[50,50],18],[[51,51],18],[47,[[23,[22]]]],[48,[[23,[22]]]],[47,[[23,[22]]]],[[49,49],49],[[50,50],50],[[51,51],51],[55,[[56,[2]]]],[[55,2],56],[[55,2,51],56],[[],49],[[],50],[[],51],[[53,53],18],[[49,49],18],[[50,50],18],[[51,51],18],[[],18],[[],18],[[],18],[[],18],[[49,57]],[[50,57]],[[51,57]],[[55,54],[[56,[2]]]],[55,[[56,[49]]]],[[55,49],56],[[53,4],58],[[53,4],58],[[49,4],58],[[49,4],58],[[49,4],58],[[49,4],58],[[49,4],58],[[50,4],58],[[50,4],58],[[50,4],58],[[50,4],58],[[50,4],58],[[51,4],58],[[51,4],58],[[51,4],58],[[51,4],58],[[51,4],58],[[47,4],[[6,[5]]]],[[48,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[52,[[44,[49]]]],[52,[[44,[50]]]],[52,[[44,[51]]]],[52,49],[52,49],[52,50],[52,50],[52,51],[52,51],[52,49],[52,50],[52,51],[19,[[44,[53]]]],[57,49],[57,50],[57,51],[29,[[44,[49]]]],[29,[[44,[50]]]],[29,[[44,[51]]]],[3,53],[[53,37]],[[49,37]],[[50,37]],[[51,37]],[[49,49]],[[50,50]],[[51,51]],[[49,49],49],[[50,50],50],[[51,51],51],[[49,49],18],[[50,50],18],[[51,51],18],[[]],[[]],[[]],[[]],[[]],[[]],[49],[50],[51],[[55,18],56],[55,[[56,[59]]]],[49,18],[50,18],[51,18],[49,18],[50,18],[51,18],[49,[[60,[49]]]],[50,[[60,[50]]]],[51,[[60,[51]]]],[49,[[61,[49]]]],[50,[[61,[50]]]],[51,[[61,[51]]]],[53,62],[[[23,[22]]],47],[[[23,[22]]],48],[49,49],[50,50],[51,51],[[55,[23,[22]],59],[[56,[39]]]],[[55,[23,[47]],59],[[56,[39]]]],[[55,[23,[47]],59,50],[[56,[39]]]],[45],[[55,[23,[22]],59],[[56,[39]]]],[[55,[23,[48]],59],[[56,[39]]]],[[55,[23,[48]],59,50],[[56,[39]]]],[53,3],[[55,[23,[22]]],[[56,[39]]]],[[55,[23,[47]]],[[56,[39]]]],[[49,49]],[[50,50]],[[51,51]],[63,56],[[49,49,18]],[[50,50,18]],[[51,51,18]],[[49,49],49],[[50,50],50],[[51,51],51],[[49,49]],[[50,50]],[[51,51]],[[49,49],49],[[50,50],50],[[51,51],51],[[]],[[]],[[]],[[]],[[]],[[],41],[[49,49]],[[50,50]],[[51,51]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[49,49],49],[[50,50],50],[[51,51],51],[[55,[23,[22]]],[[56,[39]]]],[[55,[23,[48]]],[[56,[39]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],64],[[],65],[[],66],[[],67],[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],[[64,64]],[[65,65]],[[66,66]],[[67,67]],[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],[[64,64]],[[65,65]],[[66,66]],[[67,67]],[64,68],[64,68],[65,68],[65,68],[66,68],[66,68],[67,68],[67,68],[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],[[64,64]],[[65,65]],[[66,66]],[[67,67]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[64,64],[65,65],[66,66],[67,67],[70,70],[71,71],[72,72],[73,73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[65,65],[66,66],[67,67],[[64,64],18],[[65,65],18],[[66,66],18],[[67,67],18],0,[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],[[],64],[[],65],[[],66],[[],67],[[64,64],18],[[65,65],18],[[66,66],18],[[67,67],18],[[71,71],18],[[72,72],18],[[73,73],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[64,57]],[[65,57]],[[66,57]],[[67,57]],[[69,4],58],[[64,4],58],[[64,4],58],[[64,4],58],[[64,4],58],[[64,4],58],[[65,4],58],[[65,4],58],[[65,4],58],[[65,4],58],[[65,4],58],[[66,4],58],[[66,4],58],[[66,4],58],[[66,4],58],[[66,4],58],[[67,4],58],[[67,4],58],[[67,4],58],[[67,4],58],[[67,4],58],[[70,4],58],[[71,4],58],[[72,4],58],[[73,4],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,[[44,[64]]]],[68,[[44,[65]]]],[68,[[44,[66]]]],[68,[[44,[67]]]],[68,64],[68,64],[68,65],[68,65],[68,66],[68,66],[68,67],[68,67],[68,64],[68,65],[68,66],[68,67],[57,64],[57,65],[57,66],[57,67],[29,[[44,[64]]]],[29,[[44,[65]]]],[29,[[44,[66]]]],[29,[[44,[67]]]],[[64,37]],[[65,37]],[[66,37]],[[67,37]],[[71,37]],[[72,37]],[[73,37]],[[70,74]],[[70,74]],0,[69,75],[[64,64]],[[65,65]],[[66,66]],[[67,67]],[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],[[64,64],18],[[65,65],18],[[66,66],18],[[67,67],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64],[65],[66],[67],[55,56],[55,56],[64,18],[65,18],[66,18],[67,18],[64,18],[65,18],[66,18],[67,18],[55,18],[64,[[60,[64]]]],[65,[[60,[65]]]],[66,[[60,[66]]]],[67,[[60,[67]]]],[64,[[61,[64]]]],[65,[[61,[65]]]],[66,[[61,[66]]]],[67,[[61,[67]]]],0,0,[69],[64,64],[65,65],[66,66],[67,67],0,[69,75],[[64,64]],[[65,65]],[[66,66]],[[67,67]],[[64,64,18]],[[65,65,18]],[[66,66,18]],[[67,67,18]],[[69,75],56],[[69,75],56],[[69,75],56],0,0,[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],[[64,64]],[[65,65]],[[66,66]],[[67,67]],[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],[55,56],[[55,73],56],[[55,72],56],[55,[[56,[69]]]],[55,[[56,[0]]]],[55,[[56,[0]]]],[55,[[56,[76]]]],[55,56],[[55,71,69],56],0,[[55,76],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,64]],[[65,65]],[[66,66]],[[67,67]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[64,64],64],[[65,65],65],[[66,66],66],[[67,67],67],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"BorrowedFd"],[3,"OwnedFd"],[15,"i32"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"UnixStream"],[3,"ChildStdin"],[3,"UnixListener"],[3,"ChildStderr"],[3,"TcpListener"],[3,"ChildStdout"],[3,"PidFd"],[3,"File"],[3,"UnixDatagram"],[3,"UdpSocket"],[3,"TcpStream"],[15,"bool"],[3,"Error"],[3,"TypeId"],[3,"CString"],[15,"u8"],[15,"slice"],[3,"CStr"],[15,"i8"],[3,"NulError"],[3,"FromBytesWithNulError"],[4,"Ordering"],[15,"str"],[3,"NonZeroU8"],[3,"Global"],[3,"Vec"],[4,"Cow"],[3,"Box"],[3,"FromBytesUntilNulError"],[3,"FromVecWithNulError"],[8,"Hasher"],[3,"RangeFull"],[15,"usize"],[3,"RangeFrom"],[3,"String"],[3,"IntoStringError"],[8,"Into"],[4,"Option"],[3,"Demand"],[3,"Utf8Error"],[3,"IoSliceMut"],[3,"IoSlice"],[3,"FdFlags"],[3,"ReadWriteFlags"],[3,"DupFlags"],[6,"c_uint"],[3,"Errno"],[6,"RawFd"],[8,"AsFd"],[6,"Result"],[8,"IntoIterator"],[6,"Result"],[15,"u64"],[3,"Iter"],[3,"IterNames"],[4,"ErrorKind"],[8,"FnMut"],[3,"InputModes"],[3,"OutputModes"],[3,"ControlModes"],[3,"LocalModes"],[6,"tcflag_t"],[3,"Termios"],[3,"SpecialCodes"],[4,"OptionalActions"],[4,"QueueSelector"],[4,"Action"],[3,"SpecialCodeIndex"],[15,"u32"],[6,"Winsize"],[8,"AsRawFd"],[8,"FromRawFd"],[8,"IntoRawFd"]],"a":{"2big":[302],"acces":[163],"c_cc":[899],"c_cflag":[737],"c_iflag":[832],"c_ispeed":[833,896],"c_lflag":[880],"c_line":[879],"c_oflag":[886],"c_ospeed":[897],"cbaud":[897,898],"cbaudex":[897,898],"cfgetispeed":[833],"cfgetspeed":[833],"cfmakeraw":[881],"cfsetispeed":[896],"cfsetospeed":[897],"cfsetspeed":[898],"cibaud":[896,898],"cibaudex":[896,898],"errno":[198],"exta":[981],"extb":[990],"f_dupfd_cloexec":[394],"f_getfd":[395],"f_setfd":[396],"fionbio":[464],"fionread":[465],"noattr":[245],"tcflsh":[915],"tcgetattr2":[916],"tcgets":[916],"tcgets2":[916],"tciflush":[581],"tcioff":[589],"tcioflush":[588],"tcion":[590],"tcoflush":[608],"tcooff":[613],"tcoon":[614],"tcsadrain":[563],"tcsaflush":[576],"tcsanow":[604],"tcsbrk":[920],"tcsetattr2":[921],"tcsets":[921],"tcsets2":[921],"tcxonc":[914],"tiocexcl":[860],"tiocgpgrp":[917],"tiocgsid":[918],"tiocgwinsz":[919],"tiocnxcl":[861],"tiocspgrp":[922],"tiocswinsz":[923],"winsize":[652]}},\
"ryu":{"doc":"github crates-io docs-rs","t":"DILLLLLLLLLALLLFF","n":["Buffer","Float","borrow","borrow_mut","clone","default","format","format_finite","from","into","new","raw","try_from","try_into","type_id","format32","format64"],"q":[[0,"ryu"],[15,"ryu::raw"]],"d":["Safe API for formatting floating point numbers to text.","A floating point number, f32 or f64, that can be written …","","","","","Print a floating point number into this buffer and return …","Print a floating point number into this buffer and return …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","This is a cheap operation; you don’t need to worry about …","Unsafe functions that mirror the API of the C …","","","","Print f32 to the given buffer and return number of bytes …","Print f64 to the given buffer and return number of bytes …"],"i":[0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0],"f":[0,0,[[]],[[]],[1,1],[[],1],[[1,2],3],[[1,2],3],[[]],[[]],[[],1],0,[[],4],[[],4],[[],5],[[6,7],8],[[9,7],8]],"c":[],"p":[[3,"Buffer"],[8,"Float"],[15,"str"],[4,"Result"],[3,"TypeId"],[15,"f32"],[15,"u8"],[15,"usize"],[15,"f64"]]},\
"serde":{"doc":"Serde","t":"IYIQQQIYQQQQQQQILLLAKKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKOLLAOKKKKKKLKKKKKKKKKKKKKKKKLKKKKKKKNNNIIIIQNIIQQQQQINDININNNNNINCNNNENNNQQQIILLLLLLLLKLKKLKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKLLLKLKLLLLLLLLLKLLLLLLKLKLLLKLKLLKLLLLLLLKLLKLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIQQQQQQQQDQQQQQQQQIIQIQIQIQIQIQIQICLLLLLKKKKKKKKLLLLLLLLLLKKKKKKLLLKKKKKKLLLLLKKKKKLKKKKKKKKKKKKLKKKKKKKKLLLLLL","n":["Deserialize","Deserialize","Deserializer","Error","Error","Ok","Serialize","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serde_if_integer128","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","EnumAccessDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","provide","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":[[0,"serde"],[88,"serde::de"],[266,"serde::de::value"],[1533,"serde::ser"]],"d":["A <strong>data structure</strong> that can be deserialized from any data …","Derive macro available if serde is built with …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Derive macro available if serde is built with …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Conditional compilation depending on whether Serde is …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A deserializer holding an <code>EnumAccess</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,0,5,11,11,0,0,11,11,11,11,11,11,11,0,11,11,11,0,33,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,11,0,0,22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,28,28,28,0,0,0,0,79,28,0,0,5,41,40,39,80,0,28,0,0,28,0,28,28,28,28,28,0,28,0,28,28,28,0,28,28,28,34,6,39,0,0,27,28,27,28,27,28,27,28,37,27,33,34,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,37,27,28,6,27,31,31,27,27,28,28,27,28,27,28,79,37,37,37,5,37,80,80,41,41,40,40,40,40,40,40,41,40,80,27,28,28,27,28,27,28,80,27,28,80,37,37,0,39,39,6,27,6,6,6,6,27,6,6,27,6,6,27,6,27,6,6,6,27,6,6,27,6,27,6,27,6,27,6,27,6,27,6,6,27,6,6,6,27,6,6,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,53,53,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,53,42,43,44,45,46,47,48,49,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,52,52,52,53,52,52,69,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,43,44,45,46,47,71,0,11,81,82,83,84,85,86,87,0,11,81,82,83,84,85,86,87,0,0,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,78,78,11,11,11,77,81,82,83,84,85,86,87,78,78,78,78,78,78,78,78,78,11,22,11,11,11,81,82,78,78,85,11,11,83,84,86,87,78,78,78,78,11,11,11,11,11,85,78,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,85,78,86,87,78,78,78],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[[0,[3,4]]],2],0,[5,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],0,[[],10],[[],10],0,0,[11,2],[10,2],[[[8,[12]]],2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[27,27],[28,28],[[]],[[]],[3],[[],27],[5,2],[5,2],[5,[[2,[27]]]],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[7],[[27,27],10],[[28,28],10],[29,30],[[27,29],30],[29,30],[[31,29],30],[29,[[2,[32]]]],[[27,29],30],[[28,29],30],[[28,29],30],[[]],[[]],[[]],[[]],[[]],[[9,31]],[[28,31]],[[28,31]],[[],10],[7],[[],[[2,[33]]]],[34,2],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[21]]]],[[34,34],[[2,[21]]]],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[33]]]],[34,2],[[],[[21,[9]]]],[[],[[21,[9]]]],[[[8,[7]],6],2],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[9,6],2],[[],36],[[],36],[[],2],[[7,[8,[7]]]],[[7,[8,[7]]]],0,[[],2],[34,2],[10,[[2,[37]]]],[[27,10],2],[[[8,[12]]],[[2,[37]]]],[7,[[2,[37]]]],[[[38,[12]]],[[2,[37]]]],[[[8,[12]]],[[2,[37]]]],[[27,[8,[12]]],[[2,[37]]]],[13,[[2,[37]]]],[39,2],[[27,39],2],[14,[[2,[37]]]],[15,[[2,[37]]]],[[27,15],2],[16,[[2,[37]]]],[[27,16],2],[17,[[2,[37]]]],[18,[[2,[37]]]],[19,[[2,[37]]]],[[27,19],2],[20,[[2,[37]]]],[40,2],[[27,40],2],[5,2],[[27,5],2],[[],[[2,[37]]]],[27,2],[41,2],[[27,41],2],[5,2],[[27,5],2],[7,[[2,[37]]]],[[27,7],[[2,[37]]]],[35,[[2,[37]]]],[24,[[2,[37]]]],[[27,24],2],[25,[[2,[37]]]],[23,[[2,[37]]]],[26,[[2,[37]]]],[[27,26],2],[12,[[2,[37]]]],[[],[[2,[37]]]],[27,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[[[52,[[0,[50,51]]]]],[[52,[[0,[50,51]]]]]],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[[69,[51,51]]],[[69,[51,51]]]],[[[70,[51]]],[[70,[51]]]],[[[71,[51]]],[[71,[51]]]],[[[72,[51]]],[[72,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,53],[3,53],[53,7],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],9,6],2],[[[43,[37]],9,6],2],[[[44,[37]],9,6],2],[[[45,[37]],9,6],2],[[[46,[37]],9,6],2],[[[47,[37]],9,6],2],[[[48,[37]],9,6],2],[[[49,[37]],9,6],2],[[[52,[50,37]],9,6],2],[[[54,[37]],9,6],2],[[[55,[37]],9,6],2],[[[56,[37]],9,6],2],[[[57,[37]],9,6],2],[[[58,[37]],9,6],2],[[[59,[37]],9,6],2],[[[60,[37]],9,6],2],[[[61,[37]],9,6],2],[[[62,[37]],9,6],2],[[[63,[37]],9,6],2],[[[64,[37]],9,6],2],[[[65,[37]],9,6],2],[[[66,[37]],9,6],2],[[[67,[37]],9,6],2],[[[68,[37]],9,6],2],[[[69,[50,37]],9,6],2],[[[70,[41]],9,6],2],[[[71,[40]],9,6],2],[[[72,[39]],9,6],2],[[[42,[37]],7,9,6],2],[[[43,[37]],7,9,6],2],[[[44,[37]],7,9,6],2],[[[45,[37]],7,9,6],2],[[[46,[37]],7,9,6],2],[[[47,[37]],7,9,6],2],[[[48,[37]],7,9,6],2],[[[49,[37]],7,9,6],2],[[[52,[50,37]],7,9,6],2],[[[54,[37]],7,9,6],2],[[[55,[37]],7,9,6],2],[[[56,[37]],7,9,6],2],[[[57,[37]],7,9,6],2],[[[58,[37]],7,9,6],2],[[[59,[37]],7,9,6],2],[[[60,[37]],7,9,6],2],[[[61,[37]],7,9,6],2],[[[62,[37]],7,9,6],2],[[[63,[37]],7,9,6],2],[[[64,[37]],7,9,6],2],[[[65,[37]],7,9,6],2],[[[66,[37]],7,9,6],2],[[[67,[37]],7,9,6],2],[[[68,[37]],7,9,6],2],[[[69,[50,37]],7,9,6],2],[[[70,[41]],7,9,6],2],[[[71,[40]],7,9,6],2],[[[72,[39]],7,9,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[52,[50,37]]],[[2,[37]]]],[[[69,[50,37]]],[[2,[37]]]],[[53,53],10],[[42,29],30],[[43,29],30],[[44,29],30],[[45,29],30],[[46,29],30],[[47,29],30],[[48,29],30],[[49,29],30],[[[52,[[0,[50,73]]]],29],30],[[53,29],30],[[53,29],30],[[54,29],30],[[55,29],30],[[56,29],30],[[57,29],30],[[58,29],30],[[59,29],30],[[60,29],30],[[61,29],30],[[62,29],30],[[63,29],30],[[64,29],30],[[65,29],30],[[66,29],30],[[67,29],30],[[68,29],30],[[[69,[73]],29],30],[[[70,[73]],29],30],[[[71,[73]],29],30],[[[72,[73]],29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[23,43],[7,44],[7,45],[35,46],[[[74,[7]]],47],[[[8,[12]]],48],[[[8,[12]]],49],[50,[[52,[50]]]],[10,54],[20,55],[17,56],[18,57],[19,58],[75,59],[12,60],[25,61],[26,62],[9,63],[14,64],[15,65],[13,66],[16,67],[24,68],[50,[[69,[50]]]],[[],70],[[],71],[[],72],[[[52,[50,37]],34],[[2,[21]]]],[[[69,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34,34],[[2,[21]]]],[[[52,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34],2],[76],[[[52,[50,37]]],[[21,[9]]]],[[[52,[50,37]]],[[21,[9]]]],[[[69,[50,37]]],[[21,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[43,[37]],34],2],[[[44,[37]],34],2],[[[45,[37]],34],2],[[[46,[37]],34],2],[[[47,[37]],34],2],[[[71,[40]],34],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,2],[1,2],[[[0,[3,4]]],2],[3],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[[78,[77]]],[[2,[77]]]],[[]],[[]],[[],10],[11,2],[10,2],[[[8,[12]]],2],[13,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[0,[22,4]],[0,[22,4]]],2],[14,2],[15,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[[78,[77]],7,[0,[22,4]]],[[2,[77]]]],[[[78,[77]],7,[0,[22,4]]],[[2,[77]]]],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[16,2],[17,2],[18,2],[19,2],[20,2],[[[0,[22,4]]],2],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],[[[0,[22,4]]],2],[[[78,[77]],[0,[22,4]]],[[2,[77]]]],[7,2],[7,2],[[],2],[[],2],[[],36]],"c":[],"p":[[8,"IntoIterator"],[4,"Result"],[8,"Display"],[8,"Sized"],[8,"Deserializer"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"usize"],[15,"bool"],[8,"Serializer"],[15,"u8"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[8,"Serialize"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[3,"IgnoredAny"],[4,"Unexpected"],[3,"Formatter"],[6,"Result"],[8,"Expected"],[3,"Error"],[8,"Deserialize"],[8,"DeserializeSeed"],[3,"String"],[3,"TypeId"],[8,"Error"],[3,"Vec"],[8,"EnumAccess"],[8,"MapAccess"],[8,"SeqAccess"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[8,"Iterator"],[8,"Clone"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[3,"EnumAccessDeserializer"],[8,"Debug"],[4,"Cow"],[15,"isize"],[3,"Demand"],[8,"Error"],[3,"Impossible"],[8,"IntoDeserializer"],[8,"VariantAccess"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":"YY","n":["Deserialize","Serialize"],"q":[[0,"serde_derive"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"serde_yaml":{"doc":"github crates-io docs-rs","t":"NDDIDDNNDNGGNDNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLFLFLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFFLLLLLLLLLLLLLLLLLLLLLLAAEIDDDDDDDNDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNIDNNDNGNDNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLFLLLLLLLLLLLLMLLAAFFFF","n":["Bool","Deserializer","Error","Index","Location","Mapping","Mapping","Null","Number","Number","Result","Sequence","Sequence","Serializer","String","Tagged","Value","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","collect_str","column","custom","custom","default","default","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","end","end","end","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_reader","from_reader","from_slice","from_slice","from_str","from_str","from_value","hash","hash","index","index","index","index_mut","index_mut","into","into","into","into","into","into","into_deserializer","into_inner","into_iter","into_iter","into_iter","into_iter","line","location","mapping","new","newtype_variant_seed","newtype_variant_seed","next","partial_cmp","partial_cmp","provide","serialize","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","source","struct_variant","struct_variant","to_owned","to_owned","to_string","to_string","to_value","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tuple_variant","tuple_variant","type_id","type_id","type_id","type_id","type_id","type_id","unit_variant","unit_variant","value","with","Entry","Index","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Mapping","Occupied","OccupiedEntry","Vacant","VacantEntry","Values","ValuesMut","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","contains_key","entry","from","from","from","from","from","from","from","from","from","from","from","get","get","get_mut","get_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_keys","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","keys","len","len","len","len","len","len","len","len","len","new","next","next","next","next","next","next","next","next","or_insert","or_insert_with","remove","remove","remove_entry","remove_entry","reserve","retain","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","Bool","Index","Mapping","Mapping","Null","Number","Number","Sequence","Sequence","Serializer","String","Tag","Tagged","TaggedValue","Value","apply_merge","as_bool","as_f64","as_f64","as_i64","as_i64","as_mapping","as_mapping_mut","as_null","as_sequence","as_sequence_mut","as_str","as_u64","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_value","get","get_mut","hash","hash","hash","into","into","into","into","is_bool","is_f64","is_f64","is_finite","is_i64","is_i64","is_infinite","is_mapping","is_nan","is_null","is_number","is_sequence","is_string","is_u64","is_u64","new","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","tag","to_owned","to_owned","to_owned","to_string","to_string","to_value","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","variant_seed","variant_seed","singleton_map","singleton_map_recursive","deserialize","serialize","deserialize","serialize"],"q":[[0,"serde_yaml"],[333,"serde_yaml::mapping"],[494,"serde_yaml::value"],[773,"serde_yaml::with"],[775,"serde_yaml::with::singleton_map"],[777,"serde_yaml::with::singleton_map_recursive"]],"d":["Represents a YAML boolean.","A structure that deserializes YAML into Rust values.","An error that happened serializing or deserializing YAML …","A type that can be used to index into a <code>serde_yaml::Value</code>. …","The input location that an error occured.","A YAML mapping in which the keys and values are both …","Represents a YAML mapping in which the keys and values are …","Represents a YAML null value.","Represents a YAML number, whether integer or floating …","Represents a YAML numerical value, whether integer or …","Alias for a <code>Result</code> with the error type <code>serde_yaml::Error</code>.","A YAML sequence in which the elements are <code>serde_yaml::Value</code>…","Represents a YAML sequence in which the elements are …","A structure for serializing Rust values into YAML.","Represents a YAML string.","A representation of YAML’s <code>!Tag</code> syntax, used for enums.","Represents any valid YAML value.","","","","","","","","","","","","","","","","","","The column of the error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare YAML value with bool","","","","","","","","Compare <code>&amp;str</code> with YAML value","","","","","","","Compare YAML value with String","","","","","","","","","","","Compare <code>str</code> with YAML value","","","","","","","","","","","Calls <code>.flush()</code> on the underlying <code>io::Write</code> object.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Convert a slice to <code>Value</code>","Convert a <code>Vec</code> to <code>Value</code>","","","Convert copy-on-write string to <code>Value</code>","Convert string slice to <code>Value</code>","Convert <code>String</code> to <code>Value</code>","","Convert map (with string keys) to <code>Value</code>","","Convert boolean to <code>Value</code>","Returns the argument unchanged.","","","","","","","Convert an iteratable type to a YAML sequence","Deserialize an instance of type <code>T</code> from an IO stream of …","Creates a YAML deserializer from an <code>io::Read</code>.","Deserialize an instance of type <code>T</code> from bytes of YAML text.","Creates a YAML deserializer from a <code>&amp;[u8]</code>.","Deserialize an instance of type <code>T</code> from a string of YAML …","Creates a YAML deserializer from a <code>&amp;str</code>.","Interpret a <code>serde_yaml::Value</code> as an instance of type <code>T</code>.","","","The byte index of the error","","Index into a <code>serde_yaml::Value</code> using the syntax <code>value[0]</code> or","","Write into a <code>serde_yaml::Value</code> using the syntax …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Unwrap the underlying <code>io::Write</code> object from the <code>Serializer</code>.","","","","","The line of the error","Returns the Location from the error if one exists.","A YAML mapping and its iterator types.","Creates a new YAML serializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize the given data structure as a String of YAML.","","Convert a <code>T</code> into <code>serde_yaml::Value</code> which is an enum that …","Serialize the given data structure as YAML into the IO …","","","","","","","","","","","","","","","","","","","","","","","The Value enum, a loosely typed way of representing any …","Customizations to use with Serde’s <code>#[serde(with = …)]</code> …","Entry for an existing key-value pair or a vacant location …","A type that can be used to index into a <code>serde_yaml::Mapping</code>…","Iterator over <code>serde_yaml::Mapping</code> by value.","Iterator of the keys of a <code>serde_yaml::Mapping</code>.","Iterator of the values of a <code>serde_yaml::Mapping</code>.","Iterator over <code>&amp;serde_yaml::Mapping</code>.","Iterator over <code>&amp;mut serde_yaml::Mapping</code>.","Iterator of the keys of a <code>&amp;serde_yaml::Mapping</code>.","A YAML mapping in which the keys and values are both …","Existing slot with equivalent key.","A view into an occupied entry in a <code>Mapping</code>. It is part of …","Vacant slot (no equivalent key in the map).","A view into a vacant entry in a <code>Mapping</code>. It is part of the …","Iterator of the values of a <code>&amp;serde_yaml::Mapping</code>.","Iterator of the values of a <code>&amp;mut serde_yaml::Mapping</code>.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","","","Returns the maximum number of key-value pairs the map can …","Clears the map of all key-value pairs.","Checks if the map contains the given key.","Gets the given key’s corresponding entry in the map for …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the value in the entry.","Returns the value corresponding to the key in the map.","Gets a mutable reference to the value in the entry.","Returns the mutable reference corresponding to the key in …","Sets the value of the entry with the <code>OccupiedEntry</code>’s …","Sets the value of the entry with the VacantEntry’s key, …","Inserts a key-value pair into the map. If the key already …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Takes ownership of the key, leaving the entry vacant.","Return an owning iterator over the keys of the map.","Converts the entry into a mutable reference to its value.","Return an owning iterator over the values of the map.","Returns whether the map is currently empty.","Returns a double-ended iterator visiting all key-value …","Returns a double-ended iterator visiting all key-value …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Return an iterator over the keys of the map.","","","","","","","","","Returns the number of key-value pairs in the map.","Creates an empty YAML map.","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Takes the value of the entry out of the map, and returns …","Removes and returns the value corresponding to the key …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair.","Reserves capacity for at least <code>additional</code> more elements to …","Scan through each key-value pair in the map and keep those …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator over the values of the map.","Return an iterator over mutable references to the values …","Creates an empty YAML map with the given initial capacity.","Represents a YAML boolean.","A type that can be used to index into a <code>serde_yaml::Value</code>. …","A YAML mapping in which the keys and values are both …","Represents a YAML mapping in which the keys and values are …","Represents a YAML null value.","Represents a YAML number, whether integer or floating …","Represents a YAML numerical value, whether integer or …","A YAML sequence in which the elements are <code>serde_yaml::Value</code>…","Represents a YAML sequence in which the elements are …","Serializer whose output is a <code>Value</code>.","Represents a YAML string.","A representation of YAML’s <code>!Tag</code> syntax, used for enums.","A representation of YAML’s <code>!Tag</code> syntax, used for enums.","A <code>Tag</code> + <code>Value</code> representing a tagged YAML scalar, sequence, …","Represents any valid YAML value.","Performs merging of <code>&lt;&lt;</code> keys into the surrounding mapping.","If the <code>Value</code> is a Boolean, returns the associated bool. …","Represents the number as f64 if possible. Returns None …","If the <code>Value</code> is a number, represent it as f64 if possible. …","If the <code>Number</code> is an integer, represent it as i64 if …","If the <code>Value</code> is an integer, represent it as i64 if …","If the <code>Value</code> is a mapping, return a reference to it if …","If the <code>Value</code> is a mapping, return a reference to it if …","If the <code>Value</code> is a Null, returns (). Returns None otherwise.","If the <code>Value</code> is a sequence, return a reference to it if …","If the <code>Value</code> is a sequence, return a mutable reference to …","If the <code>Value</code> is a String, returns the associated str. …","If the <code>Number</code> is an integer, represent it as u64 if …","If the <code>Value</code> is an integer, represent it as u64 if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Interpret a <code>serde_yaml::Value</code> as an instance of type <code>T</code>.","Index into a YAML sequence or map. A string index can be …","Index into a YAML sequence or map. A string index can be …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the <code>Value</code> is a Boolean. Returns false …","Returns true if the <code>Number</code> can be represented by f64.","Returns true if the <code>Value</code> is a number that can be …","Returns true if this number is neither infinite nor NaN.","Returns true if the <code>Number</code> is an integer between <code>i64::MIN</code> …","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …","Returns true if this value is positive infinity or …","Returns true if the <code>Value</code> is a mapping. Returns false …","Returns true if this value is NaN and false otherwise.","Returns true if the <code>Value</code> is a Null. Returns false …","Returns true if the <code>Value</code> is a Number. Returns false …","Returns true if the <code>Value</code> is a sequence. Returns false …","Returns true if the <code>Value</code> is a String. Returns false …","Returns true if the <code>Number</code> is an integer between zero and …","Returns true if the <code>Value</code> is an integer between <code>u64::MIN</code> …","Create tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a <code>T</code> into <code>serde_yaml::Value</code> which is an enum that …","","","","","","","","","","","","","","","","Serialize/deserialize an enum using a YAML map containing …","Apply <code>singleton_map</code> to <em>all</em> enums contained within the data …","","","",""],"i":[2,0,0,0,0,0,2,2,0,2,0,0,2,0,2,2,0,12,7,4,9,1,2,12,7,4,9,1,2,1,2,1,2,4,9,7,7,1,2,1,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,12,2,2,4,4,4,4,4,4,4,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,2,2,2,1,4,7,7,9,1,2,12,7,4,9,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,0,12,0,12,0,12,0,1,2,9,1,2,1,2,12,7,4,9,1,2,2,4,12,1,1,1,9,7,0,4,2,2,12,1,2,7,1,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,7,2,2,1,2,0,7,0,0,12,7,4,9,1,2,12,7,4,9,1,2,2,2,12,7,4,9,1,2,2,2,0,0,0,0,0,0,0,0,0,0,0,53,0,53,0,0,0,53,59,60,62,61,57,63,64,58,53,55,56,59,60,62,61,57,63,64,58,53,55,56,1,1,1,1,59,60,62,61,57,63,64,58,53,55,56,55,1,55,1,55,56,1,59,60,62,61,57,63,64,58,53,55,56,59,60,62,61,57,63,64,58,56,1,55,1,1,1,1,53,55,56,1,59,60,62,61,57,63,64,58,1,1,59,60,62,61,57,63,64,58,53,53,55,1,55,1,1,1,1,59,60,62,61,57,63,64,58,59,60,62,61,57,63,64,58,53,55,56,59,60,62,61,57,63,64,58,53,55,56,59,60,62,61,57,63,64,58,53,55,56,1,1,1,2,0,0,2,2,0,2,0,2,0,2,0,2,0,0,2,2,66,2,66,2,2,2,2,2,2,2,66,2,71,66,68,69,71,66,68,69,66,68,69,66,68,69,68,68,66,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,66,69,69,66,68,68,69,68,68,68,66,66,68,68,69,71,66,66,66,66,66,66,66,66,66,66,66,66,66,68,69,66,0,2,2,66,68,69,71,66,68,69,2,66,2,66,66,2,66,2,66,2,2,2,2,66,2,68,66,68,69,66,69,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,69,66,68,69,66,68,0,71,66,68,69,71,66,68,69,71,66,68,69,69,69,69,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[[4,[3]],[0,[5,6]]],[[8,[7]]]],[9,10],[6,7],[6,7],[[],1],[[],2],[11,[[8,[1]]]],[11,[[8,[2]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,14,[15,[14]],13],[[8,[7]]]],[[2,14,[15,[14]],13],[[8,[7]]]],[[2,14,[15,[14]],13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,14,13],[[8,[7]]]],[[2,14,13],[[8,[7]]]],[[2,14,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,14,[15,[14]],13],[[8,[7]]]],[[2,14,[15,[14]],13],[[8,[7]]]],[[2,14,[15,[14]],13],[[8,[7]]]],[[12,10,13],[[8,[7]]]],[[2,10,13],[[8,[7]]]],[[2,10,13],[[8,[7]]]],[[12,14,10,13],[[8,[7]]]],[[2,14,10,13],[[8,[7]]]],[[2,14,10,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[2,13],[[8,[7]]]],[[12,14,13],[[8,[7]]]],[[2,14,13],[[8,[7]]]],[[2,14,13],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[1,1],16],[[2,17],16],[[2,18],16],[[2,18],16],[[2,19],16],[[2,20],16],[[2,21],16],[[2,19],16],[[2,22],16],[[2,19],16],[[2,23],16],[[2,24],16],[[2,16],16],[[2,17],16],[[2,25],16],[[2,26],16],[[2,24],16],[[2,18],16],[[2,21],16],[[2,22],16],[[2,14],16],[[2,23],16],[[2,10],16],[[2,27],16],[[2,27],16],[[2,20],16],[[2,17],16],[[2,28],16],[[2,26],16],[[2,25],16],[[2,25],16],[[2,26],16],[[2,10],16],[[2,22],16],[[2,20],16],[[2,27],16],[[2,10],16],[[2,21],16],[[2,14],16],[[2,24],16],[[2,23],16],[[2,2],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1,29]],[[[4,[3]]],[[8,[7]]]],[[7,30],31],[[7,30],31],[[9,30],31],[[1,30],31],[[2,30],31],[[]],[[]],[[]],[[]],[[]],[17,2],[18,2],[23,2],[[[15,[[0,[32,[33,[2]]]]]]],2],[[[34,[[33,[2]]]]],2],[21,2],[25,2],[[[35,[14]]],2],[14,2],[28,2],[19,2],[1,2],[10,2],[16,2],[[]],[27,2],[22,2],[26,2],[20,2],[24,2],[29,1],[29,2],[36,[[8,[37,7]]]],[36,12],[[[15,[25]]],[[8,[38,7]]]],[[[15,[25]]],12],[14,[[8,[38,7]]]],[14,12],[2,[[8,[37,7]]]],[[1,39]],[[2,39]],[9,10],[[1,40],2],[[2,41],2],[[1,40],2],[[2,41],2],[[]],[[]],[[]],[[]],[[]],[[]],[2],[[[4,[3]]],[[8,[3,7]]]],[[]],[1],[1],[1],[9,10],[7,[[42,[9]]]],0,[3,[[4,[3]]]],[[2,43],[[8,[7]]]],[[2,43],[[8,[7]]]],[12,[[42,[12]]]],[[1,1],[[42,[44]]]],[[2,2],[[42,[44]]]],[45],[[1,46],8],[[2,46],8],[[[4,[3]],16],[[8,[7]]]],[[[4,[3]],[15,[25]]],[[8,[7]]]],[[[4,[3]],47],[[8,[7]]]],[[[4,[3]],[0,[5,48]]],[[8,[7]]]],[[[4,[3]],[0,[5,48]]],[[8,[7]]]],[[[4,[3]],[0,[5,48]],[0,[5,48]]],8],[[[4,[3]],18],[[8,[7]]]],[[[4,[3]],21],[[8,[7]]]],[[[4,[3]],14,[0,[5,48]]],[[8,[7]]]],[[[4,[3]],[0,[5,48]]],[[8,[7]]]],[[[4,[3]],14,[0,[5,48]]],[[8,[7]]]],[[[4,[3]],[0,[5,48]]],[[8,[7]]]],[[[4,[3]],49],[[8,[7]]]],[[[4,[3]],23],[[8,[7]]]],[[[4,[3]],19],[[8,[7]]]],[[[4,[3]],27],[[8,[7]]]],[[[4,[3]],26],[[8,[7]]]],[[[4,[3]],[0,[5,48]]],[[8,[7]]]],[[[4,[3]],[42,[10]]],[[8,[7]]]],[[[4,[3]],14,[0,[5,48]]],[[8,[7]]]],[[[4,[3]],14,22,14,[0,[5,48]]],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]],[42,[10]]],[[8,[7]]]],[[[4,[3]],[0,[5,48]]],[[8,[7]]]],[[[4,[3]],14],[[8,[7]]]],[[[4,[3]],14,10],[[8,[7]]]],[[[4,[3]],14,22,14,10],[[8,[7]]]],[[[4,[3]],10],[[8,[7]]]],[[[4,[3]],14,10],[[8,[7]]]],[[[4,[3]],14,22,14,10],[[8,[7]]]],[[[4,[3]],50],[[8,[7]]]],[[[4,[3]],20],[[8,[7]]]],[[[4,[3]],22],[[8,[7]]]],[[[4,[3]],24],[[8,[7]]]],[[[4,[3]],25],[[8,[7]]]],[[[4,[3]]],[[8,[7]]]],[[[4,[3]],14],[[8,[7]]]],[[[4,[3]],14,22,14],[[8,[7]]]],[[[4,[3]],[0,[5,48]]],[[8,[7]]]],[7,[[42,[51]]]],[[2,[15,[14]],13],[[8,[7]]]],[[2,[15,[14]],13],[[8,[7]]]],[[]],[[]],[[[0,[5,48]]],[[8,[28,7]]]],[[],28],[48,[[8,[2,7]]]],[[3,[0,[5,48]]],[[8,[7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[2,10,13],[[8,[7]]]],[[2,10,13],[[8,[7]]]],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[2,[[8,[7]]]],[2,[[8,[7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[53,54],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,10],[1],[[1,40],16],[[1,2],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,2],[[1,40],[[42,[2]]]],[55,2],[[1,40],[[42,[2]]]],[[55,2],2],[[56,2],2],[[1,2,2],[[42,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,2],[1,57],[55,2],[1,58],[1,16],[1,59],[1,60],[53,2],[55,2],[56,2],[1,61],[59,10],[60,10],[62,10],[61,10],[57,10],[63,10],[64,10],[58,10],[1,10],[[],1],[59,42],[60,42],[62,42],[61,42],[57,42],[63,42],[64,42],[58,42],[[53,2],2],[[53,54],2],[55,2],[[1,40],[[42,[2]]]],[55],[[1,40],42],[[1,10]],[[1,65]],[1],[59],[60],[62],[61],[57],[63],[64],[58],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[1,63],[1,64],[10,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[8,[7]]]],[2,[[42,[16]]]],[66,[[42,[21]]]],[2,[[42,[21]]]],[66,[[42,[27]]]],[2,[[42,[27]]]],[2,[[42,[1]]]],[2,[[42,[1]]]],[2,42],[2,[[42,[67]]]],[2,[[42,[67]]]],[2,[[42,[14]]]],[66,[[42,[24]]]],[2,[[42,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[68,68],[69,69],[[]],[[]],[[]],[[68,68],44],[[],44],[11,[[8,[66]]]],[11,[[8,[69]]]],[[66,13],[[8,[7]]]],[[66,13],[[8,[7]]]],[[69,13],[[8,[7]]]],[[69,13],[[8,[7]]]],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,14,[15,[14]],13],8],[[66,14,[15,[14]],13],8],[[69,14,[15,[14]],13],8],[[69,14,[15,[14]],13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],[[8,[7]]]],[[69,13],[[8,[7]]]],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,14,13],8],[[66,14,13],8],[[69,14,13],8],[[69,14,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,14,[15,[14]],13],8],[[66,14,[15,[14]],13],8],[[69,14,[15,[14]],13],8],[[69,14,[15,[14]],13],8],[[66,10,13],8],[[66,10,13],8],[[69,10,13],8],[[69,10,13],8],[[66,14,10,13],8],[[66,14,10,13],8],[[69,14,10,13],8],[[69,14,10,13],8],[[66,13],8],[[66,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,13],8],[[66,13],8],[[69,13],8],[[69,13],8],[[66,14,13],8],[[66,14,13],8],[[69,14,13],8],[[69,14,13],8],[[66,66],16],[[68,68],16],[[68,[0,[5,[70,[14]]]]],16],[[69,69],16],[[],16],[[],16],[[],16],[[66,30],31],[[66,30],31],[[68,30],31],[[68,30],31],[[69,30],31],[[]],[21,66],[18,66],[20,66],[17,66],[[]],[19,66],[24,66],[23,66],[27,66],[10,66],[26,66],[22,66],[25,66],[[]],[[]],[14,[[8,[66]]]],[2,[[8,[37,7]]]],[[2,41],[[42,[2]]]],[[2,41],[[42,[2]]]],[[66,39]],[[68,39]],[[69,39]],[[]],[[]],[[]],[[]],[2,16],[66,16],[2,16],[66,16],[66,16],[2,16],[66,16],[2,16],[66,16],[2,16],[2,16],[2,16],[2,16],[66,16],[2,16],[[[33,[28]]],68],[[66,66],[[42,[44]]]],[[68,68],[[42,[44]]]],[[69,69],[[42,[44]]]],[[66,46],8],[[69,46],8],[[71,16],[[8,[2,7]]]],[[71,[15,[25]]],[[8,[2,7]]]],[[71,47],[[8,[2,7]]]],[[71,18],[[8,[2,7]]]],[[71,21],[[8,[2,7]]]],[[71,49],[[8,[2,7]]]],[[71,23],[[8,[2,7]]]],[[71,19],[[8,[2,7]]]],[[71,27],[[8,[2,7]]]],[[71,26],[[8,[2,7]]]],[[71,[42,[10]]],[[8,[0,7]]]],[[71,14,[0,[5,48]]],[[8,[2,7]]]],[[71,14,22,14,[0,[5,48]]],[[8,[2,7]]]],[71,[[8,[2,7]]]],[[71,[42,[10]]],[[8,[0,7]]]],[[71,[0,[5,48]]],[[8,[2,7]]]],[[71,14],[[8,[2,7]]]],[[71,14,10],[[8,[0,7]]]],[[71,14,22,14,10],[[8,[0,7]]]],[[71,10],[[8,[0,7]]]],[[71,14,10],[[8,[0,7]]]],[[71,14,22,14,10],[[8,[0,7]]]],[[71,50],[[8,[2,7]]]],[[71,20],[[8,[2,7]]]],[[71,22],[[8,[2,7]]]],[[71,24],[[8,[2,7]]]],[[71,25],[[8,[2,7]]]],[71,[[8,[2,7]]]],[[71,14],[[8,[2,7]]]],[[71,14,22,14],[[8,[2,7]]]],0,[[]],[[]],[[]],[[],28],[[],28],[48,[[8,[2,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],52],[[],52],[[],52],[[],52],0,[[69,43],[[8,[7]]]],[[69,43],[[8,[7]]]],0,0,[11,[[8,[38]]]],[[48,46],8],[11,[[8,[38]]]],[[48,46],8]],"c":[],"p":[[3,"Mapping"],[4,"Value"],[8,"Write"],[3,"Serializer"],[8,"Sized"],[8,"Display"],[3,"Error"],[4,"Result"],[3,"Location"],[15,"usize"],[8,"Deserializer"],[3,"Deserializer"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"bool"],[15,"isize"],[15,"f32"],[15,"i32"],[15,"u16"],[15,"f64"],[15,"u32"],[15,"i16"],[15,"u64"],[15,"u8"],[15,"i8"],[15,"i64"],[3,"String"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[8,"Clone"],[8,"Into"],[3,"Vec"],[4,"Cow"],[8,"Read"],[8,"DeserializeOwned"],[8,"Deserialize"],[8,"Hasher"],[8,"Index"],[8,"Index"],[4,"Option"],[8,"DeserializeSeed"],[4,"Ordering"],[3,"Demand"],[8,"Serializer"],[15,"char"],[8,"Serialize"],[15,"i128"],[15,"u128"],[8,"Error"],[3,"TypeId"],[4,"Entry"],[8,"FnOnce"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IntoKeys"],[3,"IntoValues"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"IntoIter"],[3,"Values"],[3,"ValuesMut"],[8,"FnMut"],[3,"Number"],[6,"Sequence"],[3,"Tag"],[3,"TaggedValue"],[8,"AsRef"],[3,"Serializer"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","t":"NGELLFLLLLFFFFFFLFFFFFFLFLLLL","n":["DifferentLengthArgs","HammingResult","StrSimError","borrow","borrow_mut","damerau_levenshtein","eq","fmt","fmt","from","generic_damerau_levenshtein","generic_hamming","generic_jaro","generic_jaro_winkler","generic_levenshtein","hamming","into","jaro","jaro_winkler","levenshtein","normalized_damerau_levenshtein","normalized_levenshtein","osa_distance","provide","sorensen_dice","to_string","try_from","try_into","type_id"],"q":[[0,"strsim"]],"d":["","","","","","Like optimal string alignment, but substrings can be …","","","","Returns the argument unchanged.","Like optimal string alignment, but substrings can be …","Calculates the number of positions in the two sequences …","Calculates the Jaro similarity between two sequences. The …","Like Jaro but gives a boost to sequences that have a …","Calculates the minimum number of insertions, deletions, …","Calculates the number of positions in the two strings …","Calls <code>U::from(self)</code>.","Calculates the Jaro similarity between two strings. The …","Like Jaro but gives a boost to strings that have a common …","Calculates the minimum number of insertions, deletions, …","Calculates a normalized score of the Damerau–Levenshtein …","Calculates a normalized score of the Levenshtein algorithm …","Like Levenshtein but allows for adjacent transpositions. …","","Calculates a Sørensen-Dice similarity distance using …","","","",""],"i":[3,0,0,3,3,0,3,3,3,3,0,0,0,0,0,0,3,0,0,0,0,0,0,3,0,3,3,3,3],"f":[0,0,0,[[]],[[]],[[1,1],2],[[3,3],4],[[3,5],6],[[3,5],[[8,[7]]]],[[]],[[[12,[[0,[9,10,11]]]],[12,[[0,[9,10,11]]]]],2],[[13,13],14],[[],15],[[],15],[[],2],[[1,1],14],[[]],[[1,1],15],[[1,1],15],[[1,1],2],[[1,1],15],[[1,1],15],[[1,1],2],[16],[[1,1],15],[[],17],[[],8],[[],8],[[],18]],"c":[],"p":[[15,"str"],[15,"usize"],[4,"StrSimError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Eq"],[8,"Hash"],[8,"Clone"],[15,"slice"],[8,"IntoIterator"],[6,"HammingResult"],[15,"f64"],[3,"Demand"],[3,"String"],[3,"TypeId"]]},\
"syn":{"doc":"github crates-io docs-rs","t":"DNNNNDDNNNDNDNNEDNNDDENNNNNNNDNNDNNNNNNNNNNNNNNNNNDDNNNEDDDNNDNNNNNDENDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNDNEDDEDDDNNNNNENEDDDDNNEEDNNNNNNCDFNNNDEDDDDENDNNNNNNENDDDDDDDDDDDDDDDDNNDFNNNNDNEFNNDFDFDFDFDFDFDFDNDNNDNNNNNNNNENNEEDDNNNNNNNNNNNNNNNNNNNNNNNNNDEDDDDDDDDDDDDDDDDDNNNNNEDDDNNDNNENDNNNNNNNNNNGNENNNNDNNNNEEDNENNNNNNONNNDEEDDDDNNNNNNNDENNNNNNNNNDDDDDDDDDEDDDDDDDNENNNNNNNNDDDDDEDDNNNNNNNNNDEDENNNMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMOMMMMMMMOMAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMOOMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMMMMMMMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLMMMMMMMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMMMMMLMMMMLMMMLMMMMMLMMMMMMMMMMMMMMMMMLMMMMAMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMOAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLFLOLLLLLLLOOLFLLLLLLLMMMMMMMMMLLMMMMMMMMMMMMMMMAMMMMMMMLMMMMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALMMMMMMMMMMMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLMMMMMMMMLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKSKDLLLLMLLFMLLLLDDDQIDGIIGDLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKNDDDDEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Abi","Add","AddAssign","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssocConst","AssocConst","AssocType","AssocType","Async","AttrStyle","Attribute","Await","BareFn","BareFnArg","BareVariadic","BinOp","Binary","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","Block","Block","Bool","BoundLifetimes","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivAssign","Enum","Enum","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprConst","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprInfer","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldMutability","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemFn","ImplItemMacro","ImplItemType","ImplRestriction","ImplTrait","Index","Index","Infer","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeParam","List","Lit","Lit","Lit","Lit","LitBool","LitBool","LitByte","LitByte","LitByteStr","LitByteStr","LitChar","LitChar","LitFloat","LitFloat","LitInt","LitInt","LitStr","LitStr","Local","Local","LocalInit","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","MacroDelimiter","Match","Maybe","Member","Meta","MetaList","MetaNameValue","MethodCall","Mod","Mul","MulAssign","Mut","Name","NameValue","Named","Named","Ne","Neg","Never","None","None","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatConst","PatIdent","PatLit","PatMacro","PatOr","PatParen","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemAssign","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Shl","ShlAssign","Shr","ShrAssign","Signature","Slice","Slice","Static","Static","StaticMutability","Stmt","StmtMacro","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubAssign","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemFn","TraitItemMacro","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","comma","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","const_token","const_token","constness","constness","content","continue_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","delimiter","discriminant","diverge","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","elems","else_branch","end","end","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","len","len","len","let_token","let_token","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","loop_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","mac","make_where_clause","match_token","member","member","member","meta","meta","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","name","named","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args","parse_args_with","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_mod_style","parse_multi","parse_multi_with_leading_vert","parse_named","parse_nested_meta","parse_nested_meta","parse_outer","parse_quote","parse_quote_spanned","parse_single","parse_str","parse_turbofish","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","punctuated","qself","qself","qself","qself","qself","qself","question_token","receiver","receiver","reference","rename","rename","require_list","require_name_value","require_path_only","rest","rest","restriction","return_token","right","right","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","start","start","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_token","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","equivalent","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","ParseNestedMeta","borrow","borrow_mut","error","from","input","into","parse_nested_meta","parser","path","try_from","try_into","type_id","value","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_any_delimiter","parse_str","parse_terminated","peek","peek","peek2","peek3","provide","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AnyDelimiter","Speculative","advance_to","parse_any_delimiter","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","pop_punct","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","Spanned","span","Abstract","And","AndAnd","AndEq","As","Async","At","Auto","Await","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Comma","Const","Continue","Crate","Default","Do","Dollar","Dot","DotDot","DotDotDot","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Minus","MinusEq","Mod","Move","Mut","Ne","Not","Or","OrEq","OrOr","Override","Paren","PathSep","Percent","PercentEq","Plus","PlusEq","Pound","Priv","Pub","Question","RArrow","Ref","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Slash","SlashEq","Star","StarEq","Static","Struct","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"syn"],[3656,"syn::buffer"],[3691,"syn::ext"],[3695,"syn::meta"],[3709,"syn::parse"],[3804,"syn::parse::discouraged"],[3808,"syn::punctuated"],[3970,"syn::spanned"],[3972,"syn::token"]],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0..=10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","An equality constraint on an associated constant: the …","An equality constraint on an associated constant: the …","A binding (equality constraint) on an associated type: the …","A binding (equality constraint) on an associated type: the …","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute, like <code>#[repr(transparent)]</code>.","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","The variadic argument of a function pointer like …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const block: <code>const { ... }</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expression, with or without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","A blocked scope: <code>{ ... }</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","Unused, but reserved for RFC 3323 restrictions.","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An associated function within the definition of a trait.","An associated function within an impl block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","","A word of Rust code, which may be a keyword or legal …","","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","An associated function within an impl block.","A macro invocation within an impl block.","An associated type within an impl block.","Unused, but reserved for RFC 3323 restrictions.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","","A lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","","A byte literal: <code>b&#39;f&#39;</code>.","","A byte string literal: <code>b&quot;foo&quot;</code>.","","A character literal: <code>&#39;a&#39;</code>.","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","","An integer literal: <code>1</code> or <code>1u16</code>.","","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","The expression assigned in a local <code>let</code> binding, including …","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in pattern position.","A macro invocation in statement position.","A macro in the type position.","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","The never type: <code>!</code>.","","","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized pattern: <code>(A | B)</code>.","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A const block: <code>const { ... }</code>.","A pattern that binds a new variable: …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A pattern that matches any one of a set of cases.","A parenthesized pattern: <code>(A | B)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A path like <code>std::slice::Iter</code>, optionally qualified with a …","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method.","The <code>self</code> argument of an associated method.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference pattern: <code>&amp;mut var</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A dynamically sized slice type: <code>[T]</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","The mutability of an <code>Item::Static</code> or <code>ForeignItem::Static</code>.","A statement, usually ending in a semicolon.","A macro invocation in statement position.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","An associated function within the definition of a trait.","A macro invocation within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A particular type is returned.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","Tokens in type position not interpreted by Syn.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","","","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>(A, B)</code>","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeParam&gt; over the …","","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeParam&gt; over the …","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","","","Facility for interpreting structured content inside of an …","","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","See <code>Attribute::parse_args</code>.","Parse the arguments to the attribute using the given …","See <code>Attribute::parse_args_with</code>.","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parse a <code>Path</code> containing no path arguments on any of its …","Parse a pattern, possibly involving <code>|</code>, but not a leading <code>|</code>.","Parse a pattern, possibly involving <code>|</code>, possibly including a","Parses a named (braced struct) field.","Parse the arguments to the attribute, expecting it to …","See <code>Attribute::parse_nested_meta</code>.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a pattern that does <em>not</em> involve <code>|</code> at the top level.","Parse a string of Rust code into the chosen syntax tree …","Parse <code>::&lt;…&gt;</code> with mandatory leading <code>::</code>.","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the path that identifies the interpretation of …","Returns the path that begins this structured meta item.","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","Error if this is a <code>Meta::Path</code> or <code>Meta::NameValue</code>.","Error if this is a <code>Meta::Path</code> or <code>Meta::List</code>.","Error if this is a <code>Meta::List</code> or <code>Meta::NameValue</code>.","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","","","Returns the span of this <code>Ident</codetrait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","","","","","","","","Trait this impl implementseturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In some positions, types may not contain the <code>+</code> character, …","","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Context for parsing a single property in the conventional …","","","Report that the attribute’s content did not conform to …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Used when parsing <code>list(...)</code> syntax <strong>if</strong> the content inside …","Make a parser that is usable with <code>parse_macro_input!</code> in a …","","","","","Used when parsing <code>key = &quot;value&quot;</code> syntax.","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","","The source location of the error.","Returns the <code>Span</code> of the next token in the parse stream, or …","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support manipulating …","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","Returns the delimiter, the span of the delimiter token, …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","<strong>A punctuated sequence of syntax tree nodes of type <code>T</code> </strong>…","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Removes the trailing punctuation from this punctuated …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>become</code>","<code>box</code>","<code>{</code>…<code>}</code>","<code>[</code>…<code>]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>-</code>","<code>-=</code>","<code>mod</code>","<code>move</code>","<code>mut</code>","<code>!=</code>","<code>!</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(</code>…<code>)</code>","<code>::</code>","<code>%</code>","<code>%=</code>","<code>+</code>","<code>+=</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>/</code>","<code>/=</code>","<code>*</code>","<code>*=</code>","<code>static</code>","<code>struct</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,136,136,136,153,0,0,32,169,32,0,154,0,154,32,0,0,32,169,0,0,0,32,136,136,136,136,136,136,0,32,3,0,135,135,32,3,3,32,32,3,76,32,32,79,91,118,123,138,154,0,0,154,32,345,0,0,0,0,187,137,0,136,136,28,91,136,0,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,0,32,0,0,0,0,0,0,0,3,91,113,118,123,0,32,0,0,0,0,0,91,136,0,0,0,107,32,107,169,136,76,0,0,0,138,32,91,0,0,0,0,0,0,0,169,0,32,32,169,161,18,3,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,32,0,0,79,84,88,154,0,19,0,0,32,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,165,0,32,136,0,32,91,113,118,123,138,165,169,0,32,86,0,0,0,0,32,91,136,136,132,107,19,23,71,136,137,169,86,132,153,163,137,136,138,18,32,135,138,169,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,32,107,138,169,0,0,0,0,169,161,0,32,138,0,345,0,129,32,138,169,136,136,107,32,138,161,0,32,0,136,136,136,136,0,138,169,91,113,0,0,0,3,0,28,32,91,138,136,136,0,84,91,91,0,0,0,0,0,0,0,169,32,32,32,138,169,138,0,0,79,88,91,113,118,123,138,154,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,32,28,91,23,23,71,32,91,0,0,0,0,0,0,0,0,32,84,91,113,118,123,3,138,169,0,0,0,0,32,138,32,96,128,171,60,142,180,2,40,56,155,152,55,41,110,160,11,35,42,128,22,26,27,33,34,35,36,37,38,39,40,41,42,43,43,44,45,46,47,48,49,50,51,52,52,53,54,54,55,56,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,70,73,75,77,80,81,82,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,114,115,116,117,119,120,121,122,124,125,126,127,130,131,139,140,141,142,143,144,145,146,147,148,149,150,166,168,185,186,102,36,134,176,36,45,9,8,9,8,35,38,43,43,65,68,95,125,42,46,53,69,75,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,90,80,81,89,90,103,121,158,173,182,24,30,55,63,93,96,97,102,112,145,164,0,17,33,49,61,144,170,181,0,39,0,139,35,42,140,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,2,108,155,26,73,74,80,81,82,89,90,92,100,102,115,119,121,124,130,148,150,158,75,131,186,48,69,78,78,43,43,82,92,119,124,179,42,128,99,44,94,0,0,27,78,83,153,81,82,119,120,121,97,124,125,126,20,134,22,167,63,143,36,45,56,131,186,182,170,172,177,179,180,181,33,66,144,146,147,183,48,59,59,30,93,1,1,2,71,72,21,34,51,81,82,92,100,103,104,124,126,156,157,167,1,2,71,72,39,41,46,47,49,51,55,57,60,61,62,64,67,70,73,92,100,124,167,0,94,184,75,22,29,31,63,101,105,145,1,1,1,2,71,72,9,8,128,171,46,83,1,1,1,1,1,1,1,16,11,12,2,17,18,19,19,19,19,20,21,22,23,23,23,24,25,26,27,27,27,27,28,29,30,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,71,71,72,72,73,74,75,76,77,78,79,79,79,79,80,81,81,82,83,84,84,84,85,86,87,88,88,88,89,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,107,107,107,107,107,108,109,110,111,112,113,113,113,113,113,114,115,116,117,118,118,118,118,118,119,120,121,122,123,123,123,123,123,124,125,126,127,128,129,129,129,130,131,132,133,3,3,3,3,3,3,3,3,10,6,5,7,9,9,8,8,4,345,134,135,136,137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,139,140,141,142,143,144,145,146,147,148,149,150,151,151,152,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,40,27,92,93,97,101,102,103,104,105,116,119,121,124,126,128,156,157,158,151,47,172,78,83,155,160,75,1,2,71,72,2,22,26,27,81,82,92,93,94,98,99,100,101,102,103,104,105,108,109,110,115,116,119,121,124,126,128,139,152,156,157,158,48,97,173,46,162,49,72,166,42,128,159,171,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,23,23,23,23,153,151,153,77,96,97,102,112,23,23,38,39,44,46,53,69,106,151,140,34,37,23,61,170,51,166,130,80,89,180,78,42,83,85,90,171,78,59,59,52,52,53,78,83,155,160,54,54,98,117,122,127,168,175,78,55,45,73,150,0,17,56,99,85,42,26,60,100,115,130,139,142,179,180,74,184,185,186,24,1,2,80,3,10,6,5,7,9,8,4,1,37,67,42,42,42,128,159,171,78,25,40,56,57,66,85,128,141,146,147,159,162,171,177,183,0,0,0,1,2,19,20,21,22,24,25,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,3,10,10,6,5,7,9,8,4,134,136,137,151,152,154,155,159,161,164,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,0,1,17,20,17,20,134,134,0,17,0,151,138,138,26,17,20,17,0,0,138,0,155,26,10,164,32,1,2,46,51,75,131,141,142,148,150,166,17,19,20,21,58,58,63,85,134,145,147,162,178,160,17,87,162,0,58,58,63,145,147,178,64,128,56,130,94,110,19,19,19,63,145,102,62,34,37,151,130,97,99,29,61,92,94,98,100,101,103,104,106,114,115,116,117,119,120,121,122,124,126,127,166,168,170,1,2,3,10,6,5,7,9,8,4,77,95,114,120,125,1,1,1,16,11,12,2,2,17,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,3,3,10,10,6,6,5,5,7,7,9,9,8,8,4,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,72,4,0,78,111,179,59,59,100,115,164,29,101,17,139,3,10,6,5,7,9,8,102,48,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,2,9,8,1,16,11,12,2,17,19,20,21,22,23,24,25,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,3,10,6,5,7,9,8,4,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,10,6,5,7,9,8,4,20,134,97,102,103,106,108,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,65,56,26,41,82,92,100,104,115,119,124,126,130,148,156,160,185,1,16,11,12,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,10,6,5,7,9,8,4,345,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,78,78,104,116,121,126,50,149,174,31,105,25,1,68,96,97,99,102,128,171,106,10,6,5,7,4,21,4,157,128,171,30,93,26,27,92,93,94,95,99,100,101,102,103,104,105,106,114,115,116,124,125,126,78,87,69,169,173,182,187,70,0,0,223,223,224,223,224,224,224,224,224,224,224,223,224,224,224,223,224,224,224,223,223,224,224,224,224,224,224,223,224,223,224,223,224,0,346,346,346,0,226,226,226,226,226,226,226,0,226,226,226,226,226,0,0,0,217,0,0,0,0,0,0,0,229,228,231,229,230,235,228,231,229,230,235,229,228,230,228,230,228,229,230,0,229,231,229,230,228,228,228,229,229,229,228,228,231,229,230,235,228,231,229,230,235,228,228,228,229,229,228,228,214,229,217,235,217,229,217,229,231,229,229,229,228,228,229,229,228,228,230,228,229,228,231,229,230,235,228,231,229,230,235,228,231,229,230,235,0,0,347,348,244,0,0,0,0,0,0,0,0,244,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,237,237,241,242,243,207,244,237,237,241,242,243,207,244,244,237,237,237,237,237,237,237,241,246,242,243,207,208,244,237,237,237,237,237,237,241,246,242,243,207,208,244,237,237,237,241,246,242,243,207,208,237,244,244,237,237,237,237,237,237,241,246,242,243,207,208,237,244,241,246,242,243,207,208,241,246,242,243,207,208,237,237,237,237,237,237,237,237,244,244,237,237,237,241,246,242,243,207,208,237,244,237,241,242,243,207,244,237,244,237,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,237,241,246,242,243,207,208,244,244,244,0,349,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,196,296,299,300,302,303,304,305,309,313,316,317,320,321,325,327,329,330,332,337,339,341,196,296,299,300,302,303,304,305,309,313,316,317,320,321,325,327,329,330,332,337,339,341,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,342,343,344,196,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,248,196,249,250,251,252,253,254,255,256,257,258,198,259,260,261,262,263,197,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,200,199,282,283,201,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"fc":[],"p":[[3,"Ident"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[3,"LitByte"],[3,"LitByteStr"],[3,"LitChar"],[3,"LitFloat"],[3,"LitInt"],[3,"LitStr"],[3,"TypeGenerics"],[3,"Turbofish"],[15,"str"],[8,"FromStr"],[6,"Result"],[3,"ImplGenerics"],[3,"Attribute"],[4,"AttrStyle"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Variant"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Field"],[3,"DeriveInput"],[4,"Data"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprConst"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprInfer"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[4,"Member"],[3,"Index"],[3,"FieldValue"],[3,"Label"],[3,"Arm"],[4,"RangeLimits"],[3,"File"],[3,"Generics"],[4,"GenericParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"ConstParam"],[3,"BoundLifetimes"],[4,"TypeParamBound"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"WhereClause"],[4,"WherePredicate"],[3,"PredicateLifetime"],[3,"PredicateType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[4,"UseTree"],[3,"UsePath"],[3,"UseName"],[3,"UseRename"],[3,"UseGlob"],[3,"UseGroup"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemFn"],[3,"TraitItemType"],[3,"TraitItemMacro"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemFn"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Signature"],[4,"FnArg"],[3,"Receiver"],[3,"Variadic"],[4,"StaticMutability"],[4,"ImplRestriction"],[3,"Macro"],[4,"MacroDelimiter"],[4,"BinOp"],[4,"UnOp"],[4,"Pat"],[3,"PatIdent"],[3,"PatOr"],[3,"PatParen"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Path"],[3,"PathSegment"],[4,"PathArguments"],[4,"GenericArgument"],[3,"AngleBracketedGenericArguments"],[3,"AssocType"],[3,"AssocConst"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"QSelf"],[4,"Visibility"],[3,"VisRestricted"],[4,"FieldMutability"],[3,"Block"],[4,"Stmt"],[3,"Local"],[3,"LocalInit"],[3,"StmtMacro"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"BareFnArg"],[3,"BareVariadic"],[4,"ReturnType"],[4,"Ordering"],[8,"AsRef"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[3,"Underscore"],[3,"Extern"],[3,"Crate"],[3,"SelfValue"],[3,"SelfType"],[3,"Super"],[15,"usize"],[3,"Literal"],[8,"Into"],[4,"Option"],[8,"Hasher"],[3,"Iter"],[3,"IterMut"],[3,"Span"],[15,"u8"],[15,"slice"],[15,"char"],[3,"TokenStream"],[8,"Parse"],[6,"ParseStream"],[3,"TokenStream"],[8,"Parser"],[3,"Vec"],[8,"FnMut"],[3,"DelimSpan"],[3,"String"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Delimiter"],[3,"ParseNestedMeta"],[8,"Display"],[3,"Error"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Lookahead1"],[8,"IntoIterator"],[3,"LexError"],[8,"ToTokens"],[3,"Nothing"],[8,"Peek"],[3,"Punctuated"],[3,"Demand"],[8,"FnOnce"],[8,"Clone"],[3,"Pairs"],[3,"IntoPairs"],[3,"IntoIter"],[4,"Pair"],[8,"Default"],[3,"PairsMut"],[8,"Token"],[3,"Group"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Comma"],[3,"Dollar"],[3,"Dot"],[3,"DotDot"],[3,"DotDotDot"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"FatArrow"],[3,"Ge"],[3,"Gt"],[3,"LArrow"],[3,"Le"],[3,"Lt"],[3,"Minus"],[3,"MinusEq"],[3,"Ne"],[3,"Not"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"PathSep"],[3,"Percent"],[3,"PercentEq"],[3,"Plus"],[3,"PlusEq"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Slash"],[3,"SlashEq"],[3,"Star"],[3,"StarEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[4,"StrStyle"],[8,"IdentExt"],[8,"Speculative"],[8,"AnyDelimiter"],[8,"Spanned"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":"Y","n":["Error"],"q":[[0,"thiserror"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thiserror_impl":{"doc":"","t":"Y","n":["Error"],"q":[[0,"thiserror_impl"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]},\
"unsafe_libyaml":{"doc":"github crates-io docs-rs","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMDFEFFFFFFFFFFFDFFFFFFFFFFFFFFFEDEEFDEFFEDGDDEFFFFFFFFEDGFEFFEDDFFDFDEDG","n":["YAML_ALIAS_EVENT","YAML_ALIAS_TOKEN","YAML_ANCHOR_TOKEN","YAML_ANY_BREAK","YAML_ANY_ENCODING","YAML_ANY_MAPPING_STYLE","YAML_ANY_SCALAR_STYLE","YAML_ANY_SEQUENCE_STYLE","YAML_BLOCK_END_TOKEN","YAML_BLOCK_ENTRY_TOKEN","YAML_BLOCK_MAPPING_START_TOKEN","YAML_BLOCK_MAPPING_STYLE","YAML_BLOCK_SEQUENCE_START_TOKEN","YAML_BLOCK_SEQUENCE_STYLE","YAML_COMPOSER_ERROR","YAML_CRLN_BREAK","YAML_CR_BREAK","YAML_DOCUMENT_END_EVENT","YAML_DOCUMENT_END_TOKEN","YAML_DOCUMENT_START_EVENT","YAML_DOCUMENT_START_TOKEN","YAML_DOUBLE_QUOTED_SCALAR_STYLE","YAML_EMITTER_ERROR","YAML_EMIT_BLOCK_MAPPING_FIRST_KEY_STATE","YAML_EMIT_BLOCK_MAPPING_KEY_STATE","YAML_EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE","YAML_EMIT_BLOCK_MAPPING_VALUE_STATE","YAML_EMIT_BLOCK_SEQUENCE_FIRST_ITEM_STATE","YAML_EMIT_BLOCK_SEQUENCE_ITEM_STATE","YAML_EMIT_DOCUMENT_CONTENT_STATE","YAML_EMIT_DOCUMENT_END_STATE","YAML_EMIT_DOCUMENT_START_STATE","YAML_EMIT_END_STATE","YAML_EMIT_FIRST_DOCUMENT_START_STATE","YAML_EMIT_FLOW_MAPPING_FIRST_KEY_STATE","YAML_EMIT_FLOW_MAPPING_KEY_STATE","YAML_EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE","YAML_EMIT_FLOW_MAPPING_VALUE_STATE","YAML_EMIT_FLOW_SEQUENCE_FIRST_ITEM_STATE","YAML_EMIT_FLOW_SEQUENCE_ITEM_STATE","YAML_EMIT_STREAM_START_STATE","YAML_FLOW_ENTRY_TOKEN","YAML_FLOW_MAPPING_END_TOKEN","YAML_FLOW_MAPPING_START_TOKEN","YAML_FLOW_MAPPING_STYLE","YAML_FLOW_SEQUENCE_END_TOKEN","YAML_FLOW_SEQUENCE_START_TOKEN","YAML_FLOW_SEQUENCE_STYLE","YAML_FOLDED_SCALAR_STYLE","YAML_KEY_TOKEN","YAML_LITERAL_SCALAR_STYLE","YAML_LN_BREAK","YAML_MAPPING_END_EVENT","YAML_MAPPING_NODE","YAML_MAPPING_START_EVENT","YAML_MEMORY_ERROR","YAML_NO_ERROR","YAML_NO_EVENT","YAML_NO_NODE","YAML_NO_TOKEN","YAML_PARSER_ERROR","YAML_PARSE_BLOCK_MAPPING_FIRST_KEY_STATE","YAML_PARSE_BLOCK_MAPPING_KEY_STATE","YAML_PARSE_BLOCK_MAPPING_VALUE_STATE","YAML_PARSE_BLOCK_NODE_OR_INDENTLESS_SEQUENCE_STATE","YAML_PARSE_BLOCK_NODE_STATE","YAML_PARSE_BLOCK_SEQUENCE_ENTRY_STATE","YAML_PARSE_BLOCK_SEQUENCE_FIRST_ENTRY_STATE","YAML_PARSE_DOCUMENT_CONTENT_STATE","YAML_PARSE_DOCUMENT_END_STATE","YAML_PARSE_DOCUMENT_START_STATE","YAML_PARSE_END_STATE","YAML_PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE","YAML_PARSE_FLOW_MAPPING_FIRST_KEY_STATE","YAML_PARSE_FLOW_MAPPING_KEY_STATE","YAML_PARSE_FLOW_MAPPING_VALUE_STATE","YAML_PARSE_FLOW_NODE_STATE","YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE","YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_KEY_STATE","YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE","YAML_PARSE_FLOW_SEQUENCE_ENTRY_STATE","YAML_PARSE_FLOW_SEQUENCE_FIRST_ENTRY_STATE","YAML_PARSE_IMPLICIT_DOCUMENT_START_STATE","YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE","YAML_PARSE_STREAM_START_STATE","YAML_PLAIN_SCALAR_STYLE","YAML_READER_ERROR","YAML_SCALAR_EVENT","YAML_SCALAR_NODE","YAML_SCALAR_TOKEN","YAML_SCANNER_ERROR","YAML_SEQUENCE_END_EVENT","YAML_SEQUENCE_NODE","YAML_SEQUENCE_START_EVENT","YAML_SINGLE_QUOTED_SCALAR_STYLE","YAML_STREAM_END_EVENT","YAML_STREAM_END_TOKEN","YAML_STREAM_START_EVENT","YAML_STREAM_START_TOKEN","YAML_TAG_DIRECTIVE_TOKEN","YAML_TAG_TOKEN","YAML_UTF16BE_ENCODING","YAML_UTF16LE_ENCODING","YAML_UTF8_ENCODING","YAML_VALUE_TOKEN","YAML_VERSION_DIRECTIVE_TOKEN","YAML_WRITER_ERROR","anchor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","column","context","context_mark","data","data","data","end","end_implicit","end_mark","end_mark","end_mark","end_mark","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","key","line","major","mark","mark","minor","nodes","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","possible","prefix","problem","problem","problem_mark","problem_offset","problem_value","required","start","start_implicit","start_mark","start_mark","start_mark","start_mark","tag","tag_directives","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_number","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","version_directive","yaml_alias_data_t","yaml_alias_event_initialize","yaml_break_t","yaml_document_add_mapping","yaml_document_add_scalar","yaml_document_add_sequence","yaml_document_append_mapping_pair","yaml_document_append_sequence_item","yaml_document_delete","yaml_document_end_event_initialize","yaml_document_get_node","yaml_document_get_root_node","yaml_document_initialize","yaml_document_start_event_initialize","yaml_document_t","yaml_emitter_close","yaml_emitter_delete","yaml_emitter_dump","yaml_emitter_emit","yaml_emitter_flush","yaml_emitter_initialize","yaml_emitter_open","yaml_emitter_set_break","yaml_emitter_set_canonical","yaml_emitter_set_encoding","yaml_emitter_set_indent","yaml_emitter_set_output","yaml_emitter_set_output_string","yaml_emitter_set_unicode","yaml_emitter_set_width","yaml_emitter_state_t","yaml_emitter_t","yaml_encoding_t","yaml_error_type_t","yaml_event_delete","yaml_event_t","yaml_event_type_t","yaml_mapping_end_event_initialize","yaml_mapping_start_event_initialize","yaml_mapping_style_t","yaml_mark_t","yaml_node_item_t","yaml_node_pair_t","yaml_node_t","yaml_node_type_t","yaml_parser_delete","yaml_parser_initialize","yaml_parser_load","yaml_parser_parse","yaml_parser_scan","yaml_parser_set_encoding","yaml_parser_set_input","yaml_parser_set_input_string","yaml_parser_state_t","yaml_parser_t","yaml_read_handler_t","yaml_scalar_event_initialize","yaml_scalar_style_t","yaml_sequence_end_event_initialize","yaml_sequence_start_event_initialize","yaml_sequence_style_t","yaml_simple_key_t","yaml_stack_t","yaml_stream_end_event_initialize","yaml_stream_start_event_initialize","yaml_tag_directive_t","yaml_token_delete","yaml_token_t","yaml_token_type_t","yaml_version_directive_t","yaml_write_handler_t"],"q":[[0,"unsafe_libyaml"]],"d":["An ALIAS event.","An ALIAS token.","An ANCHOR token.","Let the parser choose the break type.","Let the parser choose the encoding.","Let the emitter choose the style.","Let the emitter choose the style.","Let the emitter choose the style.","A BLOCK-END token.","A BLOCK-ENTRY token.","A BLOCK-MAPPING-START token.","The block mapping style.","A BLOCK-SEQUENCE-START token.","The block sequence style.","Cannot compose a YAML document.","Use CR LN for line breaks (DOS style).","Use CR for line breaks (Mac style).","A DOCUMENT-END event.","A DOCUMENT-END token.","A DOCUMENT-START event.","A DOCUMENT-START token.","The double-quoted scalar style.","Cannot emit a YAML stream.","Expect the first key of a block mapping.","Expect the key of a block mapping.","Expect a value for a simple key of a block mapping.","Expect a value of a block mapping.","Expect the first item of a block sequence.","Expect an item of a block sequence.","Expect the content of a document.","Expect DOCUMENT-END.","Expect DOCUMENT-START or STREAM-END.","Expect nothing.","Expect the first DOCUMENT-START or STREAM-END.","Expect the first key of a flow mapping.","Expect a key of a flow mapping.","Expect a value for a simple key of a flow mapping.","Expect a value of a flow mapping.","Expect the first item of a flow sequence.","Expect an item of a flow sequence.","Expect STREAM-START.","A FLOW-ENTRY token.","A FLOW-MAPPING-END token.","A FLOW-MAPPING-START token.","The flow mapping style.","A FLOW-SEQUENCE-END token.","A FLOW-SEQUENCE-START token.","The flow sequence style.","The folded scalar style.","A KEY token.","The literal scalar style.","Use LN for line breaks (Unix style).","A MAPPING-END event.","A mapping node.","A MAPPING-START event.","Cannot allocate or reallocate a block of memory.","No error is produced.","An empty event.","An empty node.","An empty token.","Cannot parse the input stream.","Expect the first key of a block mapping.","Expect a block mapping key.","Expect a block mapping value.","Expect a block node or indentless sequence.","Expect a block node.","Expect an entry of a block sequence.","Expect the first entry of a block sequence.","Expect the content of a document.","Expect DOCUMENT-END.","Expect DOCUMENT-START.","Expect nothing.","Expect an empty value of a flow mapping.","Expect the first key of a flow mapping.","Expect a key of a flow mapping.","Expect a value of a flow mapping.","Expect a flow node.","Expect the and of an ordered mapping entry.","Expect a key of an ordered mapping.","Expect a value of an ordered mapping.","Expect an entry of a flow sequence.","Expect the first entry of a flow sequence.","Expect the beginning of an implicit document.","Expect an entry of an indentless sequence.","Expect STREAM-START.","The plain scalar style.","Cannot read or decode the input stream.","A SCALAR event.","A scalar node.","A SCALAR token.","Cannot scan the input stream.","A SEQUENCE-END event.","A sequence node.","A SEQUENCE-START event.","The single-quoted scalar style.","A STREAM-END event.","A STREAM-END token.","A STREAM-START event.","A STREAM-START token.","A TAG-DIRECTIVE token.","A TAG token.","The UTF-16-BE encoding with BOM.","The UTF-16-LE encoding with BOM.","The default UTF-8 encoding.","A VALUE token.","A VERSION-DIRECTIVE token.","Cannot write to the output stream.","The anchor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The position column.","The error context.","The context position.","The token data.","The event data.","The node data.","The end of the stack.","Is the document end indicator implicit?","The end of the token.","The end of the event.","The end of the node.","The end of the document.","","","","","","","","","","","","Error type.","Error type.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The tag handle.","","","","","","","","","","","","The position index.","The node id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The key of the element.","The position line.","The major version number.","The position mark.","The anchor mark.","The minor version number.","The document nodes.","","","","","","","","","","","","Is a simple key possible?","The tag prefix.","Error description.","Error description.","The problem position.","The byte about which the problem occured.","The problematic value (-1 is none).","Is a simple key required?","The beginning of the stack.","Is the document start indicator implicit?","The beginning of the token.","The beginning of the event.","The beginning of the node.","The beginning of the document.","The node tag.","The list of tag directives.","","","","","","","","","","","","","","","","","","","","","","","","","The number of the token.","The top of the stack.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The token type.","The event type.","The node type.","","","","","","","","","","","","","","","","","","","","","","","","","The value of the element.","The version directive.","This structure holds aliases data.","Create an ALIAS event.","Line break type.","Create a MAPPING node and attach it to the document.","Create a SCALAR node and attach it to the document.","Create a SEQUENCE node and attach it to the document.","Add a pair of a key and a value to a MAPPING node.","Add an item to a SEQUENCE node.","Delete a YAML document and all its nodes.","Create the DOCUMENT-END event.","Get a node of a YAML document.","Get the root of a YAML document node.","Create a YAML document.","Create the DOCUMENT-START event.","The document structure.","Finish a YAML stream.","Destroy an emitter.","Emit a YAML document.","Emit an event.","Flush the accumulated characters to the output.","Initialize an emitter.","Start a YAML stream.","Set the preferred line break.","Set if the output should be in the “canonical” format …","Set the output encoding.","Set the indentation increment.","Set a generic output handler.","Set a string output.","Set if unescaped non-ASCII characters are allowed.","Set the preferred line width. -1 means unlimited.","The emitter states.","The emitter structure.","The stream encoding.","Many bad things could happen with the parser and emitter.","Free any memory allocated for an event object.","The event structure.","Event types.","Create a MAPPING-END event.","Create a MAPPING-START event.","Mapping styles.","The pointer position.","An element of a sequence node.","An element of a mapping node.","The node structure.","Node types.","Destroy a parser.","Initialize a parser.","Parse the input stream and produce the next YAML document.","Parse the input stream and produce the next parsing event.","Scan the input stream and produce the next token.","Set the source encoding.","Set a generic input handler.","Set a string input.","The states of the parser.","The parser structure.","The prototype of a read handler.","Create a SCALAR event.","Scalar styles.","Create a SEQUENCE-END event.","Create a SEQUENCE-START event.","Sequence styles.","This structure holds information about a potential simple …","","Create the STREAM-END event.","Create the STREAM-START event.","The tag directive data.","Free any memory allocated for a token object.","The token structure.","Token types.","The version directive data.","The prototype of a write handler."],"i":[13,11,11,5,4,10,8,9,11,11,11,10,11,9,6,5,5,13,11,13,11,8,6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,11,11,11,10,11,11,9,8,11,8,5,13,15,13,6,6,13,15,11,6,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,8,6,13,15,11,6,13,15,13,8,13,11,13,11,11,11,4,4,4,11,11,6,21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,4,5,6,8,9,10,11,13,15,20,23,7,22,22,12,14,16,1,18,12,14,16,18,4,5,6,8,9,10,11,13,15,20,23,22,24,4,5,6,8,9,10,11,13,15,20,23,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,3,4,5,6,8,9,10,11,13,15,20,23,7,21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,17,7,2,19,21,2,18,4,5,6,8,9,10,11,13,15,20,23,19,3,22,24,22,22,22,19,1,18,12,14,16,18,16,18,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,19,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,12,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],25],[[5,5],25],[[6,6],25],[[8,8],25],[[9,9],25],[[10,10],25],[[11,11],25],[[13,13],25],[[15,15],25],[[20,20],25],[[23,23],25],0,0,0,0,0,0,0,0,0,0,0,0,[[4,4],26],[[5,5],26],[[6,6],26],[[8,8],26],[[9,9],26],[[10,10],26],[[11,11],26],[[13,13],26],[[15,15],26],[[20,20],26],[[23,23],26],0,0,[[4,27],28],[[5,27],28],[[6,27],28],[[8,27],28],[[9,27],28],[[10,27],28],[[11,27],28],[[13,27],28],[[15,27],28],[[20,27],28],[[23,27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[4,29]],[[5,29]],[[6,29]],[[8,29]],[[9,29]],[[10,29]],[[11,29]],[[13,29]],[[15,29]],[[20,29]],[[23,29]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[4,4],[[30,[25]]]],[[5,5],[[30,[25]]]],[[6,6],[[30,[25]]]],[[8,8],[[30,[25]]]],[[9,9],[[30,[25]]]],[[10,10],[[30,[25]]]],[[11,11],[[30,[25]]]],[[13,13],[[30,[25]]]],[[15,15],[[30,[25]]]],[[20,20],[[30,[25]]]],[[23,23],[[30,[25]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,0,0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,[[18,33,10],34],[[18,33,33,34,8],34],[[18,33,9],34],0,0,[18],0,[[18,34],16],[18,16],0,0,0,0,[24],0,0,0,0,0,[[24,5]],[[24,26]],[[24,4]],[[24,34]],[[24,35,36]],[[24,33,37,37]],[[24,26]],[[24,34]],0,0,0,0,[14],0,0,0,0,0,0,0,0,0,0,[22],0,0,0,0,[[22,4]],[[22,38,36]],[[22,33,37]],0,0,0,0,0,0,0,0,0,0,0,0,0,[12],0,0,0,0],"c":[],"p":[[3,"yaml_stack_t"],[3,"yaml_version_directive_t"],[3,"yaml_tag_directive_t"],[4,"yaml_encoding_t"],[4,"yaml_break_t"],[4,"yaml_error_type_t"],[3,"yaml_mark_t"],[4,"yaml_scalar_style_t"],[4,"yaml_sequence_style_t"],[4,"yaml_mapping_style_t"],[4,"yaml_token_type_t"],[3,"yaml_token_t"],[4,"yaml_event_type_t"],[3,"yaml_event_t"],[4,"yaml_node_type_t"],[3,"yaml_node_t"],[3,"yaml_node_pair_t"],[3,"yaml_document_t"],[3,"yaml_simple_key_t"],[4,"yaml_parser_state_t"],[3,"yaml_alias_data_t"],[3,"yaml_parser_t"],[4,"yaml_emitter_state_t"],[3,"yaml_emitter_t"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"i32"],[6,"yaml_write_handler_t"],[4,"c_void"],[15,"u64"],[6,"yaml_read_handler_t"]]},\
"utf8parse":{"doc":"A table-driven UTF-8 Parser","t":"DILLLLKLLLLLKLLLL","n":["Parser","Receiver","advance","borrow","borrow_mut","clone","codepoint","default","eq","fmt","from","into","invalid_sequence","new","try_from","try_into","type_id"],"q":[[0,"utf8parse"]],"d":["A parser for Utf8 Characters","Handles codepoint and invalid sequence events from the …","Advance the parser","","","","Called whenever a codepoint is parsed successfully","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Called when an invalid_sequence is detected","Create a new Parser","","",""],"i":[0,0,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1],"f":[0,0,[[1,2,3]],[[]],[[]],[1,1],[4],[[],1],[[1,1],5],[[1,6],7],[[]],[[]],[[]],[[],1],[[],8],[[],8],[[],9]],"c":[],"p":[[3,"Parser"],[8,"Receiver"],[15,"u8"],[15,"char"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"wasm4_stubs":{"doc":"","t":"FFFFFFFFFFFF","n":["blit","blitSub","diskr","diskw","hline","line","oval","rect","textUtf8","tone","traceUtf8","vline"],"q":[[0,"wasm4_stubs"]],"d":["","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[1,2,2,3,3,3]],[[1,2,2,3,3,3,3,3,3]],[[1,3],3],[[1,3],3],[[2,2,3]],[[2,2,2,2]],[[2,2,3,3]],[[2,2,3,3]],[[1,4,2,2]],[[3,3,3,3]],[[1,4]],[[2,2,3]]],"c":[],"p":[[15,"u8"],[15,"i32"],[15,"u32"],[15,"usize"]]},\
"wasm4_sx":{"doc":"wasm4-sx - Opinionated wrapper around WASM-4","t":"DNNNNNNNEDNDDEEDSDDEEDNNNNNNNNNNNNNNEDNNNNNNNNNDEEENNNNNNDEEDDDDNDNNNDDDNNLCMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOMFFFLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMCLLLLLLLLLLLLLLLLLMLM","n":["Adsr","Bottom","C12_5","C25","C50","C75","Center","Center","Channel","Color","Down","DrawColors","DrawColorsBuilder","DrawColorsIndex","DutyCycle","Engine","FPS","FrameContext","FrequencySlide","GamepadButton","GamepadIndex","GamepadState","I1","I1","I2","I2","I3","I3","I4","I4","Left","Left","Left","Left","Middle","Middle","MouseButton","MouseState","Noise","P1","P1","P2","P2","P3","P3","P4","P4","Palette","PaletteColor","PaletteIndex","Panning","Pulse1","Pulse2","Right","Right","Right","Right","Text","TextHorizontalAlignment","TextVerticalAligment","Tone","ToneBuilder","ToneFlags","ToneFlagsBuilder","Top","TrackReader","Transparent","Triangle","Up","Vec2","Volume","W4RefCell","X","Z","all","arrayvec","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","builder","builder","builder","byteorder","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","const_str","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","draw","draw_colors","duration","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_count","frame_skipped","frequency","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","g","gamepad","gamepads","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_button_just_pressed","is_button_just_pressed","is_button_pressed","is_button_pressed","mouse","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_slide","new_with_peak","palette","partial_cmp","partial_cmp","partial_cmp","play","play","play_tick","position","println_w4","r","rand_f64","rand_reseed","rand_u8","run_frame","screen","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_color","set_frame_skip","setup_panic_handler_w4","to_binary","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","volume","wasm4","with_channel","with_duration","with_duty_cycle","with_flags","with_frequency","with_frequency","with_horizontal_alignment","with_index","with_line_separation","with_padding_x","with_padding_y","with_panning","with_vertical_alignment","with_volume","with_x","with_y","x","x","y","y"],"q":[[0,"wasm4_sx"]],"d":["ADSR envelope.","Align bottom.","12.5 %.","25 %.","50 %.","75 %.","Align center.","Pan center.","Tone channel (waveform type).","RGB color with u8 components.","Down button.","Draw colors.","Draw colors builder.","Draw colors index.","Duty cycle.","Engine: wrapper around direct layers.","Target frames per second.","Frame context: engine state for a frame.","Frequency slide.","Gamepad button.","Gamepad index.","Gamepad state.","First draw color.","First gamepad.","Second draw color.","Second gamepad.","Third draw color.","Third gamepad.","Fourth draw color.","Fourth gamepad.","Left button.","Left button.","Align left.","Pan left.","Middle button.","Align middle.","Mouse button.","Mouse state.","Noise.","First palette color.","First palette index.","Second palette color.","Second palette index.","Third palette color.","Third palette index.","Fourth palette color.","Fourth palette index.","Color palette.","Palette color.","Palette index.","Panning.","First type of square wave.","Second type of square wave.","Right button.","Right button.","Align right.","Pan right.","A text drawing helper.","Horizontal alignment.","Vertical alignment.","Tone.","Tone builder.","Tone flags.","Tone flags builder.","Align top.","Track reader.","Transparent.","Triangle wave.","Up button.","A 2D vector.","Tone volume.","A “safe” global RefCell to use in the WASM-4 context.","X button.","Z button.","Get all gamepad indices.","","Blue component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the tone.","Build the tone flags.","Build draw colors.","Create a new draw colors builder.","Create a new tone builder.","Create a tone flags builder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw the text.","Get the global draw colors.","Duration.","","","","","","","","","","","","","","","","","","","","","","","Flags.","","","","","","","","","Get the current frame count.","Get the frame skip value.","Frequency.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Green component.","Get a specific gamepad state.","Get the gamepads state.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if a button was just pressed.","Check if a button was just pressed.","Check if a button is pressed.","Check if a button is pressed.","Get the mouse state.","Build a new RefCell.","Build a new track reader.","Build a new color palette.","Build a new text drawing helper.","Create a new tone builder.","Create a tone flags builder.","Build a new color.","Create a new draw colors builder.","Build a new envelope.","Build a new frequency.","Build a new default tone.","Build new default tone flags.","Build a new volume with sustain.","Build a new 2D vector.","Build a new frequency slide.","Build a new volume with sustain and peak.","Get the global palette.","","","","Play the tone.","Play the tone.","Play the track using a tick count.","Mouse position.","Print a line.","Red component.","Generate a random f64.","Reseed the RNG.","Generate a random u8.","Execute code for a frame.","Get the screen state.","","","","","","","","","Set a specific palette color.","Set frame skip.","Setup panic handler for WASM-4.","Convert tone to binary.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Volume.","","Set a channel.","Set the tone duration.","Set a duty cycle value.","Set the tone flags.","Set the tone frequency.","Copy the tone with another frequency.","Set the horizontal alignment.","Set a specific palette color for a specific draw color …","Set the line separation value.","Set the X padding.","Set the Y padding.","Set panning.","Set the vertical alignment.","Set the tone volume.","Set the X coordinate.","Set the Y coordinate.","X coordinate.","X coordinate.","Y coordinate.","Y coordinate."],"i":[0,16,19,19,19,19,15,21,0,0,12,0,0,0,0,0,53,0,0,0,0,0,11,1,11,1,11,1,11,1,12,13,15,21,13,16,0,0,18,10,14,10,14,10,14,10,14,0,0,0,0,18,18,12,13,15,21,0,0,0,0,0,0,0,16,0,10,18,12,0,0,0,12,12,1,0,9,27,53,41,43,39,33,3,5,9,10,11,8,7,1,12,25,13,26,14,15,16,17,18,19,20,21,4,6,22,23,27,53,41,43,39,33,3,5,9,10,11,8,7,1,12,25,13,26,14,15,16,17,18,19,20,21,4,6,22,23,3,5,7,8,4,6,0,9,10,11,8,1,12,13,14,15,16,17,18,19,20,21,4,6,22,23,9,10,11,8,1,12,13,14,15,16,17,18,19,20,21,4,6,22,23,9,8,23,0,3,5,9,8,7,25,26,17,18,19,20,21,4,6,22,27,27,17,18,19,20,21,4,6,22,33,53,4,9,8,17,18,19,20,21,4,6,22,23,9,8,17,18,19,20,21,4,6,22,23,4,17,18,19,20,21,4,6,22,53,53,4,27,53,41,43,39,39,33,3,5,9,9,10,11,8,8,7,1,12,12,25,13,13,26,14,15,16,17,17,18,18,19,19,20,20,21,21,4,6,6,22,22,23,23,9,41,41,9,8,27,53,41,43,39,33,3,5,9,10,11,8,7,1,12,25,13,26,14,15,16,17,18,19,20,21,4,6,22,23,25,26,25,26,41,27,43,39,33,3,5,9,7,17,20,4,6,22,23,20,22,53,9,8,23,3,4,43,26,0,9,0,0,0,53,41,17,18,19,20,21,4,6,22,39,53,0,4,9,10,11,8,1,12,13,14,15,16,17,18,19,20,21,4,6,22,23,27,53,41,43,39,33,3,5,9,10,11,8,7,1,12,25,13,26,14,15,16,17,18,19,20,21,4,6,22,23,27,53,41,43,39,33,3,5,9,10,11,8,7,1,12,25,13,26,14,15,16,17,18,19,20,21,4,6,22,23,27,53,41,43,39,33,3,5,9,10,11,8,7,1,12,25,13,26,14,15,16,17,18,19,20,21,4,6,22,23,4,0,5,3,5,3,3,4,33,7,33,33,33,5,33,3,33,33,26,23,26,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[5,6],[7,8],[[],7],[[],3],[[],5],0,[9,9],[10,10],[11,11],[8,8],[1,1],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[4,4],[6,6],[22,22],[23,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],24],[[8,8],24],[[23,23],24],0,[[],3],[[],5],[[],9],[[],8],[[],7],[[],25],[[],26],[[],17],[[],18],[[],19],[[],20],[[],21],[[],4],[[],6],[[],22],[27],[27],[28,[[29,[17]]]],[28,[[29,[18]]]],[28,[[29,[19]]]],[28,[[29,[20]]]],[28,[[29,[21]]]],[28,[[29,[4]]]],[28,[[29,[6]]]],[28,[[29,[22]]]],[[[33,[[32,[[31,[30]]]]]]]],0,0,[[9,9],34],[[8,8],34],[[17,17],34],[[18,18],34],[[19,19],34],[[20,20],34],[[21,21],34],[[4,4],34],[[6,6],34],[[22,22],34],[[23,23],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[17,35],36],[[18,35],36],[[19,35],36],[[20,35],36],[[21,35],36],[[4,35],36],[[6,35],36],[[22,35],36],[[],37],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[[2,[38]]],39],[[]],[[]],[[]],[38,9],[[]],[[]],[[]],[[]],[40,8],[[]],[[]],[[]],[30,12],[[]],[[]],[30,13],[[]],[[]],[[]],[[]],[38,17],[[]],[30,18],[[]],[30,19],[[]],[38,20],[[]],[30,21],[[]],[[]],[40,6],[[]],[[]],[40,22],[[],23],[[]],0,[[41,1],25],[41,[[2,[25]]]],[[9,42]],[[8,42]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,12],34],[[26,13],34],[[25,12],34],[[26,13],34],[41,26],[[],27],[[[31,[30]]],43],[[[2,[9]]],39],[[[32,[[31,[30]]]]],[[33,[[32,[[31,[30]]]]]]]],[[],3],[[],5],[[30,30,30],9],[[],7],[[30,30,30,30],17],[40,20],[[],4],[[],6],[30,22],[[44,44],23],[[40,40],20],[[30,30],22],0,[[9,9],[[45,[24]]]],[[8,8],[[45,[24]]]],[[23,23],[[45,[24]]]],[3],[4],[[43,46]],[26],0,0,[[],47],[37],[[[48,[30]]],30],[49],0,[[17,50],29],[[18,50],29],[[19,50],29],[[20,50],29],[[21,50],29],[[4,50],29],[[6,50],29],[[22,50],29],[[39,14,9]],[38],0,[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,0,[[5,18],5],[[3,17],3],[[5,19],5],[[3,6],3],[[3,20],3],[[4,20],4],[[[33,[[32,[[31,[30]]]]]],15],[[33,[[32,[[31,[30]]]]]]]],[[7,11,10],7],[[[33,[[32,[[31,[30]]]]]],44],[[33,[[32,[[31,[30]]]]]]]],[[[33,[[32,[[31,[30]]]]]],44],[[33,[[32,[[31,[30]]]]]]]],[[[33,[[32,[[31,[30]]]]]],44],[[33,[[32,[[31,[30]]]]]]]],[[5,21],5],[[[33,[[32,[[31,[30]]]]]],16],[[33,[[32,[[31,[30]]]]]]]],[[3,22],3],[[[33,[[32,[[31,[30]]]]]],44],[[33,[[32,[[31,[30]]]]]]]],[[[33,[[32,[[31,[30]]]]]],44],[[33,[[32,[[31,[30]]]]]]]],[26,52],0,[26,52],0],"c":[],"p":[[4,"GamepadIndex"],[15,"array"],[3,"ToneBuilder"],[3,"Tone"],[3,"ToneFlagsBuilder"],[3,"ToneFlags"],[3,"DrawColorsBuilder"],[3,"DrawColors"],[3,"Color"],[4,"PaletteColor"],[4,"DrawColorsIndex"],[4,"GamepadButton"],[4,"MouseButton"],[4,"PaletteIndex"],[4,"TextHorizontalAlignment"],[4,"TextVerticalAligment"],[3,"Adsr"],[4,"Channel"],[4,"DutyCycle"],[3,"FrequencySlide"],[4,"Panning"],[3,"Volume"],[3,"Vec2"],[4,"Ordering"],[3,"GamepadState"],[3,"MouseState"],[3,"W4RefCell"],[8,"Deserializer"],[4,"Result"],[15,"u8"],[15,"slice"],[8,"AsRef"],[3,"Text"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"u32"],[3,"Palette"],[15,"u16"],[3,"FrameContext"],[8,"Hasher"],[3,"TrackReader"],[15,"i32"],[4,"Option"],[15,"usize"],[15,"f64"],[8,"RangeBounds"],[8,"Fn"],[8,"Serializer"],[3,"TypeId"],[15,"i16"],[3,"Engine"]]},\
"wasm4_sys":{"doc":"","t":"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFFFFFFFFF","n":["BLIT_1BPP","BLIT_2BPP","BLIT_FLIP_X","BLIT_FLIP_Y","BLIT_ROTATE","BUTTON_1","BUTTON_2","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT","BUTTON_UP","DRAW_COLORS","FRAMEBUFFER","GAMEPAD1","GAMEPAD2","GAMEPAD3","GAMEPAD4","MOUSE_BUTTONS","MOUSE_LEFT","MOUSE_MIDDLE","MOUSE_RIGHT","MOUSE_X","MOUSE_Y","NETPLAY","PALETTE","SCREEN_SIZE","SYSTEM_FLAGS","SYSTEM_HIDE_GAMEPAD_OVERLAY","SYSTEM_PRESERVE_FRAMEBUFFER","TONE_MODE1","TONE_MODE2","TONE_MODE3","TONE_MODE4","TONE_NOISE","TONE_PAN_LEFT","TONE_PAN_RIGHT","TONE_PULSE1","TONE_PULSE2","TONE_TRIANGLE","blit","blit_sub","diskr","diskw","hline","line","oval","rect","text","tone","trace","vline"],"q":[[0,"wasm4_sys"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copies pixels to the framebuffer.","Copies a subregion within a larger sprite atlas to the …","Reads up to <code>size</code> bytes from persistent storage into the …","Writes up to <code>size</code> bytes from the pointer <code>src</code> into …","Draws a horizontal line","Draws a line between two points.","Draws an oval (or circle).","Draws a rectangle.","Draws text using the built-in system font.","Plays a sound tone.","Prints a message to the debug console.","Draws a vertical line"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3,3,4,4,4]],[[[2,[1]],3,3,4,4,4,4,4,4]],0,0,[[3,3,4]],[[3,3,3,3]],[[3,3,4,4]],[[3,3,4,4]],[[[5,[[2,[1]]]],3,3]],[[4,4,4,4]],[[[5,[6]]]],[[3,3,4]]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"i32"],[15,"u32"],[8,"AsRef"],[15,"str"]]},\
"wasm4_tracker":{"doc":"Simple WASM-4 music tracker.","t":"NNDNNNNNNNNNNNNNNNDDEDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLMLLMMMFLLLLLLLLLLLLLLLLLLLLMLL","n":["A","Ab","Args","As","B","Bb","C","Cs","D","Db","Ds","E","Eb","F","Fs","G","Gb","Gs","Note","NotePitch","NotePitchKey","Track","as_frequency","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command_for_update","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","input","into","into","into","into","into","key","new","new","notes","octave","output","parse_description","print","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","voices","write","write"],"q":[[0,"wasm4_tracker"]],"d":["A.","A♭.","Command-line arguments.","A♯.","B.","B♭.","C.","C♯.","D.","D♭.","D♯.","E.","E♭.","F.","F♯.","G.","G♭.","G♯.","A note.","Note pitch.","Note pitch key.","Music track.","Compute the note frequency.","","","","","","","","","","","","","","","","","","","","","","","","Frame to play.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Input YAML file.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Key.","Build a new note pitch.","Build a new note.","Notes.","Octave.","Output binary file.","Parse a YAML description file to a track.","Print the track to text.","","","","","","","","","","","","","","","","","","","","Tones.","Write a track to binary.","Write a note to binary."],"i":[4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,1,6,6,6,4,1,9,5,6,4,1,9,5,4,5,4,5,6,6,6,4,1,9,5,5,6,4,1,9,5,6,6,6,6,6,4,1,9,5,1,1,5,9,1,6,0,9,4,5,6,4,1,9,5,6,4,1,9,5,6,4,1,9,5,6,6,5,9,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[5,5],[[]],[[]],[[],3],[[],3],[[6,7],8],[[4,7],8],[[1,7],8],[[9,7],8],[[5,7],8],0,[[]],[[]],[[]],[[]],[[]],[10,[[12,[6,11]]]],[10,[[12,[6,11]]]],[[],[[14,[13]]]],0,[[]],[[]],[[]],[[]],[[]],0,[[4,15],1],[[2,[17,[16]]],5],0,0,0,[[[19,[18]]],[[12,[9,0]]]],[9],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],20],[[],20],[[],20],[[],20],[[],20],[[6,10],[[12,[11]]]],[[6,10],[[12,[11]]]],0,[[9,21],22],[[5,21],22]],"c":[],"p":[[3,"NotePitch"],[15,"u16"],[3,"Command"],[4,"NotePitchKey"],[3,"Note"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"Track"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"i8"],[3,"Tone"],[3,"Vec"],[3,"Path"],[8,"AsRef"],[3,"TypeId"],[8,"Write"],[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
